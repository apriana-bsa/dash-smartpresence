<?php

namespace App\Http\Controllers;

use App\Utils;

use Hamcrest\Util;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Session;
use Yajra\Datatables\Datatables;
use DB;
use PDO;
use PHPExcel;
use PHPExcel_Writer_Excel2007;
use PHPExcel_Style_Alignment;
use PHPExcel_Style_Border;
use PHPExcel_Worksheet_MemoryDrawing;
use PHPExcel_Cell_DataType;
use PHPExcel_Style_Fill;
use PHPExcel_Style_NumberFormat;

use PHPExcel_Chart_DataSeriesValues;
use PHPExcel_Chart_DataSeries;
use PHPExcel_Chart_Layout;
use PHPExcel_Chart_PlotArea;
use PHPExcel_Chart_Title;
use PHPExcel_Chart_Legend;
use PHPExcel_Chart;
use PHPExcel_IOFactory;

use FPDF;
use ZipArchive;

class LaporanController extends Controller
{

    public function __construct()
    {
        $this->middleware('auth');
    }

    public function perPegawai()
    {
        if(Utils::cekHakakses('laporanperpegawai','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }

            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();
            Utils::insertLogUser('akses menu laporan perpegawai');
            return view('laporan/perpegawai/index', ['data' => '', 'valuetglawalakhir' => $valuetglawalakhir, 'menu' => 'lapperpegawai']);
        } else {
            return redirect('/');
        }
    }

    public function perPegawaiSubmitTampilan($idpegawai, $tanggalawal, $tanggalakhir)
    {
        $tanggalawal = str_replace('-', '/', $tanggalawal);
        $tanggalakhir = str_replace('-', '/', $tanggalakhir);

        if(!Utils::cekDateTime($tanggalawal) && !Utils::cekDateTime($tanggalakhir)){
            return '';
        }

        $pdo = DB::connection('perusahaan_db')->getPdo();
        $sql = 'SELECT * FROM pegawai WHERE id = :idpegawai';
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai', $idpegawai);
        $stmt->execute();
        $pegawai = $stmt->fetch(PDO::FETCH_OBJ);


        //set session tanggalawal dan tanggalakhir dengan format(dd/mm/yyyy)
        Session::set('lapperpegawai_tanggalawal', $tanggalawal);
        Session::set('lapperpegawai_tanggalakhir', $tanggalakhir);

        // data atribut pegawai
        $sql = 'SELECT
					a.atribut,
					an.nilai
				FROM
					atributnilai an LEFT JOIN atribut a ON an.idatribut=a.id
					LEFT JOIN pegawaiatribut pa ON pa.idatributnilai=an.id
				WHERE
					pa.idpegawai = :idpegawai';
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai', $idpegawai);
        $stmt->execute();
        $atributpegawai = $stmt->fetchAll(PDO::FETCH_OBJ);

        // data pegawai lokasi
        $sql = 'SELECT
					IFNULL(GROUP_CONCAT(l.nama SEPARATOR ", "),"") as lokasi
				FROM
					lokasi l,
					pegawailokasi pl
				WHERE
				    pl.idlokasi=l.id AND
					pl.idpegawai = :idpegawai
                GROUP BY
                    pl.idpegawai';
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai', $idpegawai);
        $stmt->execute();
        $lokasipegawai = $stmt->fetch(PDO::FETCH_OBJ);
        //cek apakah pegawai punya jadwalshift?
        $sql = '(
                    SELECT
                        jk.id
                    FROM
                        pegawaijamkerja pjk,
                        jamkerja jk
                    WHERE
                        pjk.idjamkerja=jk.id AND
                        jk.jenis="shift" AND
                        pjk.idpegawai=:idpegawai AND
                        pjk.berlakumulai BETWEEN STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")
                    LIMIT 1
                )
                UNION
                (
                    SELECT
                        jk.id
                    FROM
                        pegawaijamkerja pjk,
                        jamkerja jk
                    WHERE
                        jk.id=pjk.idjamkerja AND
                        jk.jenis="shift" AND
                        pjk.idpegawai=:idpegawai1 AND
                        pjk.berlakumulai<=STR_TO_DATE(:tanggalawal1,"%d/%m/%Y")
                    ORDER BY
                        pjk.berlakumulai DESC
                    LIMIT 1
                )';
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai', $idpegawai);
        $stmt->bindValue(':tanggalawal', $tanggalawal);
        $stmt->bindValue(':tanggalakhir', $tanggalakhir);
        $stmt->bindValue(':idpegawai1', $idpegawai);
        $stmt->bindValue(':tanggalawal1', $tanggalawal);
        $stmt->execute();
        $adajamkerjashift = '';
        if ($stmt->rowCount() > 0) {
            $adajamkerjashift = 'ada';
        }

        $tampilflexytime = Utils::getDataWhere($pdo,'pengaturan','tampilkan_flexytime');

        Session::set('lapperpegawai_adajamkerjashift', $adajamkerjashift);
        return view('laporan/perpegawai/data', ['pegawai' => $pegawai, 'lokasipegawai' => $lokasipegawai, 'atributpegawai' => $atributpegawai, 'adajamkerjashift' => $adajamkerjashift, 'tampilflexytime' => $tampilflexytime, 'menu' => 'lapperpegawai']);
    }

    public function perPegawaiRiwayatData(Request $request, $idpegawai)
    {
        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }
        $pdo = DB::connection('perusahaan_db')->getPdo();
        $where = ' AND idpegawai = :idpegawai1';
        $wheretable = ' AND la.idpegawai = :idpegawai2';
        if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
            $where .= ' AND waktu>=CONCAT(STR_TO_DATE(:tanggalawal1,"%d/%m/%Y")," 00:00:00") AND waktu<=CONCAT(STR_TO_DATE(:tanggalakhir1,"%d/%m/%Y")," 23:59:59")';
            $wheretable .= ' AND la.waktu>=CONCAT(STR_TO_DATE(:tanggalawal2,"%d/%m/%Y")," 00:00:00") AND la.waktu<=CONCAT(STR_TO_DATE(:tanggalakhir2,"%d/%m/%Y")," 23:59:59")';
        }
        $table = '(
                    SELECT
                        la.id,
                        la.idpegawai,
                        la.waktu,
                        la.waktu as tanggal,
                        la.waktu as tanggalasli,
                        la.masukkeluar,
                        IFNULL(amk.alasan,"-") as alasan,
                        la.terhitungkerja,
                        la.status,
                        m.nama as mesin,
                        la.flag,
                        la.lat,
                        la.lon,
                        getlokasiabsen(la.lat, la.lon) as lokasi
                    FROM
                        logabsen la
                        LEFT JOIN mesin m ON m.id=la.idmesin
                        LEFT JOIN alasanmasukkeluar amk ON amk.id=la.idalasanmasukkeluar
                   WHERE
                        1=1
                        '.$wheretable.'
                    ORDER BY
                        la.waktu ASC
                ) x';
        $columns = array('tanggal','lokasi','masukkeluar','flag','alasan','terhitungkerja','status','mesin','lat','lon');
        $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai1', $idpegawai);
        $stmt->bindValue(':idpegawai2', $idpegawai);
        if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
            $stmt->bindValue(':tanggalawal1', Session::get("lapperpegawai_tanggalawal"));
            $stmt->bindValue(':tanggalawal2', Session::get("lapperpegawai_tanggalawal"));
            $stmt->bindValue(':tanggalakhir1', Session::get("lapperpegawai_tanggalakhir"));
            $stmt->bindValue(':tanggalakhir2', Session::get("lapperpegawai_tanggalakhir"));
        }
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        $totalData = $row['total'];
        $totalFiltered = $totalData;
        $limit = $request->input('length');
        $start = $request->input('start');
        $orderColumn = $columns[$request->input('order.0.column')];
        $orderAction = $request->input('order.0.dir');
        $orderBy = $orderColumn.' '.$orderAction;

        if(!empty($request->input('search.value'))){
            $search = $request->input('search.value');
            $where .= Utils::searchDatatableQuery($columns);
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai1', $idpegawai);
            $stmt->bindValue(':idpegawai2', $idpegawai);
            if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal1', Session::get("lapperpegawai_tanggalawal"));
                $stmt->bindValue(':tanggalawal2', Session::get("lapperpegawai_tanggalawal"));
                $stmt->bindValue(':tanggalakhir1', Session::get("lapperpegawai_tanggalakhir"));
                $stmt->bindValue(':tanggalakhir2', Session::get("lapperpegawai_tanggalakhir"));
            }
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                }
            }
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalFiltered = $row['total'];
        }

        $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai1', $idpegawai);
        $stmt->bindValue(':idpegawai2', $idpegawai);
        if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
            $stmt->bindValue(':tanggalawal1', Session::get("lapperpegawai_tanggalawal"));
            $stmt->bindValue(':tanggalawal2', Session::get("lapperpegawai_tanggalawal"));
            $stmt->bindValue(':tanggalakhir1', Session::get("lapperpegawai_tanggalakhir"));
            $stmt->bindValue(':tanggalakhir2', Session::get("lapperpegawai_tanggalakhir"));
        }
        if(!empty($request->input('search.value'))) {
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                }
            }
        }
        $stmt->execute();
        $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $data = array();
        if(!empty($originaldata)){
            foreach($originaldata as $key){
                $tempdata['tanggal'] = $key['tanggal'];
                for($i=1;$i<count($columns);$i++){
                    if($columns[$i] == 'masukkeluar' || $columns[$i] == 'terhitungkerja' || $columns[$i] == 'status') {
                        $tempdata[$columns[$i]] = Utils::labelKolom($key[$columns[$i]] == 'v' ? 'valid' : ($key[$columns[$i]] == 'c' ? 'confirm' : ($key[$columns[$i]] == 'na' ? 'notapprove' : $key[$columns[$i]])));
                    }elseif($columns[$i] == 'flag'){
                        $tempdata[$columns[$i]] = $key[$columns[$i]] != '' ? trans('all.'.(str_replace('-','',$key[$columns[$i]]))) : '';
                    }else{
                        $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                    }
                }
                $data[] = $tempdata;
            }
        }
        return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
    }

    public function perPegawaiRekapitulasiData(Request $request, $idpegawai)
    {
        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }
        $pdo = DB::connection('perusahaan_db')->getPdo();
        $where = '';
        $wheretable = '';
        if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
            $wheretable .= ' AND ra.tanggal >= STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND ra.tanggal <= STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")';
        }
        $table = '(
                    SELECT
                        ra.id,
                        ra.idpegawai,
                        ra.tanggal,
                        ra.jadwalmasukkerja as libur,
                        IFNULL(hl.keterangan,"") as harilibur,
                        ra.masukkerja,
                        IFNULL(atm.alasan,"") as alasantidakmasuk,
                        IFNULL(jk.nama,"") as jamkerja,
                        IFNULL(amk.alasan,"") as alasanmasuk,
                        IFNULL(ra.waktumasuk,"") as waktumasuk,
                        IFNULL(ra.waktukeluar,"") as waktukeluar,
                        ra.flag_terlambat,
                        ra.flag_pulangawal,
                        ra.flag_lembur,
                        CONCAT(IFNULL(TIME(ra.waktumasuk),"")," - ",IFNULL(TIME(ra.waktukeluar),"")) AS waktukerja,
                        IF(ra.selisihmasuk>0,SEC_TO_TIME(ra.selisihmasuk),"00:00:00") as datangawal,
                        IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"00:00:00") as terlambat,
                        IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"00:00:00") as pulanglebihawal,
                        SEC_TO_TIME(ra.lamakerja) as lamakerja,
                        SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
                        SEC_TO_TIME(ra.lamalembur) as lamalembur,
                        ROUND(ra.lamakerja/60) as lamakerja1,
                        ROUND(ra.lamalembur/60) as lamalembur1,
                        IFNULL(GROUP_CONCAT(raj.waktu ORDER BY IF(raj.checking="start",0,1) ASC, IF(raj.masukkeluar="m",0,1) ASC SEPARATOR "|" ),"") as jadwalkerja2,
                        IFNULL(GROUP_CONCAT(raj.waktu SEPARATOR "|" ),"") as jadwalkerja,
                        ra.absentidaklengkap as kelengkapanpresensi
                    FROM
                        rekapabsen ra
                        LEFT JOIN harilibur hl ON hl.id=ra.idharilibur
                        LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
                        LEFT JOIN jamkerja jk ON jk.id=ra.idjamkerja
                        LEFT JOIN alasanmasukkeluar amk ON amk.id=ra.idalasanmasuk
                        LEFT JOIN rekapabsen_jadwal raj ON raj.idrekapabsen=ra.id AND raj.checking IN ("start", "end")
                    WHERE
                        ra.idpegawai = :idpegawai
                        '.$wheretable.'
                    GROUP BY
                        ra.id
                ) x';
        $columns = array('','tanggal','libur','harilibur','masukkerja','alasantidakmasuk','jamkerja','jadwalkerja','alasanmasuk','waktumasuk','waktukeluar','flag','datangawal','terlambat','pulanglebihawal','lamakerja','lamaflexytime','lamalembur','kelengkapanpresensi');
        $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai', $idpegawai);
        if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
            $stmt->bindValue(':tanggalawal', Session::get("lapperpegawai_tanggalawal"));
            $stmt->bindValue(':tanggalakhir', Session::get("lapperpegawai_tanggalakhir"));
        }
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        $totalData = $row['total'];
        $totalFiltered = $totalData;
        $limit = $request->input('length');
        $start = $request->input('start');
        $orderColumn = $columns[$request->input('order.0.column')];
        $orderAction = $request->input('order.0.dir');
        $orderBy = $orderColumn.' '.$orderAction;

        if(!empty($request->input('search.value'))){
            $search = $request->input('search.value');
            $where .= Utils::searchDatatableQuery($columns);
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai', $idpegawai);
            if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal', Session::get("lapperpegawai_tanggalawal"));
                $stmt->bindValue(':tanggalakhir', Session::get("lapperpegawai_tanggalakhir"));
            }
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                }
            }
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalFiltered = $row['total'];
        }

        $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai', $idpegawai);
        if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
            $stmt->bindValue(':tanggalawal', Session::get("lapperpegawai_tanggalawal"));
            $stmt->bindValue(':tanggalakhir', Session::get("lapperpegawai_tanggalakhir"));
        }
        if(!empty($request->input('search.value'))) {
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                }
            }
        }
        $stmt->execute();
        $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $data = array();
        if(!empty($originaldata)){
            foreach($originaldata as $key){
                $tempdata['detail'] = '<center><i style="cursor:pointer;" onclick="detailRekapitulasi('.$key['id'].')" class=" fa fa-info-circle"></i></center>';
                for($i=1;$i<count($columns);$i++){
                    $value = '';
                    if($columns[$i] == 'flag') {
                        $terlambat = $key['flag_terlambat'] != '' ? ($key['flag_terlambat'] == 'y' ? trans('all.terlambat').' ' : trans('all.tidakterlambat').' ') : '';
                        $pulangawal = $key['flag_pulangawal'] != '' ? ($key['flag_pulangawal'] == 'y' ? trans('all.pulangawal').' ' : trans('all.tidakpulangawal').' ') : '';
                        $lembur = $key['flag_lembur'] != '' ? ($key['flag_lembur'] == 'y' ? trans('all.lembur') : trans('all.tidaklembur')) : '';
                        $value = $terlambat.$pulangawal.$lembur;
                    }elseif($columns[$i] == 'masukkerja') {
                        $value = Utils::labelKolom($key[$columns[$i]]);
                    }elseif($columns[$i] == 'libur') {
                        $value = Utils::labelKolom($key[$columns[$i]] == 't' ? 'y' : 't');
                    }elseif($columns[$i] == 'kelengkapanpresensi') {
                        $value = $key[$columns[$i]] == '' ? '' : ($key[$columns[$i]] == 'm' ? '<center>'.trans('all.kurangabsenmasuk').'</center>' : '<center>'.trans('all.kurangabsenkeluar').'</center>');
                    }elseif($columns[$i] == 'jadwalkerja') {
                        if($key['jadwalkerja'] == '') {
                            $value = '';
                        }else{
                            $jadwalKerja ='';
                            $explode = explode('|', $key['jadwalkerja']);
                            $jumlah = floor(count($explode) / 2);
                            $a = 0;
                            for($j=0;$j<$jumlah;$j++) {
                                $awal_tgl = substr($explode[$j+$a],0,10);
                                $awal_jam = substr($explode[$j+$a],11,8);
                                $akhir_tgl = substr($explode[$j+$a+1],0,10);
                                $akhir_jam = substr($explode[$j+$a+1],11,8);
                                $tandaBedaHari = '';
                                if ($awal_tgl != $akhir_tgl) {
                                    $tandaBedaHari = '*';
                                }
                                $hoverspan = '';
                                if($tandaBedaHari != ''){
                                    $hoverspan = 'title="'.trans('all.bedahari').'"';
                                }
                                $jadwalKerja .= '<span '.$hoverspan.'>'.$awal_jam.' ~ '.$akhir_jam.' '.$tandaBedaHari.'</span>';
                                if ($j < $jumlah) {
                                    $jadwalKerja .= '<br>';
                                }
                                $a++;
                            }
                            $value = $jadwalKerja;
                        }
                    }elseif($columns[$i] == 'waktumasuk' || $columns[$i] == 'waktukeluar') {
                        $res = '';
                        if($key[$columns[$i]] != ''){
                            $ex_res = explode(' ', $key[$columns[$i]]);
                            $res = $ex_res[1];
                        }
                        $value = $res;
                    }else{
                        $value = htmlentities($key[$columns[$i]]);
                    }
                    $tempdata[$columns[$i]] = $value;
                }
                $data[] = $tempdata;
            }
        }
        return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
    }

    public function perPegawaiIjinTidakMasukData(Request $request, $idpegawai)
    {
        $pdo = DB::connection('perusahaan_db')->getPdo();
        $where = '';
        $columns = array('tanggalawal','alasan','keterangan','status');
        $table = '(SELECT i.id,i.idpegawai,i.tanggalawal,i.tanggalakhir,a.alasan,i.keterangan,i.status FROM ijintidakmasuk i LEFT JOIN alasantidakmasuk a ON i.idalasantidakmasuk=a.id) x';
        $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE idpegawai = :idpegawai '.$where;
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai', $idpegawai);
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        $totalData = $row['total'];
        $totalFiltered = $totalData;
        $limit = $request->input('length');
        $start = $request->input('start');
        $orderColumn = $columns[$request->input('order.0.column')];
        $orderAction = $request->input('order.0.dir');
        $orderBy = $orderColumn.' '.$orderAction;

        if(!empty($request->input('search.value'))){
            $search = $request->input('search.value');
            $where .= Utils::searchDatatableQuery($columns);
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE idpegawai = :idpegawai '.$where;
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai', $idpegawai);
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                }
            }
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalFiltered = $row['total'];
        }

        $sql = 'SELECT * FROM '.$table.' WHERE idpegawai = :idpegawai ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai', $idpegawai);
        if(!empty($request->input('search.value'))) {
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                }
            }
        }
        $stmt->execute();
        $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $data = array();
        if(!empty($originaldata)){
            foreach($originaldata as $key){
                $tempdata['tanggalawal'] = Utils::tanggalCantikDariSampai($key['tanggalawal'], $key['tanggalakhir']);
                for($i=1;$i<count($columns);$i++){
                    if($columns[$i] == 'status') {
                        $tempdata[$columns[$i]] = Utils::labelKolom($key[$columns[$i]] == 'c' ? 'confirm' : ($key[$columns[$i]] == 'a' ? 'approve' : 'notapprove'));
                    }else{
                        $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                    }
                }
                $data[] = $tempdata;
            }
        }
        return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
    }

    public function perPegawaiJadwalShiftData(Request $request, $idpegawai)
    {
        $pdo = DB::connection('perusahaan_db')->getPdo();
        $where = '';
        $wheretable = '';
        if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
            $wheretable .= ' AND js.tanggal BETWEEN STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")';
        }
        $columns = array('tanggal','jamkerja','namashift');
        $table = '(SELECT js.id,js.idpegawai,js.tanggal,jk.nama as jamkerja,jks.namashift FROM jamkerja jk, jamkerjashift jks, jadwalshift js WHERE jk.id=jks.idjamkerja AND jks.id=js.idjamkerjashift AND js.idpegawai=:idpegawai '.$wheretable.') x';
        $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai', $idpegawai);
        if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
            $stmt->bindValue(':tanggalawal', Session::get("lapperpegawai_tanggalawal"));
            $stmt->bindValue(':tanggalakhir', Session::get("lapperpegawai_tanggalakhir"));
        }
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        $totalData = $row['total'];
        $totalFiltered = $totalData;
        $limit = $request->input('length');
        $start = $request->input('start');
        $orderColumn = $columns[$request->input('order.0.column')];
        $orderAction = $request->input('order.0.dir');
        $orderBy = $orderColumn.' '.$orderAction;

        if(!empty($request->input('search.value'))){
            $search = $request->input('search.value');
            $where .= Utils::searchDatatableQuery($columns);
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai', $idpegawai);
            if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal', Session::get("lapperpegawai_tanggalawal"));
                $stmt->bindValue(':tanggalakhir', Session::get("lapperpegawai_tanggalakhir"));
            }
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                }
            }
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalFiltered = $row['total'];
        }

        $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idpegawai', $idpegawai);
        if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
            $stmt->bindValue(':tanggalawal', Session::get("lapperpegawai_tanggalawal"));
            $stmt->bindValue(':tanggalakhir', Session::get("lapperpegawai_tanggalakhir"));
        }
        if(!empty($request->input('search.value'))) {
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                }
            }
        }
        $stmt->execute();
        $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $data = array();
        if(!empty($originaldata)){
            foreach($originaldata as $key){
                $tempdata['tanggal'] = $key['tanggal'];
                for($i=1;$i<count($columns);$i++){
                    $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                }
                $data[] = $tempdata;
            }
        }
        return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
    }

    public function perPegawaiExcel($idpegawai)
    {
        if(Utils::cekHakakses('laporanperpegawai','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $redText = array(
                'font'  => array(
                    'color' => array('rgb' => 'FF0000'),
                )
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.perpegawai'));

            $sql = 'SELECT gunakanpwd,pwd,logokiri FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

            //sheet 1 data pegawai
            //set value kolom
            $objPHPExcel->createSheet();
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A11', trans('all.datapegawai'))
                        ->setCellValue('A12', trans('all.nama'))
                        ->setCellValue('A13', trans('all.pin'))
                        ->setCellValue('A14', trans('all.nomorhp'));

            //data pegawai
            $sql = 'SELECT
                        nama,
                        pin,
                        nomorhp
                    FROM
                        pegawai
                    WHERE
                        id = :idpegawai';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai', $idpegawai);
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);

            $objPHPExcel->getActiveSheet()->setCellValue('B12', $row['nama']);
            $objPHPExcel->getActiveSheet()->setCellValue('B13', $row['pin']);
            $objPHPExcel->getActiveSheet()->setCellValue('B14', $row['nomorhp']);

            $angkaakhir = 15;
            // data atribut pegawai
            $sql = 'SELECT
                        a.atribut,
                        an.nilai
                    FROM
                        atributnilai an LEFT JOIN atribut a ON an.idatribut=a.id
                        LEFT JOIN pegawaiatribut pa ON pa.idatributnilai=an.id
                    WHERE
                        pa.idpegawai = :idpegawai';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai', $idpegawai);
            $stmt->execute();
            if ($stmt->rowCount() > 0) {
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $angkaakhir, $row['atribut']);
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $angkaakhir, $row['nilai']);
                    $angkaakhir++;
                }
            }

            // data pegawai lokasi
            $sql = 'SELECT
                        IFNULL(GROUP_CONCAT(l.nama SEPARATOR ", "),"") as lokasi
                    FROM
                        lokasi l,
                        pegawailokasi pl
                    WHERE
                        pl.idlokasi=l.id AND
                        pl.idpegawai = :idpegawai
                    GROUP BY
                        pl.idpegawai';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai', $idpegawai);
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($row['lokasi'] != '') {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $angkaakhir, trans('all.lokasi'));
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $angkaakhir, $row['lokasi']);
            }

            //foto pegawai
            $pathfoto = Session::get('folderroot_perusahaan') . '/pegawai/' . Utils::id2Folder($idpegawai) . '/' . $idpegawai;
            if (file_exists($pathfoto)) {
                $raw = Utils::decrypt($pathfoto);
                $im = imagecreatefromstring($raw);

                $objDrawing = new PHPExcel_Worksheet_MemoryDrawing();
                $objDrawing->setName(trans('all.logo'));
                $objDrawing->setImageResource($im);
                $objDrawing->setRenderingFunction(PHPExcel_Worksheet_MemoryDrawing::RENDERING_JPEG);
                $objDrawing->setMimeType(PHPExcel_Worksheet_MemoryDrawing::MIMETYPE_DEFAULT);
                $objDrawing->setHeight(150);
                $objDrawing->setWidth(150);
                $objDrawing->setCoordinates('A1');
                $objDrawing->setOffsetX(50);
                $objDrawing->setOffsetY(50);
                $objDrawing->setWorksheet($objPHPExcel->getActiveSheet());
            }

            $objPHPExcel->getActiveSheet()->getStyle('A11')->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->mergeCells('A11:B11');
            $objPHPExcel->getActiveSheet()->getStyle('A11')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(25);

            $objPHPExcel->getActiveSheet()->setTitle(trans('all.pegawai'));

            // password
            Utils::passwordExcel($objPHPExcel);

            //sheet 2 rekapitulasi
            $tampilflexytime = Utils::getDataWhere($pdo,'pengaturan','tampilkan_flexytime');
            $objPHPExcel->createSheet();
            //set value kolom
            if($tampilflexytime == 'y') {
                $objPHPExcel->setActiveSheetIndex(1)->setCellValue('P1', trans('all.lamaflexytime'));
                $objPHPExcel->setActiveSheetIndex(1)->getStyle('P1')->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(1)->getColumnDimension('P')->setWidth(20);
                $huruflamalembur = 'Q';
                $hurufkelengkapanpresensi = 'R';
            }else{
                $huruflamalembur = 'P';
                $hurufkelengkapanpresensi = 'Q';
            }

            $objPHPExcel->setActiveSheetIndex(1)
                        ->setCellValue('A1', trans('all.tanggal'))
                        ->setCellValue('B1', trans('all.libur'))
                        ->setCellValue('C1', trans('all.harilibur'))
                        ->setCellValue('D1', trans('all.masukkerja'))
                        ->setCellValue('E1', trans('all.alasantidakmasuk'))
                        ->setCellValue('F1', trans('all.jamkerja'))
                        ->setCellValue('G1', trans('all.jadwalkerja'))
                        ->setCellValue('H1', trans('all.alasanmasuk'))
                        ->setCellValue('I1', trans('all.waktumasuk'))
                        ->setCellValue('J1', trans('all.waktukeluar'))
                        ->setCellValue('K1', trans('all.flag'))
                        ->setCellValue('L1', trans('all.datangawal'))
                        ->setCellValue('M1', trans('all.terlambat'))
                        ->setCellValue('N1', trans('all.pulanglebihawal'))
                        ->setCellValue('O1', trans('all.lamakerja'))
                        ->setCellValue($huruflamalembur.'1', trans('all.lamalembur'))
                        ->setCellValue($hurufkelengkapanpresensi.'1', trans('all.kelengkapanpresensi'));

            $objPHPExcel->getActiveSheet()->getStyle($huruflamalembur.'1')->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle($hurufkelengkapanpresensi.'1')->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension($huruflamalembur)->setWidth(25);
            $objPHPExcel->getActiveSheet()->getColumnDimension($hurufkelengkapanpresensi)->setWidth(25);

            $where = '';
            if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
                $where .= ' AND ra.tanggal BETWEEN STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")';
            }

            $sql = 'SELECT
                        (DATEDIFF(ra.tanggal,"1900-01-01")+2) as tanggal,
                        ra.jadwalmasukkerja as libur,
                        IFNULL(hl.keterangan,"") as harilibur,
                        ra.masukkerja,
                        IFNULL(atm.alasan,"") as alasantidakmasuk,
                        IFNULL(jk.nama,"") as jamkerja,
                        IFNULL(amk.alasan,"") as alasanmasuk,
                        (DATEDIFF(ra.waktumasuk,"1900-01-01")+2)+ROUND(time_to_sec(timediff(DATE_FORMAT(ra.waktumasuk,"%T"),"00:00:00"))/86400,9) as waktumasuk1,
	                    (DATEDIFF(ra.waktukeluar,"1900-01-01")+2)+ROUND(time_to_sec(timediff(DATE_FORMAT(ra.waktukeluar,"%T"),"00:00:00"))/86400,9) as waktukeluar,
                        TIME(ra.waktumasuk) as waktumasuk,
                        TIME(ra.waktukeluar) as waktukeluar,
                        ra.flag_terlambat,
                        ra.flag_pulangawal,
                        ra.flag_lembur,
                        CONCAT(IFNULL(TIME(ra.waktumasuk),"")," - ",IFNULL(TIME(ra.waktukeluar),"")) AS waktukerja,
                        IF(ra.selisihmasuk>0,SEC_TO_TIME(ra.selisihmasuk),"00:00:00") as datangawal,
                        IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"00:00:00") as terlambat,
                        IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"00:00:00") as pulanglebihawal,
                        SEC_TO_TIME(ra.lamakerja) as lamakerja,
                        SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
                        SEC_TO_TIME(ra.lamalembur) as lamalembur,
                        ROUND(ra.lamakerja/60) as lamakerja1,
                        ROUND(ra.lamalembur/60) as lamalembur1,
                        IFNULL(GROUP_CONCAT(raj.waktu ORDER BY IF(raj.checking="start",0,1) ASC, IF(raj.masukkeluar="m",0,1) ASC SEPARATOR "|" ),"") as jadwalkerja2,
	                    IFNULL(GROUP_CONCAT(raj.waktu SEPARATOR "|" ),"") as jadwalkerja,
                        ra.absentidaklengkap as kelengkapanpresensi
                    FROM
                        rekapabsen ra
                        LEFT JOIN harilibur hl ON hl.id=ra.idharilibur
                        LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
                        LEFT JOIN jamkerja jk ON jk.id=ra.idjamkerja
                        LEFT JOIN alasanmasukkeluar amk ON amk.id=ra.idalasanmasuk
                        LEFT JOIN rekapabsen_jadwal raj ON raj.idrekapabsen=ra.id AND raj.checking IN ("start", "end")
                    WHERE
                        ra.idpegawai= :idpegawai
                        ' . $where . '
                    GROUP BY
                        ra.id
                    ORDER BY
                        ra.tanggal';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai', $idpegawai);
            if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal', Session::get("lapperpegawai_tanggalawal"));
                $stmt->bindValue(':tanggalakhir', Session::get("lapperpegawai_tanggalakhir"));
            }
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

                $jadwalKerja ='';
                $explode = explode('|', $row['jadwalkerja']);
                $jumlah = floor(count($explode) / 2);
                $a = 0;
                for($j=0;$j<$jumlah;$j++) {
                    $awal_tgl = substr($explode[$j+$a],0,10);
                    $awal_jam = substr($explode[$j+$a],11,8);
                    $akhir_tgl = substr($explode[$j+$a+1],0,10);
                    $akhir_jam = substr($explode[$j+$a+1],11,8);
                    $tandaBedaHari = '';
                    if ($awal_tgl != $akhir_tgl) {
                        $tandaBedaHari = '*';
                    }
                    $jadwalKerja .= $awal_jam.' ~ '.$akhir_jam.' '.$tandaBedaHari;
                    if ($j < $jumlah) {
                        $jadwalKerja .= ' ';
                    }
                    $a++;
                }
                $kelengkapanpresensi = '';
                if($row['kelengkapanpresensi'] == 'm'){
                    $kelengkapanpresensi = trans('all.kurangabsenmasuk');
                }else if($row['kelengkapanpresensi'] == 'k'){
                    $kelengkapanpresensi = trans('all.kurangabsenkeluar');
                }

                if($tampilflexytime == 'y') {
                    $objPHPExcel->getActiveSheet()->setCellValue('P' . $i, $row['lamaflexytime']);
                }

                $terlambat = $row['flag_terlambat'] != '' ? ($row['flag_terlambat'] == 'y' ? trans('all.terlambat').' ' : trans('all.tidakterlambat').' ') : '';
                $pulangawal = $row['flag_pulangawal'] != '' ? ($row['flag_pulangawal'] == 'y' ? trans('all.pulangawal').' ' : trans('all.tidakpulangawal').' ') : '';
                $lembur = $row['flag_lembur'] != '' ? ($row['flag_lembur'] == 'y' ? trans('all.lembur') : trans('all.tidaklembur')) : '';
                $flag = $terlambat.$pulangawal.$lembur;

                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['libur'] != 'y' ? trans('all.ya') : trans('all.tidak'));
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['harilibur']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['masukkerja'] == 'y' ? trans('all.ya') : trans('all.tidak'));
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['alasantidakmasuk']);
                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $row['jamkerja']);
                $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $jadwalKerja);
                $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $row['alasanmasuk']);
                $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $row['waktumasuk']);
                $objPHPExcel->getActiveSheet()->setCellValue('J' . $i, $row['waktukeluar']);
                $objPHPExcel->getActiveSheet()->setCellValue('K' . $i, $flag);
                $objPHPExcel->getActiveSheet()->setCellValue('L' . $i, $row['datangawal']);
                $objPHPExcel->getActiveSheet()->setCellValue('M' . $i, $row['terlambat']);
                $objPHPExcel->getActiveSheet()->setCellValue('N' . $i, $row['pulanglebihawal']);
                $objPHPExcel->getActiveSheet()->setCellValue('O' . $i, $row['lamakerja']);
                $objPHPExcel->getActiveSheet()->setCellValue($huruflamalembur . $i, $row['lamalembur']);
                $objPHPExcel->getActiveSheet()->setCellValue($hurufkelengkapanpresensi . $i, $kelengkapanpresensi);

                // format
                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY');
                $objPHPExcel->getActiveSheet()->getStyle('I' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY HH:MM:SS');
                $objPHPExcel->getActiveSheet()->getStyle('J' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY HH:MM:SS');

                $i++;
            }

            $arrWidth = array('', 12, 12, 15, 15, 20, 20, 20, 20, 20, 20, 30, 15, 12, 15, 15, 17);
            for ($j = 1; $j <= 16; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            $objPHPExcel->getActiveSheet()->setTitle(trans('all.rekapitulasi'));

            // password
            Utils::passwordExcel($objPHPExcel);

            //sheet 3 riwayat kehadiran
            $objPHPExcel->createSheet();
            //set value kolom
            $objPHPExcel->setActiveSheetIndex(2)
                        ->setCellValue('A1', trans('all.tanggal'))
                        ->setCellValue('B1', trans('all.lokasi'))
                        ->setCellValue('C1', trans('all.masukkeluar'))
                        ->setCellValue('D1', trans('all.alasan'))
                        ->setCellValue('E1', trans('all.terhitungkerja'))
                        ->setCellValue('F1', trans('all.status'))
                        ->setCellValue('G1', trans('all.mesin'))
                        ->setCellValue('H1', trans('all.lat'))
                        ->setCellValue('I1', trans('all.lon'));

            $where = '';
            if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
                $where .= ' AND la.waktu>=CONCAT(STR_TO_DATE(:tanggalawal,"%d/%m/%Y")," 00:00:00") AND la.waktu<=CONCAT(STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")," 23:59:59")';
            }

            $sql = 'SELECT
                        (DATEDIFF(la.waktu,"1900-01-01")+2)+ROUND(time_to_sec(timediff(DATE_FORMAT(la.waktu,"%T"),"00:00:00"))/86400,9) as tanggal,
                        IF(la.masukkeluar="m","' . trans('all.masuk') . '","' . trans('all.keluar') . '") as masukkeluar,
                        IFNULL(amk.alasan,"-") as alasan,
                        IF(la.terhitungkerja="y","' . trans('all.ya') . '","' . trans('all.tidak') . '") as terhitungkerja,
                        IF(la.status="v","' . trans('all.valid') . '",IF(la.status="c","' . trans('all.konfirmasi') . '",IF(la.status="na","' . trans('all.tidakvalid') . '",""))) as status,
                        m.nama as mesin,
                        la.lat,
                        la.lon,
                        getlokasiabsen(la.lat, la.lon) as lokasi
                      FROM
                        logabsen la
                        LEFT JOIN mesin m ON m.id=la.idmesin
                        LEFT JOIN alasanmasukkeluar amk ON amk.id=la.idalasanmasukkeluar
                      WHERE
                        la.idpegawai = :idpegawai
                        ' . $where . '
                      ORDER BY
                        la.waktu ASC';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai', $idpegawai);
            if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal', Session::get("lapperpegawai_tanggalawal"));
                $stmt->bindValue(':tanggalakhir', Session::get("lapperpegawai_tanggalakhir"));
            }
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['lokasi']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['masukkeluar']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['alasan']);
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['terhitungkerja']);
                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $row['status']);
                $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $row['mesin']);
                $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $row['lat']);
                $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $row['lon']);

                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY HH:MM:SS');

                $i++;
            }

            $arrWidth = array('', 20, 50, 12, 30, 15, 10, 30, 15, 15);
            for ($j = 1; $j <= 9; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            $objPHPExcel->getActiveSheet()->setTitle(trans('all.riwayatkehadiran'));

            // password
            Utils::passwordExcel($objPHPExcel);

            //sheet 4 ijin tidak masuk
            $objPHPExcel->createSheet();
            //set value kolom
            $objPHPExcel->setActiveSheetIndex(3)
                        ->setCellValue('A1', trans('all.tanggal'))
                        ->setCellValue('B1', trans('all.alasan'))
                        ->setCellValue('C1', trans('all.keterangan'))
                        ->setCellValue('D1', trans('all.status'));

            $sql = 'SELECT
                        i.tanggalawal,
                        i.tanggalakhir,
                        a.alasan,
                        i.keterangan,
                        IF(i.status="c","' . trans('all.konfirmasi') . '",IF(i.status="a","' . trans('all.diterima') . '",IF(i.status="na","' . trans('all.ditolak') . '",""))) as status
                    FROM
                        ijintidakmasuk i
                        LEFT JOIN alasantidakmasuk a ON i.idalasantidakmasuk=a.id
                    WHERE
                        i.idpegawai = :idpegawai';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai', $idpegawai);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $tgl = Utils::tanggalCantikDariSampai($row['tanggalawal'], $row['tanggalakhir']);

                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $tgl);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['alasan']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['keterangan']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['status']);

                $i++;
            }

            $arrWidth = array('', 20, 30, 50, 12);
            for ($j = 1; $j <= 4; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            $objPHPExcel->getActiveSheet()->setTitle(trans('all.ijintidakmasuk'));

            // password
            Utils::passwordExcel($objPHPExcel);

            $nextsheet = 4;
            if (Session::get('lapperpegawai_adajamkerjashift') == 'ada') {
                //sheet 5 jadwal shift
                $objPHPExcel->createSheet();
                //set value kolom
                $objPHPExcel->setActiveSheetIndex($nextsheet)
                            ->setCellValue('A1', trans('all.tanggal'))
                            ->setCellValue('B1', trans('all.jamkerja'))
                            ->setCellValue('C1', trans('all.namashift'));

                $where = '';
                if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
                    $where .= ' AND js.tanggal BETWEEN STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")';
                }

                $sql = 'SELECT
                            (DATEDIFF(js.tanggal,"1900-01-01")+2) as tanggal,
                            jk.nama as jamkerja,
                            jks.namashift
                        FROM
                            jamkerja jk,
                            jamkerjashift jks,
                            jadwalshift js
                        WHERE
                            jk.id=jks.idjamkerja AND
                            jks.id=js.idjamkerjashift AND
                            js.idpegawai = :idpegawai' . $where;
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':idpegawai', $idpegawai);
                if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
                    $stmt->bindValue(':tanggalawal', Session::get("lapperpegawai_tanggalawal"));
                    $stmt->bindValue(':tanggalakhir', Session::get("lapperpegawai_tanggalakhir"));
                }
                $stmt->execute();
                $i = 2;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['jamkerja']);
                    $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['namashift']);

                    $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY');

                    $i++;
                }

                $arrWidth = array('', 15, 30, 30);
                for ($j = 1; $j <= 3; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                }

                $objPHPExcel->getActiveSheet()->setTitle(trans('all.jadwalshift'));

                // password
                Utils::passwordExcel($objPHPExcel);
                $nextsheet = 5;
            }

            //sheet 6 laporan permintaan pak dewa
            // $objPHPExcel->createSheet();
            // $objPHPExcel->setActiveSheetIndex($nextsheet);

            // $hh1 = 'A'; //huruf header
            // $hh2 = 'B';
            // $pdop = DB::getPdo();
            // $sql = 'SELECT folderroot FROM perusahaan_route WHERE idperusahaan = :idperusahaan';
            // $stmt = $pdop->prepare($sql);
            // $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
            // $stmt->execute();
            // $rowp = $stmt->fetch(PDO::FETCH_ASSOC);
            // $path = $rowp['folderroot'].'/logo_perusahaan';
            // if (file_exists($path)) {
            //     $hh1 = 'B';
            //     $hh2 = 'C';
            //     $heightgambar = 99;
            //     $widthgambar = 99;
            //     Utils::logoExcel('kiri',$objPHPExcel,$path,$heightgambar,$widthgambar,'A1');
            // }

            // // data atribut variable pegawai
            // $pdo = DB::connection('perusahaan_db')->getPdo();
            // $aa = 5; // angka akhir
            // $aa2 = 6;
            // $sql1 = 'SELECT
            //             av.atribut,
            //             pa.variable
            //         FROM
            //             atributvariable av,
            //             pegawaiatributvariable pa
            //         WHERE
            //             pa.idatributvariable=av.id AND
            //             av.penting = "y" AND
            //             pa.idpegawai = ' . $idpegawai;
            // $stmt1 = $pdo->prepare($sql1);
            // $stmt1->execute();
            // if ($stmt1->rowCount() > 0) {
            //     while ($row1 = $stmt1->fetch(PDO::FETCH_ASSOC)) {
            //         $objPHPExcel->getActiveSheet()->setCellValue($hh1 . $aa, $row1['atribut']);
            //         $objPHPExcel->getActiveSheet()->setCellValue($hh2 . $aa, ': '.$row1['variable']);
            //         $aa++;
            //         $aa2++;
            //     }
            // }
            // $aa = $aa+1;
            // $aa2 = $aa2+1;

            // //set value kolom
            // $periodecantik = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd(Session::get("lapperpegawai_tanggalawal")),Utils::convertDmy2Ymd(Session::get("lapperpegawai_tanggalakhir")));

            // $objPHPExcel->getActiveSheet()
            //             ->setCellValue($hh1.'1', trans('all.laporankehadiranpegawai'))
            //             ->setCellValue($hh1.'2', trans('all.periode'))
            //             ->setCellValue($hh2.'2', ': '.$periodecantik)
            //             ->setCellValue($hh1.'3', trans('all.nama'))
            //             ->setCellValue($hh2.'3', ': '.Utils::getNamaPegawai($idpegawai))
            //             ->setCellValue($hh1.'4', trans('all.pin'))
            //             ->setCellValue($hh2.'4', ': '.Utils::getDataWhere($pdo,'pegawai','pin','id', $idpegawai))
            //             ->setCellValue('A'.$aa, trans('all.tanggal'))
            //             ->setCellValue('B'.$aa, trans('all.jamkerja'))
            //             ->setCellValue('B'.$aa2, trans('all.masuk'))
            //             ->setCellValue('C'.$aa2, trans('all.pulang'))
            //             ->setCellValue('D'.$aa, trans('all.jammasuk'))
            //             ->setCellValue('E'.$aa, trans('all.jamkeluar'))
            //             ->setCellValue('F'.$aa, trans('all.jamdatang'))
            //             ->setCellValue('F'.$aa2, trans('all.cepat'))
            //             ->setCellValue('G'.$aa2, trans('all.telat'))
            //             ->setCellValue('H'.$aa, trans('all.jumlahjampulang'))
            //             ->setCellValue('H'.$aa2, trans('all.cepat'))
            //             ->setCellValue('I'.$aa2, trans('all.telat'))
            //             ->setCellValue('J'.$aa, trans('all.terlambataktual'))
            //             ->setCellValue('K'.$aa, trans('all.jumlahjamefektif'))
            //             ->setCellValue('L'.$aa, trans('all.jumlahjamaktual'))
            //             ->setCellValue('M'.$aa, trans('all.keterangan'));

            // $objPHPExcel->getActiveSheet()->mergeCells('A'.$aa.':A'.$aa2);
            // $objPHPExcel->getActiveSheet()->mergeCells('B'.$aa.':C'.$aa);
            // $objPHPExcel->getActiveSheet()->mergeCells('D'.$aa.':D'.$aa2);
            // $objPHPExcel->getActiveSheet()->mergeCells('F'.$aa.':G'.$aa);
            // $objPHPExcel->getActiveSheet()->mergeCells('E'.$aa.':E'.$aa2);
            // $objPHPExcel->getActiveSheet()->mergeCells('H'.$aa.':I'.$aa);
            // $objPHPExcel->getActiveSheet()->mergeCells('J'.$aa.':J'.$aa2);
            // $objPHPExcel->getActiveSheet()->mergeCells('K'.$aa.':K'.$aa2);
            // $objPHPExcel->getActiveSheet()->mergeCells('L'.$aa.':L'.$aa2);
            // $objPHPExcel->getActiveSheet()->mergeCells('M'.$aa.':M'.$aa2);

            // $objPHPExcel->getActiveSheet()->getStyle('A'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('D'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('E'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('J'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('K'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('L'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('M'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

            // $objPHPExcel->getActiveSheet()->getStyle('A'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('B'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('D'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('E'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('B'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('C'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('F'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('F'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('G'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('H'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('H'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('I'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('J'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('K'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('L'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // $objPHPExcel->getActiveSheet()->getStyle('M'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

            // $objPHPExcel->getActiveSheet()->getStyle('D'.$aa.':E'.$aa)->getAlignment()->setWrapText(true);
            // $objPHPExcel->getActiveSheet()->getStyle('J'.$aa.':L'.$aa)->getAlignment()->setWrapText(true);

            // // $arrWidth = array('', 15, 30, 50, 12);
            // for ($j = 1; $j <= 13; $j++) {
            //     $huruf = Utils::angkaToHuruf($j);
            //     $objPHPExcel->getActiveSheet()->getStyle($huruf . ''.$aa)->getFont()->setBold(true);
            //     $objPHPExcel->getActiveSheet()->getStyle($huruf . ''.$aa)->applyFromArray($styleArray);
            //     // $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            // }
            // $objPHPExcel->getActiveSheet()->getStyle('B'.$aa2)->getFont()->setBold(true);
            // $objPHPExcel->getActiveSheet()->getStyle('C'.$aa2)->getFont()->setBold(true);
            // $objPHPExcel->getActiveSheet()->getStyle('F'.$aa2)->getFont()->setBold(true);
            // $objPHPExcel->getActiveSheet()->getStyle('G'.$aa2)->getFont()->setBold(true);
            // $objPHPExcel->getActiveSheet()->getStyle('H'.$aa2)->getFont()->setBold(true);
            // $objPHPExcel->getActiveSheet()->getStyle('I'.$aa2)->getFont()->setBold(true);

            // $objPHPExcel->getActiveSheet()->getStyle('B'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('C'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('D'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('E'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('F'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('G'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('H'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('I'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('J'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('K'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('L'.$aa2)->applyFromArray($styleArray);
            // $objPHPExcel->getActiveSheet()->getStyle('M'.$aa2)->applyFromArray($styleArray);

            // $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(15);
            // $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setWidth(12);
            // $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setWidth(12);
            // $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setWidth(12);
            // $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setWidth(50);

            // $where = '';
            // if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
            //     $where .= ' AND ra.tanggal BETWEEN STR_TO_DATE("' . Session::get("lapperpegawai_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("lapperpegawai_tanggalakhir") . '","%d/%m/%Y")';
            // }

            // // IF(ra.selisihmasuk>0,SEC_TO_TIME(ra.selisihmasuk),"00:00:00") as datangawal,
            // // IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"00:00:00") as terlambat,
            // // IF(ra.selisihkeluar>0,SEC_TO_TIME(ra.selisihkeluar),"00:00:00") as pulanglebihawal,
            // // IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"00:00:00") as pulangterlambat,

            // // IF(ra.selisihmasuk>0,SEC_TO_TIME(ra.selisihmasuk),"") as datangawal,
            // // IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"") as terlambat,
            // // IF(ra.selisihkeluar>0,SEC_TO_TIME(ra.selisihkeluar),"") as pulanglebihawal,
            // // IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"") as pulangterlambat,

            // // CONCAT(IF(ra.absentidaklengkap="m","'.trans('all.kurangabsenmasuk').' ",IF(ra.absentidaklengkap="k","'.trans('all.kurangabsenkeluar').' ","")),IF(ISNULL(ra.idharilibur)=true,IFNULL(atm.alasan,""),hl.keterangan)) as keterangan,
            // // -- IF(ra.absentidaklengkap="m","'.trans('all.kurangabsenmasuk').'",IF(ra.absentidaklengkap="k",'.trans('all.kurangabsenkeluar').'",IF(ISNULL(ra.idharilibur)=true,IFNULL(atm.alasan,""),hl.keterangan))) as keterangan,

            // $sql = 'SELECT
            //             ra.tanggal,
            //             IFNULL(ra.idharilibur,"") as idharilibur,
            //             IFNULL(ra.waktumasuk,"") as waktumasukdatetime,
            //             IFNULL(ra.waktukeluar,"") as waktukeluardatetime,
            //             IFNULL(TIME(ra.waktumasuk),"") as waktumasuk,
            //             IFNULL(TIME(ra.waktukeluar),"") as waktukeluar,
            //             IF(ra.selisihmasuk>0,ra.selisihmasuk,"") as datangawal,
            //             IF(ra.selisihmasuk<0,-1*ra.selisihmasuk,"") as terlambat,
            //             IF(ra.selisihkeluar<0,-1*ra.selisihkeluar,"") as pulanglebihawal,
            //             IF(ra.selisihkeluar>0,ra.selisihkeluar,"") as pulangterlambat,
            //             SEC_TO_TIME(ra.lamakerja) as lamakerja,
            //             SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
            //             SEC_TO_TIME(ra.lamalembur) as lamalembur,
            //             ra.jadwalmasukkerja,
            //             ra.masukkerja,
            //             ra.absentidaklengkap,
            //             IFNULL(hl.keterangan,"") as keteranganharilibur,
            //             IFNULL(atm.alasan,"") as alasantidakmasuk,
            //             IFNULL(x.jamkerja,"") as jamkerja,
            //             ra.jadwallamakerja as jamkerjaefektif
            //         FROM
            //             rekapabsen ra
            //             LEFT JOIN (
            //                 SELECT
            //                     ra.id,
            //                     GROUP_CONCAT(DATE_FORMAT(raj.waktu,"%H:%i") ORDER BY raj.waktu SEPARATOR " - ") as jamkerja
            //                 FROM
            //                     rekapabsen ra,
            //                     rekapabsen_jadwal raj
            //                 WHERE
            //                     ra.id=raj.idrekapabsen AND
            //                     raj.checking IN ("start", "end") AND
            //                     ra.idpegawai = '.$idpegawai.'
            //                     '.$where.'
            //                 GROUP BY
            //                     ra.id
            //             ) x ON ra.id = x.id
            //             LEFT JOIN harilibur hl ON ra.idharilibur = hl.id
            //             LEFT JOIN alasantidakmasuk atm ON ra.idalasantidakmasuk = atm.id
            //         WHERE
            //             ra.idpegawai = ' . $idpegawai.' '.$where.'
            //         ORDER BY
            //             ra.tanggal ASC';
            // $stmt = $pdo->prepare($sql);
            // $stmt->execute();
            // $i = $aa+2;

            // $total_harikerja = 0;
            // $total_jamdatang_cepat = 0;
            // $total_jamdatang_telat = 0;
            // $total_jampulang_cepat = 0;
            // $total_jampulang_telat = 0;
            // $total_terlambat = 0;
            // $total_jamefektif = 0;
            // $total_jamaktual = 0;

            // while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            //     $jamkerja = $row['jamkerja'] != '' ? explode('-',$row['jamkerja']) : '';
            //     $jamkerjaefektif = $row['jamkerjaefektif'];

            //     // terlambataktual
            //     $terlambataktual = 0;
            //     $jamkerjaaktual = 0;

            //     if($row['waktumasukdatetime'] != '' || $row['waktukeluardatetime'] != ''){
            //         $total_harikerja = $total_harikerja + 1;
            //         $terlambataktual = $row['terlambat'] + $row['pulanglebihawal'] - $row['pulangterlambat'];
            //         if($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't'){
            //             // jika harilibur dan pegawai tsb tetap masuk, hitung jam kerja aktual dari waktu keluar di kurangi waktu masuk
            //             if($row['waktumasukdatetime'] != '' && $row['waktukeluardatetime'] != ''){
            //                 $jamkerjaaktual = abs(strtotime($row['waktukeluardatetime']) - strtotime($row['waktumasukdatetime']));
            //             }
            //         }else{
            //             // jika tidak harilibur, jam kerja aktual dari jamkerjaefektif
            //             $jamkerjaaktual = $jamkerjaefektif;
            //         }
            //         if ($terlambataktual>0) {
            //             $jamkerjaaktual = $jamkerjaaktual - $terlambataktual;
            //         }
            //     }

            //     // if($row['absentidaklengkap'] != ''){
            //     //     $jamkerjaaktual = 14400;
            //     // }

            //     // $jamkerjaaktual = '-';
            //     // if($row['waktumasukdatetime'] != '' && $row['waktukeluardatetime'] != ''){
            //     //     $waktuaktual = abs(strtotime($row['waktukeluardatetime']) - strtotime($row['waktumasukdatetime']));
            //     //     $jamkerjaaktual = Utils::sec2hhmm($waktuaktual);
            //     //     // $jamkerjaaktual = Utils::sec2hhmm($waktuaktual - $terlambataktual);
            //     // }

            //     $datangawal = $row['datangawal'] != '' ? $row['datangawal'] : 0;
            //     $terlambat = $row['terlambat'] != '' ? $row['terlambat'] : 0;
            //     $pulanglebihawal = $row['pulanglebihawal'] != '' ? $row['pulanglebihawal'] : 0;
            //     $pulangterlambat = $row['pulangterlambat'] != '' ? $row['pulangterlambat'] : 0;

            //     $total_jamdatang_cepat = $total_jamdatang_cepat + $datangawal ;
            //     $total_jamdatang_telat = $total_jamdatang_telat + $terlambat;
            //     $total_jampulang_cepat = $total_jampulang_cepat + $pulanglebihawal;
            //     $total_jampulang_telat = $total_jampulang_telat + $pulangterlambat;
            //     $total_terlambat = $total_terlambat + $terlambataktual;
            //     $total_jamefektif = $total_jamefektif + $jamkerjaefektif;
            //     $total_jamaktual = $total_jamaktual + $jamkerjaaktual;

            //     //keterangan
            //     $keterangan = '';
            //     if($terlambat > 0){
            //         $keterangan .= trans('all.terlambat').', ';
            //     }
            //     if($pulanglebihawal > 0){
            //         $keterangan .= trans('all.pulangawal').', ';
            //     }
            //     if($row['jadwalmasukkerja'] == 't'){
            //         $keterangan .= trans('all.libur').', ';
            //     }
            //     if($row['absentidaklengkap'] == 'm'){
            //         $keterangan .= trans('all.kurangabsenmasuk').', ';
            //     }
            //     if($row['absentidaklengkap'] == 'k'){
            //         $keterangan .= trans('all.kurangabsenkeluar').', ';
            //     }
            //     if($row['alasantidakmasuk'] != ''){
            //         $keterangan .= $row['alasantidakmasuk'].', ';
            //     }
            //     if($row['keteranganharilibur'] != ''){
            //         $keterangan .= $row['keteranganharilibur'].', ';
            //     }

            //     $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, Utils::tanggalCantik($row['tanggal']));
            //     $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['jamkerja'] != '' ? $jamkerja[0] : '-');
            //     $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['jamkerja'] != '' ? $jamkerja[1] : '-');
            //     $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['waktumasuk'] != '' ? substr($row['waktumasuk'], 0, -3) : '-');
            //     $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['waktukeluar'] != '' ? substr($row['waktukeluar'], 0, -3) : '-');
            //     $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $datangawal > 59 ? Utils::sec2hhmm($datangawal) : '-'); //kenapa 59 ? untuk menghindari return 00:00
            //     $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $terlambat > 59 ? Utils::sec2hhmm($terlambat) : '-');
            //     $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $pulanglebihawal> 59  ? Utils::sec2hhmm($pulanglebihawal) : '-');
            //     $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $pulangterlambat > 59 ? Utils::sec2hhmm($pulangterlambat) : '-');
            //     $objPHPExcel->getActiveSheet()->setCellValue('J' . $i, $terlambataktual > 59 ? Utils::sec2hhmm($terlambataktual) : '-');
            //     $objPHPExcel->getActiveSheet()->setCellValue('K' . $i, $jamkerjaefektif > 59 ? Utils::sec2hhmm($jamkerjaefektif) : '-');
            //     $objPHPExcel->getActiveSheet()->setCellValue('L' . $i, $jamkerjaaktual > 59 ? Utils::sec2hhmm($jamkerjaaktual) : '-');
            //     $objPHPExcel->getActiveSheet()->setCellValue('M' . $i, $keterangan != '' ? substr($keterangan, 0, -2) : ($row['masukkerja'] == 'y' ? '' : trans('all.tanpaketerangan')));

            //     //jika libur
            //     if($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't'){
            //         $objPHPExcel->getActiveSheet()->getStyle('A'.$i)->applyFromArray($redText);
            //     }

            //     for($j = 1; $j<= 13; $j++){
            //         $hi = Utils::angkaToHuruf($j);
            //         $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->applyFromArray($styleArray);
            //         $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            //     }

            //     $i++;
            // }

            // $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, trans('all.total').' '.$total_harikerja.' '.trans('all.harikerja')); // 13 dari jumlah dia masuk
            // $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $total_jamdatang_cepat > 0 ? Utils::sec2hhmm($total_jamdatang_cepat) : '-');
            // $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $total_jamdatang_telat > 0 ? Utils::sec2hhmm($total_jamdatang_telat) : '-');
            // $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $total_jampulang_cepat > 0 ? Utils::sec2hhmm($total_jampulang_cepat) : '-');
            // $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $total_jampulang_telat > 0 ? Utils::sec2hhmm($total_jampulang_telat) : '-');
            // $objPHPExcel->getActiveSheet()->setCellValue('J' . $i, $total_terlambat > 0 ? Utils::sec2hhmm($total_terlambat) : '-');
            // $objPHPExcel->getActiveSheet()->setCellValue('K' . $i, $total_jamefektif > 0 ? Utils::sec2hhmm($total_jamefektif) : '-');
            // $objPHPExcel->getActiveSheet()->setCellValue('L' . $i, $total_jamaktual > 0 ? Utils::sec2hhmm($total_jamaktual) : '-');
            // $objPHPExcel->getActiveSheet()->mergeCells('A'.$i.':E'.$i);
            // for($j = 1;$j<=13;$j++){
            //     $hi = Utils::angkaToHuruf($j);
            //     $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->applyFromArray($styleArray);
            //     $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            // }
            // $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

            // password
            // Utils::passwordExcel($objPHPExcel);

            Utils::insertLogUser('Ekspor laporan per pegawai');
            Utils::setFileNameExcel(trans('all.perpegawai'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    // public function perPegawaiPDF($idpegawai)
    // {
    //     require(public_path() .'/fpdf/fpdf.php');

    //     //Cell(width , height , text , border , endline , [align])

    //     $pdo = DB::connection('perusahaan_db')->getPdo();

    //     $where = '';
    //     if (Session::has('lapperpegawai_tanggalawal') && Session::has('lapperpegawai_tanggalakhir')) {
    //         $where .= ' AND ra.tanggal BETWEEN STR_TO_DATE("' . Session::get("lapperpegawai_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("lapperpegawai_tanggalakhir") . '","%d/%m/%Y")';
    //     }

    //     // $sql = 'SELECT
    //     //             ra.tanggal,
    //     //             IFNULL(ra.waktumasuk,"") as waktumasukdatetime,
    //     //             IFNULL(ra.waktukeluar,"") as waktukeluardatetime,
    //     //             IFNULL(TIME(ra.waktumasuk),"") as waktumasuk,
    //     //             IFNULL(TIME(ra.waktukeluar),"") as waktukeluar,
    //     //             IF(ra.selisihmasuk>0,ra.selisihmasuk,"") as datangawal,
    //     //             IF(ra.selisihmasuk<0,-1*ra.selisihmasuk,"") as terlambat,
    //     //             IF(ra.selisihkeluar>0,ra.selisihkeluar,"") as pulanglebihawal,
    //     //             IF(ra.selisihkeluar<0,-1*ra.selisihkeluar,"") as pulangterlambat,
    //     //             SEC_TO_TIME(ra.lamakerja) as lamakerja,
    //     //             SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
    //     //             SEC_TO_TIME(ra.lamalembur) as lamalembur,
    //     //             CONCAT(IF(ra.absentidaklengkap="m","'.trans('all.kurangabsenmasuk').'",IF(ra.absentidaklengkap="k","'.trans('all.kurangabsenkeluar').'",""))," ",IF(ISNULL(ra.idharilibur)=true,IFNULL(atm.alasan,""),hl.keterangan)) as keterangan,
    //     //             -- IF(ra.absentidaklengkap="m","'.trans('all.kurangabsenmasuk').'",IF(ra.absentidaklengkap="k",'.trans('all.kurangabsenkeluar').'",IF(ISNULL(ra.idharilibur)=true,IFNULL(atm.alasan,""),hl.keterangan))) as keterangan,
    //     //             x.jamkerja,
    //     //             x.jamkerjaefektif
    //     //         FROM
    //     //             rekapabsen ra
    //     //             LEFT JOIN harilibur hl ON ra.idharilibur = hl.id
    //     //             LEFT JOIN alasantidakmasuk atm ON ra.idalasantidakmasuk = atm.id,
    //     //             (
    //     //                 SELECT
    //     //                     ra.id,
    //     //                     GROUP_CONCAT(DATE_FORMAT(raj.waktu,"%H:%i") ORDER BY raj.waktu SEPARATOR " - ") as jamkerja,
    //     //                     GROUP_CONCAT(raj.waktu ORDER BY raj.waktu SEPARATOR "|") as jamkerjaefektif
    //     //                 FROM
    //     //                     rekapabsen ra,
    //     //                     rekapabsen_jadwal raj
    //     //                 WHERE
    //     //                     ra.id=raj.idrekapabsen AND
    //     //                     raj.checking IN ("start", "end") AND
    //     //                     ra.idpegawai = '.$idpegawai.'
    //     //                     '.$where.'
    //     //                 GROUP BY
    //     //                     ra.id
    //     //             ) x
    //     //         WHERE
    //     //             ra.id = x.id AND
    //     //             ra.idpegawai = ' . $idpegawai.' '.$where;
    //     $sql = 'SELECT
    //                 ra.tanggal,
    //                 IFNULL(ra.idharilibur,"") as idharilibur,
    //                 IFNULL(ra.waktumasuk,"") as waktumasukdatetime,
    //                 IFNULL(ra.waktukeluar,"") as waktukeluardatetime,
    //                 IFNULL(TIME(ra.waktumasuk),"") as waktumasuk,
    //                 IFNULL(TIME(ra.waktukeluar),"") as waktukeluar,
    //                 IF(ra.selisihmasuk>0,ra.selisihmasuk,"") as datangawal,
    //                 IF(ra.selisihmasuk<0,-1*ra.selisihmasuk,"") as terlambat,
    //                 IF(ra.selisihkeluar<0,-1*ra.selisihkeluar,"") as pulanglebihawal,
    //                 IF(ra.selisihkeluar>0,ra.selisihkeluar,"") as pulangterlambat,
    //                 SEC_TO_TIME(ra.lamakerja) as lamakerja,
    //                 SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
    //                 SEC_TO_TIME(ra.lamalembur) as lamalembur,
    //                 ra.jadwalmasukkerja,
    //                 ra.masukkerja,
    //                 ra.absentidaklengkap,
    //                 IFNULL(hl.keterangan,"") as keteranganharilibur,
    //                 IFNULL(atm.alasan,"") as alasantidakmasuk,
    //                 IFNULL(x.jamkerja,"") as jamkerja,
    //                 ra.jadwallamakerja as jamkerjaefektif
    //             FROM
    //                 rekapabsen ra
    //                 LEFT JOIN (
    //                     SELECT
    //                         ra.id,
    //                         GROUP_CONCAT(DATE_FORMAT(raj.waktu,"%H:%i") ORDER BY raj.waktu SEPARATOR " - ") as jamkerja
    //                     FROM
    //                         rekapabsen ra,
    //                         rekapabsen_jadwal raj
    //                     WHERE
    //                         ra.id=raj.idrekapabsen AND
    //                         raj.checking IN ("start", "end") AND
    //                         ra.idpegawai = '.$idpegawai.'
    //                         '.$where.'
    //                     GROUP BY
    //                         ra.id
    //                 ) x ON ra.id = x.id
    //                 LEFT JOIN harilibur hl ON ra.idharilibur = hl.id
    //                 LEFT JOIN alasantidakmasuk atm ON ra.idalasantidakmasuk = atm.id
    //             WHERE
    //                 ra.idpegawai = ' . $idpegawai.' '.$where.'
    //             ORDER BY
    //                 ra.tanggal ASC';
    //     $stmt = $pdo->prepare($sql);
    //     $stmt->execute();

    //     $pdf = new FPDF();
    //     $pdf->AddPage('L');

    //     $width_cell=array(20,15,15,15,15,15,15,15,15,20,25,25,65);
    //     $pdf->SetFont('Arial','B',6);

    //     //Background color of header//
    //     $pdf->SetFillColor(193,229,252);
    //     // Header starts ///
    //     // $pdf->Cell(40,20,'Hello World!',1);
    //     // $pdf->Cell(80,10,'Hello World!',1);
    //     // $pdf->Cell(40,20,'Hello World!',1);
    //     // $pdf->Cell(0,10,'',0,1);
    //     // $pdf->Cell(40,10,'',0,0);
    //     // $pdf->Cell(40,10,'Hello World!',1);
    //     // $pdf->Cell(40,10,'Hello World!',1);

    //     //Cell(width , height , text , border , endline , [align])

    //     $periodecantik = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd(Session::get("lapperpegawai_tanggalawal")),Utils::convertDmy2Ymd(Session::get("lapperpegawai_tanggalakhir")));
    //     $pdop = DB::getPdo();
    //     $sql1 = 'SELECT folderroot FROM perusahaan_route WHERE idperusahaan = :idperusahaan';
    //     $stmt1 = $pdop->prepare($sql1);
    //     $stmt1->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
    //     $stmt1->execute();
    //     $rowp = $stmt1->fetch(PDO::FETCH_ASSOC);
    //     $path = $rowp['folderroot'].'/logo_perusahaan';
    //     if (file_exists($path)) {
    //         $urlimage = url('foto/perusahaan').'/'.Session::get('conf_webperusahaan');
    //         $format = '';
    //         if(exif_imagetype($urlimage) == 2){
    //             // JPEG bernilai 2
    //             $format = 'JPEG';
    //         }else{
    //             // PNG bernilai 3
    //             $format = 'PNG';
    //         }
    //         $pdf->Cell( 20, 20, $pdf->Image($urlimage, $pdf->GetX(), $pdf->GetY(), 20, 20, $format));
    //         $pdf->Cell(5);
    //         $pdf->Cell(50,3,trans('all.laporankehadiranpegawai'));
    //         $pdf->Ln();
    //         $pdf->Cell(25);
    //         $pdf->Cell(50,3,trans('all.periode').' : '.$periodecantik);
    //         $pdf->Ln();
    //         $pdf->Cell(25);
    //         $pdf->Cell(50,3,trans('all.nama').' : '.Utils::getNamaPegawai($idpegawai));
    //         $pdf->Ln();
    //         $pdf->Cell(25);
    //         $pdf->Cell(50,3,trans('all.pin').' : '.Utils::getDataWhere($pdo,'pegawai','pin','id', $idpegawai));
    //         $pdf->Ln();
    //         $sql2 = 'SELECT
    //                     av.atribut,
    //                     pa.variable
    //                 FROM
    //                     atributvariable av,
    //                     pegawaiatributvariable pa
    //                 WHERE
    //                     pa.idatributvariable=av.id AND
    //                     av.penting = "y" AND
    //                     pa.idpegawai = ' . $idpegawai;
    //         $stmt2 = $pdo->prepare($sql2);
    //         $stmt2->execute();
    //         if ($stmt2->rowCount() > 0) {
    //             while ($row2 = $stmt2->fetch(PDO::FETCH_ASSOC)) {
    //                 $pdf->Cell(25);
    //                 $pdf->Cell(50,3,$row2['atribut'].' : '.$row2['variable']);
    //                 $pdf->Ln();
    //             }
    //         }
    //         $pdf->Ln();
    //         $pdf->Ln(7);
    //     }else{
    //         $pdf->Cell(50,3,trans('all.laporankehadiranpegawai'));
    //         $pdf->Ln();
    //         $pdf->Cell(50,3,trans('all.periode').' : '.$periodecantik);
    //         $pdf->Ln();
    //         $pdf->Cell(50,3,trans('all.nama').' : '.Utils::getNamaPegawai($idpegawai));
    //         $pdf->Ln();
    //         $pdf->Cell(50,3,trans('all.pin').' : '.Utils::getDataWhere($pdo,'pegawai','pin','id', $idpegawai));
    //         $pdf->Ln();
    //         $sql1 = 'SELECT
    //                     av.atribut,
    //                     pa.variable
    //                 FROM
    //                     atributvariable av,
    //                     pegawaiatributvariable pa
    //                 WHERE
    //                     pa.idatributvariable=av.id AND
    //                     av.penting = "y" AND
    //                     pa.idpegawai = ' . $idpegawai;
    //         $stmt1 = $pdo->prepare($sql1);
    //         $stmt1->execute();
    //         if ($stmt1->rowCount() > 0) {
    //             while ($row1 = $stmt1->fetch(PDO::FETCH_ASSOC)) {
    //                 $pdf->Cell(50,3,$row1['atribut'].' : '.$row1['variable']);
    //                 $pdf->Ln();
    //             }
    //         }
    //         $pdf->Ln();
    //     }
    //     $pdf->Cell($width_cell[0],6,trans('all.tanggal'),1,0,'C');
    //     $pdf->Cell(30,3,trans('all.jamkerja'),1,0,'C');
    //     $pdf->Cell($width_cell[3],6,trans('all.jammasuk'),1,0,'C');
    //     $pdf->Cell($width_cell[4],6,trans('all.jampulang'),1,0,'C');
    //     $pdf->Cell(30,3,trans('all.jamdatang'),1,0,'C');
    //     $pdf->Cell(30,3,trans('all.jumlahjampulang'),1,0,'C');
    //     $pdf->Cell($width_cell[9],6,trans('all.terlambataktual'),1,0,'C');
    //     $pdf->Cell($width_cell[10],6,trans('all.jumlahjamefektif'),1,0,'C');
    //     $pdf->Cell($width_cell[11],6,trans('all.jumlahjamaktual'),1,0,'C');
    //     $pdf->Cell($width_cell[12],6,trans('all.keterangan'),1,0,'C');
    //     $pdf->Cell(0,3,'',0,1); // enter
    //     $pdf->Cell(20,3,'',0,0); // row kosong
    //     $pdf->Cell($width_cell[1],3,trans('all.masuk'),1,0,'C');
    //     $pdf->Cell($width_cell[2],3,trans('all.pulang'),1,0,'C');
    //     $pdf->Cell(15,3,'',0,0); // row kosong
    //     $pdf->Cell(15,3,'',0,0); // row kosong
    //     $pdf->Cell($width_cell[5],3,trans('all.cepat'),1,0,'C');
    //     $pdf->Cell($width_cell[6],3,trans('all.telat'),1,0,'C');
    //     $pdf->Cell($width_cell[7],3,trans('all.cepat'),1,0,'C');
    //     $pdf->Cell($width_cell[8],3,trans('all.telat'),1,0,'C');
    //     $pdf->Cell($width_cell[0],3,'',0,0); // row kosong
    //     $pdf->Cell($width_cell[10],3,'',0,0); // row kosong
    //     $pdf->Cell($width_cell[11],3,'',0,0); // row kosong
    //     $pdf->Cell($width_cell[12],3,'',0,0); // row kosong
    //     $pdf->Ln();
    //     //// header ends ///////
    //     $pdf->SetFont('Arial','',6);
    //     //Background color of header//
    //     $pdf->SetFillColor(235,236,236);
    //     //to give alternate background fill color to rows//
    //     $fill=false;
    //     /// each record is one row  ///

    //     $total_harikerja = 0;
    //     $total_jamdatang_cepat = 0;
    //     $total_jamdatang_telat = 0;
    //     $total_jampulang_cepat = 0;
    //     $total_jampulang_telat = 0;
    //     $total_terlambat = 0;
    //     $total_jamefektif = 0;
    //     $total_jamaktual = 0;

    //     while ($row =  $stmt->fetch(PDO::FETCH_ASSOC)) {
    //         $jamkerja = explode('-',$row['jamkerja']);
    //         $jamkerjaefektif = $row['jamkerjaefektif'];

    //         // terlambataktual
    //         $terlambataktual = 0;
    //         $jamkerjaaktual = 0;

    //         if($row['waktumasukdatetime'] != '' || $row['waktukeluardatetime'] != ''){
    //             $total_harikerja = $total_harikerja + 1;
    //             $terlambataktual = $row['terlambat'] + $row['pulanglebihawal'] - $row['pulangterlambat'];
    //             if($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't'){
    //                 // jika harilibur dan pegawai tsb tetap masuk, hitung jam kerja aktual dari waktu keluar di kurangi waktu masuk
    //                 if($row['waktumasukdatetime'] != '' && $row['waktukeluardatetime'] != ''){
    //                     $jamkerjaaktual = abs(strtotime($row['waktukeluardatetime']) - strtotime($row['waktumasukdatetime']));
    //                     // $jamkerjaaktual = Utils::sec2hhmm($waktuaktual - $terlambataktual);
    //                 }
    //             }else{
    //                 // jika tidak harilibur, jam kerja aktual dari jamkerjaefektif
    //                 $jamkerjaaktual = $jamkerjaefektif;
    //             }
    //             if ($terlambataktual>0) {
    //                 $jamkerjaaktual = $jamkerjaaktual - $terlambataktual;
    //             }
    //         }

    //         // if($row['absentidaklengkap'] != ''){
    //         //     $jamkerjaaktual = 14400;
    //         // }

    //         $datangawal = $row['datangawal'] != '' ? $row['datangawal'] : 0;
    //         $terlambat = $row['terlambat'] != '' ? $row['terlambat'] : 0;
    //         $pulanglebihawal = $row['pulanglebihawal'] != '' ? $row['pulanglebihawal'] : 0;
    //         $pulangterlambat = $row['pulangterlambat'] != '' ? $row['pulangterlambat'] : 0;

    //         $total_jamdatang_cepat = $total_jamdatang_cepat + $datangawal ;
    //         $total_jamdatang_telat = $total_jamdatang_telat + $terlambat;
    //         $total_jampulang_cepat = $total_jampulang_cepat + $pulanglebihawal;
    //         $total_jampulang_telat = $total_jampulang_telat + $pulangterlambat;
    //         $total_terlambat = $total_terlambat + $terlambataktual;
    //         $total_jamefektif = $total_jamefektif + $jamkerjaefektif;
    //         $total_jamaktual = $total_jamaktual + $jamkerjaaktual;

    //         //keterangan
    //         $keterangan = '';
    //         if($terlambat > 0){
    //             $keterangan .= trans('all.terlambat').', ';
    //         }
    //         if($pulanglebihawal > 0){
    //             $keterangan .= trans('all.pulangawal').', ';
    //         }
    //         if($row['jadwalmasukkerja'] == 't'){
    //             $keterangan .= trans('all.libur').', ';
    //         }
    //         if($row['absentidaklengkap'] == 'm'){
    //             $keterangan .= trans('all.kurangabsenmasuk').', ';
    //         }
    //         if($row['absentidaklengkap'] == 'k'){
    //             $keterangan .= trans('all.kurangabsenkeluar').', ';
    //         }
    //         if($row['alasantidakmasuk'] != ''){
    //             $keterangan .= $row['alasantidakmasuk'].', ';
    //         }
    //         if($row['keteranganharilibur'] != ''){
    //             $keterangan .= $row['keteranganharilibur'].', ';
    //         }

    //         if($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't'){
    //             //Setting the text color to red
    //             $pdf->SetTextColor(194,8,8);
    //             $pdf->Cell($width_cell[0],3,Utils::tanggalCantik($row['tanggal']),1,0,'C');
    //             //Setting the text color to black
    //             $pdf->SetTextColor(0,0,0);
    //         }else{
    //             $pdf->Cell($width_cell[0],3,Utils::tanggalCantik($row['tanggal']),1,0,'C');
    //         }
    //         $pdf->Cell($width_cell[1],3,$row['jamkerja'] != '' ? $jamkerja[0] : '-',1,0,'C');
    //         $pdf->Cell($width_cell[2],3,$row['jamkerja'] != '' ? $jamkerja[1] : '-',1,0,'C');
    //         $pdf->Cell($width_cell[3],3,$row['waktumasuk'] != '' ? substr($row['waktumasuk'], 0, -3) : '-',1,0,'C');
    //         $pdf->Cell($width_cell[4],3,$row['waktukeluar'] != '' ? substr($row['waktukeluar'], 0, -3) : '-',1,0,'C');
    //         $pdf->Cell($width_cell[5],3,$datangawal > 59 ? Utils::sec2hhmm($datangawal) : '-',1,0,'C');
    //         $pdf->Cell($width_cell[6],3,$terlambat > 59 ? Utils::sec2hhmm($terlambat) : '-',1,0,'C');
    //         $pdf->Cell($width_cell[7],3,$pulanglebihawal > 59 ? Utils::sec2hhmm($pulanglebihawal) : '-',1,0,'C');
    //         $pdf->Cell($width_cell[8],3,$pulangterlambat > 59 ? Utils::sec2hhmm($pulangterlambat) : '-',1,0,'C');
    //         $pdf->Cell($width_cell[9],3,$terlambataktual > 59 ? Utils::sec2hhmm($terlambataktual) : '-',1,0,'C');
    //         $pdf->Cell($width_cell[10],3,$jamkerjaefektif > 59 ? Utils::sec2hhmm($jamkerjaefektif) : '-',1,0,'C');
    //         $pdf->Cell($width_cell[11],3,$jamkerjaaktual > 59 ? Utils::sec2hhmm($jamkerjaaktual) : '-',1,0,'C');
    //         $pdf->Cell($width_cell[12],3,$keterangan != '' ? substr($keterangan, 0, -2) : ($row['masukkerja'] == 'y' ? '' : trans('all.tanpaketerangan')),1,0,'C');
    //         $pdf->Ln();
    //         //to give alternate background fill  color to rows//
    //         $fill = !$fill;
    //     }

    //     $pdf->Cell(80,3,trans('all.total').' '.$total_harikerja.' '.trans('all.harikerja'),1,0,'R');
    //     $pdf->Cell($width_cell[5],3,$total_jamdatang_cepat > 0 ? Utils::sec2hhmm($total_jamdatang_cepat) : '-',1,0,'C');
    //     $pdf->Cell($width_cell[6],3,$total_jamdatang_telat > 0 ? Utils::sec2hhmm($total_jamdatang_telat) : '-',1,0,'C');
    //     $pdf->Cell($width_cell[7],3,$total_jampulang_cepat > 0 ? Utils::sec2hhmm($total_jampulang_cepat) : '-',1,0,'C');
    //     $pdf->Cell($width_cell[8],3,$total_jampulang_telat > 0 ? Utils::sec2hhmm($total_jampulang_telat) : '-',1,0,'C');
    //     $pdf->Cell($width_cell[9],3,$total_terlambat > 0 ? Utils::sec2hhmm($total_terlambat) : '-',1,0,'C');
    //     $pdf->Cell($width_cell[10],3,$total_jamefektif > 0 ? Utils::sec2hhmm($total_jamefektif) : '-',1,0,'C');
    //     $pdf->Cell($width_cell[11],3,$total_jamaktual > 0 ? Utils::sec2hhmm($total_jamaktual) : '-',1,0,'C');
    //     $pdf->Cell($width_cell[12],3,'',1,0,'C');

    //     /// end of records ///
    //     $pdf->Output('D', time() . '_' . trans('all.perpegawai') . '.pdf');
    // }

    public function logabsen()
    {
        if(Utils::cekHakakses('laporanlogabsen','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $sql = 'SELECT id,nama FROM mesin WHERE status = "th" ORDER BY nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $mesinterhubung = $stmt->fetchAll(PDO::FETCH_OBJ);

            $sql = 'SELECT id,nama FROM mesin WHERE status = "bs" ORDER BY nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $mesinbebas = $stmt->fetchAll(PDO::FETCH_OBJ);

            $tahun = Utils::tahunDropdown();
            $atributs = Utils::getAtribut();
            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();

            $bulanterpilih = date('m');
            $tahunterpilih = date('Y');
            if(Session::has('laplogabsen_bulan') && Session::has('laplogabsen_tahun')){
                $bulanterpilih = Session::get('laplogabsen_bulan');
                $tahunterpilih = Session::get('laplogabsen_tahun');
            }
            $totalhari = cal_days_in_month(CAL_GREGORIAN,$bulanterpilih,$tahunterpilih);
            Utils::insertLogUser('akses menu laporan logabsen');
            return view('laporan/logabsen/index', ['data' => '', 'tahun' => $tahun, 'totalhari' => $totalhari, 'bulanterpilih' => $bulanterpilih, 'tahunterpilih' => $tahunterpilih, 'valuetglawalakhir' => $valuetglawalakhir, 'atributs' => $atributs, 'mesinterhubung' => $mesinterhubung, 'mesinbebas' => $mesinbebas, 'atributvariable' => '', 'atributpenting' => '', 'keterangan' => '', 'menu' => 'laplogabsen']);
        } else {
            return redirect('/');
        }
    }

    public function submitLogAbsen(Request $request)
    {
        if($request->filtermode == 'jangkauantanggal' && !Utils::cekDateTime($request->tanggalawal) && !Utils::cekDateTime($request->tanggalakhir)){
            return redirect('laporan/logabsen');
        }

        $pdo = DB::connection('perusahaan_db')->getPdo();

        Session::set('laplogabsen_tanggalawal', $request->tanggalawal);
        Session::set('laplogabsen_tanggalakhir', $request->tanggalakhir);
        Session::set('laplogabsen_atribut', $request->atributnilai);
        Session::set('laplogabsen_mesin', $request->mesin);
        Session::set('laplogabsen_filtermode', $request->filtermode);

        $atributs = Session::get('laplogabsen_atribut');
        $atributnilai = Utils::atributNilai($atributs);
        $atributnilaiketerangan = '';
        if ($atributnilai != '') {
            $atributnilaidipilih = Utils::getAtributSelected($atributnilai);
            $atributnilaiketerangan = Utils::atributNilaiKeterangan($atributnilaidipilih);
        }

        $keteranganmesin = '';
        if ($request->mesin != '') {
            $mesin = Utils::getMesin($request->mesin);
            $keteranganmesin = ' ' . trans('all.mesin') . ' : ';
            foreach ($mesin as $key) {
                $keteranganmesin .= $key->nama;
            }
        }

        if($request->filtermode == 'berdasarkantanggal') {
            $tahunterpilih = $request->tahun;
            $bulanterpilih = $request->bulan;
            $bulan = Utils::getBulan($request->bulan);
            $tanggal = implode(", ", $request->tanggal);
            $totalhari = cal_days_in_month(CAL_GREGORIAN, $bulanterpilih, $tahunterpilih);

            //cek jika totalhari dan tanggal yg terpilih sama(satu bulan penuh)
            if ($totalhari == count($request->tanggal)) {
                $tanggal = '';
            }

            //set session
            Session::set('laplogabsen_tanggal', $request->tanggal);
            Session::set('laplogabsen_bulan', $request->bulan);
            Session::set('laplogabsen_tahun', $request->tahun);

            $keterangan = $tanggal . ' ' . $bulan . ' ' . $tahunterpilih . ' ' . $atributnilaiketerangan . $keteranganmesin;
        }else{
            $keterangan = trans('all.tanggal') . ' : ' . Session::get('laplogabsen_tanggalawal') . ' - ' . Session::get('laplogabsen_tanggalakhir') . $atributnilaiketerangan . $keteranganmesin;
        }

        $allatribut = Utils::getAllAtribut('blade');
        $atributpenting_controller = explode('|', $allatribut['atributpenting_controller']);
        $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
        $atributvariablepenting_controller = explode('|', $allatribut['atributvariablepenting_controller']);
        $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);

        $where = '';
        if (Session::has('laplogabsen_tanggalawal') && Session::has('laplogabsen_tanggalakhir')) {
            $where .= ' AND waktu>=CONCAT(STR_TO_DATE(:tanggalawal,"%d/%m/%Y")," 00:00:00") AND waktu<=CONCAT(STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")," 23:59:59")';
        }
        if (Session::has('laplogabsen_atribut')) {
            $atributs = Session::get('laplogabsen_atribut');
            $atributnilai = Utils::atributNilai($atributs);
            $where .= ' AND idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
        }
        if (Session::has('laplogabsen_mesin')) {
            if (Session::get('laplogabsen_mesin') != '') {
                $where .= ' AND idmesin IN (' . implode(',', Session::get('laplogabsen_mesin')) . ')';
            }
        }

        //cek apakah ada data
        $sql = 'SELECT id FROM logabsen WHERE 1=1 ' . $where;
        $stmt = $pdo->prepare($sql);
        if (Session::has('laplogabsen_tanggalawal') && Session::has('laplogabsen_tanggalakhir')) {
            $stmt->bindValue(':tanggalawal', Session::get("laplogabsen_tanggalawal"));
            $stmt->bindValue(':tanggalakhir', Session::get("laplogabsen_tanggalakhir"));
        }
        $stmt->execute();
        $totaldata = $stmt->rowCount();

        return view('laporan/logabsen/index', ['data' => 'submit', 'atributs' => $atributs, 'keterangan' => $keterangan, 'totaldata' => $totaldata, 'atributpenting_controller' => $atributpenting_controller, 'atributpenting_blade' => $atributpenting_blade, 'atributvariablepenting_controller' => $atributvariablepenting_controller, 'atributvariablepenting_blade' => $atributvariablepenting_blade, 'menu' => 'laplogabsen']);
    }

    public function logabsenData(Request $request)
    {
        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }
        $pdo = DB::connection('perusahaan_db')->getPdo();
        $where = '';
        $wheretable = '';
        $tanggalawal = '';
        $tanggalakhir = '';
        if(Session::get('laplogabsen_filtermode') == 'jangkauantanggal'){
            if (Session::has('laplogabsen_tanggalawal')) {
                $tanggalawal = Session::get("laplogabsen_tanggalawal");
                $tanggalakhir = Session::get("laplogabsen_tanggalakhir");
                $wheretable .= ' AND la.waktu>=CONCAT(STR_TO_DATE(:tanggalawal,"%d/%m/%Y")," 00:00:00") AND la.waktu<=CONCAT(STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")," 23:59:59")';
            }
        }else if(Session::get('laplogabsen_filtermode') == 'berdasarkantanggal'){
            $tahun = Session::get('laplogabsen_tahun');
            $bulan = Session::get('laplogabsen_bulan');
            $tanggal = Session::get('laplogabsen_tanggal');
            if ($tanggal != ''){
                $arrWherePerTanggal = array();
                for($i=0;$i<count($tanggal);$i++) {
                    $arrWherePerTanggal[$i] = '( la.waktu>="'.$tahun.'-'.$bulan.'-'.$tanggal[$i].' 00:00:00" AND la.waktu<="'.$tahun.'-'.$bulan.'-'.$tanggal[$i].' 23:59:59" )';
                }
                $wheretable .= ' AND ( '.implode(' OR ',$arrWherePerTanggal).' )';
            } else {
                //cari hari terakhir pada bulan terpilih
                $firstDate = $tahun.'-'.$bulan.'-01';
                $lastDate = date("Y-m-t", strtotime($firstDate));
                $tanggalawal = $firstDate.' 00:00:00';
                $tanggalakhir = $lastDate.' 23:59:59';
                $wheretable .= ' AND la.waktu>=:tanggalawal AND la.waktu<=:tanggalakhir';
            }
        }

        if (Session::has('laplogabsen_mesin')) {
            if (Session::get('laplogabsen_mesin') != '') {
                $wheretable .= ' AND la.idmesin IN (' . implode(',', Session::get('laplogabsen_mesin')) . ')';
            }
        }
        $whereAtribut = '';
        if (Session::has('laplogabsen_atribut')) {
            $atributs = Session::get('laplogabsen_atribut');
            $atributnilai = Utils::atributNilai($atributs);
            $whereAtribut .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
        }
        $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
        if ($batasan != '') {
            $whereAtribut .= ' AND id IN ' . $batasan;
        }
        if ($whereAtribut != '') {
            $whereAtribut = ' AND ' . substr($whereAtribut, 4);
        }
        $allatribut = Utils::getAllAtribut('controller', $whereAtribut);
        $atributpenting = $allatribut['atributpenting'];
        $atributvariablepenting = $allatribut['atributvariablepenting'];
        $stringcolumn = 'tanggal,namapegawai,lat,pin,'.$atributvariablepenting.'masukkeluar,flag,alasan,terhitungkerja,status,mesin'.$atributpenting;
        $columns = explode(',',$stringcolumn);
        $table = '(
                    SELECT
                        la.id,
                        la.idpegawai,
                        la.idmesin,
                        la.waktu,
                        la.waktu as tanggal,
                        la.waktu as tanggalasli,
                        p.nama as namapegawai,
                        p.pin,
                        ' . $atributvariablepenting . '
                        la.masukkeluar,
                        la.flag,
                        IFNULL(amk.alasan,"-") as alasan,
                        la.terhitungkerja,
                        la.status,
                        m.nama as mesin,
                        la.lat,
                        la.lon
                        ' . $atributpenting . '
                    FROM
                        logabsen la
                        LEFT JOIN mesin m ON m.id=la.idmesin
                        LEFT JOIN alasanmasukkeluar amk ON amk.id=la.idalasanmasukkeluar,
                        pegawai p,
                        _pegawailengkap _pa
                    WHERE
                        p.id=la.idpegawai AND
                        _pa.id=p.id AND
                        p.del = "t"
                        '.$wheretable.'
                    ORDER BY
                        la.waktu ASC
                ) x';
        $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
        $stmt = $pdo->prepare($sql);
        if($tanggalawal != '' && $tanggalakhir != ''){
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
        }
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        $totalData = $row['total'];
        $totalFiltered = $totalData;
        $limit = $request->input('length');
        $start = $request->input('start');
        $orderColumn = $columns[$request->input('order.0.column')];
        $orderAction = $request->input('order.0.dir');
        $orderBy = $orderColumn.' '.$orderAction;

        if(!empty($request->input('search.value'))){
            $search = $request->input('search.value');
            $where .= Utils::searchDatatableQuery($columns);
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
            $stmt = $pdo->prepare($sql);
            if($tanggalawal != '' && $tanggalakhir != ''){
                $stmt->bindValue(':tanggalawal', $tanggalawal);
                $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            }
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                }
            }
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalFiltered = $row['total'];
        }

        $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
        $stmt = $pdo->prepare($sql);
        if($tanggalawal != '' && $tanggalakhir != ''){
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
        }
        if(!empty($request->input('search.value'))) {
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                }
            }
        }
        $stmt->execute();
        $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $data = array();
        if(!empty($originaldata)){
            foreach($originaldata as $key){
                $tempdata['tanggal'] = $key['tanggal'];
                $tempdata['lokasi'] =  $key['lat'] != '' && $key['lon'] != '' ? '<span style="cursor:pointer" onclick="lihatLokasi(\''.$key['lat'].'\',\''.$key['lon'].'\')"><i class="fa fa-map-marker"></i></span>' : '';
                for($i=1;$i<count($columns);$i++){
                    if($columns[$i] == 'flag') {
                        $tempdata[$columns[$i]] = $key['flag'] != '' ? trans('all.'.(str_replace('-','',$key['flag']))) : '';
                    }elseif($columns[$i] == 'masukkeluar' || $columns[$i] == 'status' || $columns[$i] == 'terhitungkerja') {
                        $kolom = $key[$columns[$i]] == 'v' ? 'valid' : ($key[$columns[$i]] == 'c' ? 'confirm' : $key[$columns[$i]] == 'na' ? 'notapprove' : $key[$columns[$i]]);
                        $tempdata[$columns[$i]] = Utils::labelKolom($kolom);
                    }elseif($columns[$i] == 'namapegawai'){
                        $tempdata[$columns[$i]] = '<span class=detailpegawai onclick=detailpegawai('.$key['idpegawai'].') style=cursor:pointer>'.htmlentities($key['namapegawai']).'</span>';
                    }else{
                        $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                    }
                }
                $data[] = $tempdata;
            }
        }
        return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
    }

    public function excelLogabsen()
    {
        if(Utils::cekHakakses('laporanlogabsen','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.logabsen'));

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
//            if ($rowPE['logokiri'] == '' AND $rowPE['logokanan'] == '' AND $rowPE['header_1_teks'] == '' AND $rowPE['header_2_teks'] == '' AND $rowPE['header_3_teks'] == '' AND $rowPE['header_4_teks'] == '' AND $rowPE['header_5_teks'] == '') {
//                $b = 1; //b = baris
//            } else {
//                $b = 6;
//            }
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }

            $bt = $b; //variabel b tanggal dari sampai
            $b = $b + 1;

            //get atribut
            $allatribut = Utils::getAllAtribut('blade');
            $atributpenting_controller = ($allatribut['atributpenting_controller'] != '' ? explode('|', $allatribut['atributpenting_controller']) : '');
            $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
            $atributvariablepenting_controller = ($allatribut['atributvariablepenting_controller'] != '' ? explode('|', $allatribut['atributvariablepenting_controller']) : '');
            $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);
            $totalatributvariable = ($atributvariablepenting_controller != '' ? count($atributvariablepenting_controller) : 0);
            $totalatributpenting = ($atributpenting_controller != '' ? count($atributpenting_controller) : 0);

            //set atribut variable
            $i = 5;
            if ($atributvariablepenting_blade != '') {
                //looping untuk header
                foreach ($atributvariablepenting_blade as $key) {
                    if ($key != '') {
                        $hh = Utils::angkaToHuruf($i);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $key);
                        //lebar kolom
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);
                        //set bold
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->getFont()->setBold(true);
                        //style
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);

                        $i++;
                    }
                }
            }

            //set value kolom
            $h1 = Utils::angkaToHuruf($i);
            $h2 = Utils::angkaToHuruf($i + 1);
            $h3 = Utils::angkaToHuruf($i + 2);
            $h4 = Utils::angkaToHuruf($i + 3);
            $h5 = Utils::angkaToHuruf($i + 4);
            $h6 = Utils::angkaToHuruf($i + 5);
            $h7 = Utils::angkaToHuruf($i + 6);
            $h8 = Utils::angkaToHuruf($i + 7);

            //set atribut penting
            if ($atributpenting_blade != '') {
                //looping untuk header
                foreach ($atributpenting_blade as $key) {
                    if ($key != '') {
                        $hi = $i + 8;
                        $hh = Utils::angkaToHuruf($hi);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $key);
                        //lebar kolom
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);
                        //set bold
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->getFont()->setBold(true);
                        //style
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);

                        $i++;
                    }
                }
            }

            //set atribut untuk query
            $whereAtribut = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $whereAtribut = ' AND id IN ' . $batasan;
            }
            if (Session::has('laplogabsen_atribut')) {
                $atributs = Session::get('laplogabsen_atribut');
                $atributnilai = Utils::atributNilai($atributs);
                $whereAtribut .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }
            $allatribut_controller = Utils::getAllAtribut('controller', $whereAtribut);
            $atributpenting = $allatribut_controller['atributpenting'];
            $atributvariablepenting = $allatribut_controller['atributvariablepenting'];

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . $b, trans('all.tanggal'))
                        ->setCellValue('B' . $b, trans('all.jam'))
                        ->setCellValue('C' . $b, trans('all.pegawai'))
                        ->setCellValue('D' . $b, trans('all.pin'))
                        ->setCellValue($h1 . $b, trans('all.masukkeluar'))
                        ->setCellValue($h2 . $b, trans('all.flag'))
                        ->setCellValue($h3 . $b, trans('all.alasan'))
                        ->setCellValue($h4 . $b, trans('all.terhitungkerja'))
                        ->setCellValue($h5 . $b, trans('all.status'))
                        ->setCellValue($h6 . $b, trans('all.mesin'))
                        ->setCellValue($h7 . $b, trans('all.lat'))
                        ->setCellValue($h8 . $b, trans('all.lon'));

            $where = '';
            $tanggalawal = '';
            $tanggalakhir = '';
            if(Session::get('laplogabsen_filtermode') == 'jangkauantanggal'){
                if (Session::has('laplogabsen_tanggalawal')) {
                    $tanggalawal = Session::get("laplogabsen_tanggalawal");
                    $tanggalakhir = Session::get("laplogabsen_tanggalakhir");
                    $where = ' AND la.waktu>=CONCAT(STR_TO_DATE(:tanggalawal,"%d/%m/%Y")," 00:00:00") AND la.waktu<=CONCAT(STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")," 23:59:59")';
                }
            }else if(Session::get('laplogabsen_filtermode') == 'berdasarkantanggal'){
                $tahun = Session::get('laplogabsen_tahun');
                $bulan = Session::get('laplogabsen_bulan');
                $tanggal = Session::get('laplogabsen_tanggal');
                if ($tanggal != ''){
                    $arrWherePerTanggal = array();
                    for($i=0;$i<count($tanggal);$i++) {
                        $arrWherePerTanggal[$i] = '( la.waktu>="'.$tahun.'-'.$bulan.'-'.$tanggal[$i].' 00:00:00" AND la.waktu<="'.$tahun.'-'.$bulan.'-'.$tanggal[$i].' 23:59:59" )';
                    }
                    $where .= ' AND ( '.implode(' OR ',$arrWherePerTanggal).' )';
                } else {
                    //cari hari terakhir pada bulan terpilih
                    $firstDate = $tahun.'-'.$bulan.'-01';
                    $lastDate = date("Y-m-t", strtotime($firstDate));
                    $tanggalawal = $firstDate.' 00:00:00';
                    $tanggalakhir = $lastDate.' 23:59:59';
                    $where .= ' AND la.waktu>=:tanggalawal AND la.waktu<=:tanggalakhir';
                }
            }
            if (Session::has('laplogabsen_mesin')) {
                if (Session::get('laplogabsen_mesin') != '') {
                    $where .= ' AND la.idmesin IN (' . implode(',', Session::get('laplogabsen_mesin')) . ')';
                }
            }

            $sql = 'SELECT
                        (DATEDIFF(la.waktu,"1900-01-01")+2) as tanggal,
                        ROUND(time_to_sec(timediff(DATE_FORMAT(la.waktu,"%T"),"00:00:00"))/86400,9) as jam,
                        p.nama as namapegawai,
                        p.pin,
                        ' . $atributvariablepenting . '
                        la.masukkeluar,
                        la.flag,
                        IF(la.masukkeluar="m","' . trans("all.masuk") . '","' . trans("all.keluar") . '") as masukkeluar,
                        IFNULL(amk.alasan,"-") as alasan,
                        IF(la.terhitungkerja="y","' . trans("all.ya") . '","' . trans("all.tidak") . '") as terhitungkerja,
                        IF(la.status="v","' . trans("all.valid") . '",if(la.status="c","' . trans("all.konfirmasi") . '","' . trans("all.tidakvalid") . '")) as status,
                        m.nama as mesin,
                        la.lat,
                        la.lon
                        ' . $atributpenting . '
                    FROM
                        logabsen la
                        LEFT JOIN mesin m ON m.id=la.idmesin
                        LEFT JOIN alasanmasukkeluar amk ON amk.id=la.idalasanmasukkeluar,
                        pegawai p,
                        _pegawailengkap _pa
                    WHERE
                        p.id=la.idpegawai AND
                        p.id=_pa.id AND
                        p.del = "t"
                        ' . $where . '
                    ORDER BY
                        la.waktu ASC';
            $stmt = $pdo->prepare($sql);
            if($tanggalawal != '' && $tanggalakhir != ''){
                $stmt->bindValue(':tanggalawal', $tanggalawal);
                $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            }
            $stmt->execute();
            $i = $b + 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['jam']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['namapegawai']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['masukkeluar']);
                $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['flag'] != '' ? trans('all.'.(str_replace('-','',$row['flag']))) : '');
                $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['alasan']);
                $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['terhitungkerja']);
                $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $row['status']);
                $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['mesin']);
                $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $row['lat']);
                $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['lon']);

                if($atributvariablepenting_controller != '') {
                    $z1 = 5; //huruf setelah kolom jamkerja
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hv = Utils::angkaToHuruf($z1);
                        $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row[$atributvariablepenting_controller[$j]]);

                        $z1++;
                    }
                }

                if($atributpenting_controller != '') {
                    $z2 = 13 + $totalatributvariable; //iterasi untuk looping atribut penting 6 dari jumlah kolom fix
                    for ($j = 0; $j < $totalatributpenting; $j++) {

                        $hap = Utils::angkaToHuruf($z2);
                        $objPHPExcel->getActiveSheet()->setCellValue($hap . $i, $row[$atributpenting_controller[$j]]);

                        $z2++;
                    }
                }

                // format
                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY');
                $objPHPExcel->getActiveSheet()->getStyle('B' . $i)->getNumberFormat()->setFormatCode('HH:MM:SS');

                for ($j = 1; $j <= 12 + $totalatributvariable + $totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $bt)->applyFromArray($styleArray);
                }

                $i++;
            }

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(10);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(30);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h1)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h4)->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h5)->setWidth(25);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(15);

            $heightgambar = 99;
            $widthgambar = 99;

            $cg = Utils::angkaToHuruf(12 + $totalatributvariable + $totalatributpenting) . '1';
            $cg1 = Utils::angkaToHuruf(12 + $totalatributvariable + $totalatributpenting);

            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                $l = $i - 1;
            } else {
                $l = $i + 1;
                Utils::footerExcel($objPHPExcel,'kiri','A','B',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'tengah','F','G',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'kanan','K',$cg1,$l,$rowPE);
            }

            // password
            Utils::passwordExcel($objPHPExcel);

            if ($b != 2) {
                Utils::header5baris($objPHPExcel,$cg1,$rowPE);
            }

            //merge dan stylegaris range keterangan tanggal setelah header
            $objPHPExcel->getActiveSheet()->mergeCells('A' . $bt . ':' . $cg1 . $bt);
            // value
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $bt, trans('all.menampilkandatatanggal') . ' ' . Session::get("laplogabsen_tanggalawal") . ' - ' . Session::get("laplogabsen_tanggalakhir"));
            // center text
            $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            //font size
            $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getFont()->setSize(14);

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $l + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('A' . $ft)->getFont()->setItalic(true);

            if ($rowPE['logokiri'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
            }

            if ($rowPE['logokanan'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg1.'1');
            }

            Utils::insertLogUser('Ekspor laporan log absen');
            Utils::setFileNameExcel(trans('all.logabsen'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function kehadiran()
    {
        if(Utils::cekHakakses('laporankehadiran','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }
            $tahun = Utils::tahunDropdown();
            $atributs = Utils::getAtribut();
            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();

            $bulanterpilih = date('m');
            $tahunterpilih = date('Y');
            if(Session::has('lapkehadiran_bulan') && Session::has('lapkehadiran_tahun')){
                $bulanterpilih = Session::get('lapkehadiran_bulan');
                $tahunterpilih = Session::get('lapkehadiran_tahun');
            }
            $totalhari = cal_days_in_month(CAL_GREGORIAN,$bulanterpilih,$tahunterpilih);
            Utils::insertLogUser('akses menu kehadiran');
            return view('laporan/kehadiran/index', ['data' => '', 'tahun' => $tahun, 'totalhari' => $totalhari, 'bulanterpilih' => $bulanterpilih, 'tahunterpilih' => $tahunterpilih, 'valuetglawalakhir' => $valuetglawalakhir, 'atributs' => $atributs, 'atributvariable' => '', 'atributpenting' => '', 'keterangan' => '', 'menu' => 'kehadiran']);
        } else {
            return redirect('/');
        }
    }

    public function submitKehadiran(Request $request)
    {
        if($request->filtermode == 'jangkauantanggal' && !Utils::cekDateTime($request->tanggalawal) && !Utils::cekDateTime($request->tanggalakhir)){
            return redirect('laporan/kehadiran');
        }
        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }
        Session::set('lapkehadiran_tanggalawal', $request->tanggalawal);
        Session::set('lapkehadiran_tanggalakhir', $request->tanggalakhir);
        Session::set('lapkehadiran_atribut', $request->atributnilai);
        Session::set('lapkehadiran_jenis', $request->jenis);
        Session::set('lapkehadiran_filtermode', $request->filtermode);

        $jenis = Session::get('lapkehadiran_jenis');
        $keteranganjenis = '';
        if ($jenis != '') {
            $keteranganjenis = ' ' . trans('all.jenis') . ' : ';
            for ($i = 0; $i < count($jenis); $i++) {
                $keteranganjenis .= trans('all.' . $jenis[$i]) . ', ';
            }
            $keteranganjenis = substr($keteranganjenis, 0, -2);
        }

        $atributs = Session::get('lapkehadiran_atribut');
        $atributnilai = Utils::atributNilai($atributs);
        $atributnilaiketerangan = '';
        if ($atributnilai != '') {
            $atributnilaidipilih = Utils::getAtributSelected($atributnilai);
            $atributnilaiketerangan = Utils::atributNilaiKeterangan($atributnilaidipilih);
        }

        if($request->filtermode == 'berdasarkantanggal') {
            $tahunterpilih = $request->tahun;
            $bulanterpilih = $request->bulan;
            $bulan = Utils::getBulan($request->bulan);
            $tanggal = implode(", ", $request->tanggal);
            $totalhari = cal_days_in_month(CAL_GREGORIAN, $bulanterpilih, $tahunterpilih);

            //cek jika totalhari dan tanggal yg terpilih sama(satu bulan penuh)
            if ($totalhari == count($request->tanggal)) {
                $tanggal = '';
            }

            //set session
            Session::set('lapkehadiran_tanggal', $request->tanggal);
            Session::set('lapkehadiran_bulan', $request->bulan);
            Session::set('lapkehadiran_tahun', $request->tahun);

            $keterangan = $tanggal . ' ' . $bulan . ' ' . $tahunterpilih . ' ' . $atributnilaiketerangan . $keteranganjenis;
        }else{
            $keterangan = trans('all.tanggal') . ' : ' . Session::get('lapkehadiran_tanggalawal') . ' - ' . Session::get('lapkehadiran_tanggalakhir') . $atributnilaiketerangan . $keteranganjenis;
        }

        $allatribut = Utils::getAllAtribut('blade');
        $atributpenting_controller = explode('|', $allatribut['atributpenting_controller']);
        $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
        $atributvariablepenting_controller = explode('|', $allatribut['atributvariablepenting_controller']);
        $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);

        //total data
        $where = '';
        if (Session::has('lapkehadiran_tanggalawal') && Session::has('lapkehadiran_tanggalakhir')) {
            $where .= ' WHERE tanggal BETWEEN STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")';
        }
        if (Session::has('lapkehadiran_atribut')) {
            $atributs = Session::get('lapkehadiran_atribut');
            $atributnilai = Utils::atributNilai($atributs);
            $where .= ' AND idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
        }

        $pdo = DB::connection('perusahaan_db')->getPdo();
        $sql = 'SELECT id FROM rekapabsen' . $where;
        $stmt = $pdo->prepare($sql);
        if (Session::has('lapkehadiran_tanggalawal') && Session::has('lapkehadiran_tanggalakhir')) {
            $stmt->bindValue(':tanggalawal', Session::get("lapkehadiran_tanggalawal"));
            $stmt->bindValue(':tanggalakhir', Session::get("lapkehadiran_tanggalakhir"));
        }
        $stmt->execute();
        $totaldata = $stmt->rowCount();

        return view('laporan/kehadiran/index', ['data' => 'submit', 'atributs' => $atributs, 'keterangan' => $keterangan, 'totaldata' => $totaldata, 'atributpenting_controller' => $atributpenting_controller, 'atributpenting_blade' => $atributpenting_blade, 'atributvariablepenting_controller' => $atributvariablepenting_controller, 'atributvariablepenting_blade' => $atributvariablepenting_blade, 'menu' => 'kehadiran']);
    }

    public function kehadiranData(Request $request)
    {
        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }
        $where = '';
        $wheretable = '';
        $where_rekapabsen_logaabsen = '';
        $tanggalawal = '';
        $tanggalakhir = '';
        if(Session::get('lapkehadiran_filtermode') == 'jangkauantanggal'){
            if (Session::has('lapkehadiran_tanggalawal') && Session::has('lapkehadiran_tanggalawal')) {
                $tanggalawal = Session::get("lapkehadiran_tanggalawal");
                $tanggalakhir = Session::get("lapkehadiran_tanggalakhir");
                $wheretable .= ' AND ra.tanggal BETWEEN STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")';
                $where_rekapabsen_logaabsen .= ' AND rala.waktu>=CONCAT(SUBDATE(STR_TO_DATE("' . Session::get("lapkehadiran_tanggalawal") . '","%d/%m/%Y"), INTERVAL 1 DAY)," 00:00:00") AND rala.waktu<=CONCAT(ADDDATE(STR_TO_DATE("' . Session::get("lapkehadiran_tanggalakhir") . '","%d/%m/%Y"), INTERVAL 1 DAY)," 23:59:59")';
            }
        }else if(Session::get('lapkehadiran_filtermode') == 'berdasarkantanggal'){
            $tahun = Session::get('lapkehadiran_tahun');
            $bulan = Session::get('lapkehadiran_bulan');
            $tanggal = Session::get('lapkehadiran_tanggal');
            $wherePeriode = '';
            if ($tanggal != ''){
                for($i=0;$i<count($tanggal);$i++) {
                    $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                }
                if (strlen($wherePeriode)>0) {
                    $wheretable .= ' AND ra.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                }
            } else {
//                $where .= ' AND year(tanggal)='.$tahun.' AND month(tanggal)='.$bulan;
                $wheretable .= ' AND year(ra.tanggal)='.$tahun.' AND month(tanggal)='.$bulan;
            }
        }

        if (Session::has('lapkehadiran_jenis')) {
            $jenis = Session::get('lapkehadiran_jenis');
            $totaljenis = count($jenis);
            // $kehadiranjenis = '';
            $arrJenis = array();
            if ($totaljenis > 0) {
                for ($i = 0; $i < $totaljenis; $i++) {
                    // $kehadiranjenis .= $jenis[$i] . ',';
                    if ($jenis[$i] == 'terlambat') {
                        $arrJenis[$i] = 'ra.selisihmasuk<0';
                        // $where .= ' OR ra.selisihmasuk<0 ';
                    }

                    if ($jenis[$i] == 'pulangawal') {
                        $arrJenis[$i] = 'ra.selisihkeluar<0';
                        // $where .= ' OR ra.selisihkeluar<0 ';
                    }

                    if ($jenis[$i] == 'lamalembur') {
                        $arrJenis[$i] = 'ra.lamalembur>0';
                        // $where .= ' OR ra.lamalembur>0 ';
                    }
                }
                $wheretable .= ' AND ( '.implode(' OR ',$arrJenis).' )';
            }
        }

        $whereAtribut = '';
        if (Session::has('lapkehadiran_atribut')) {
            $atributs = Session::get('lapkehadiran_atribut');
            $atributnilai = Utils::atributNilai($atributs);
            $whereAtribut .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            $wheretable .= ' AND ra.idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
        }

        $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
        if ($batasan != '') {
            $whereAtribut .= ' AND id IN ' . $batasan;
        }

        if ($whereAtribut != '') {
            $whereAtribut = ' AND ' . substr($whereAtribut, 4);
        }

        $allatribut = Utils::getAllAtribut('controller', $whereAtribut);
        $atributpenting = $allatribut['atributpenting'];
        $atributvariablepenting = $allatribut['atributvariablepenting'];

        $pdo = DB::connection('perusahaan_db')->getPdo();
        $stringcolumn = 'tanggal,libur,harilibur,nama,pin,'.$atributvariablepenting.'masukkerja,alasantidakmasuk,jamkerja,alasanmasuk,lokasimasuk,lokasikeluar,waktumasuk,waktukeluar,datangawal,terlambat,pulanglebihawal,lamakerja,lamaflexytime,lamalembur'.$atributpenting;
        $columns = explode(',',$stringcolumn);
        $table = '(
                    SELECT
                        ra.id,
                        ra.idpegawai,
                        ra.tanggal,
                        ra.jadwalmasukkerja as libur,
                        IFNULL(hl.keterangan,"") as harilibur,
                        p.nama,
                        p.pin,
                        ' . $atributvariablepenting . '
                        ra.masukkerja,
                        IFNULL(atm.alasan,"") as alasantidakmasuk,
                        IFNULL(jk.nama,"") as jamkerja,
                        IFNULL(amk.alasan,"") as alasanmasuk,
                        IFNULL(x.latlonmasuk,"") as latlonmasuk,
                        IFNULL(y.latlonkeluar,"") as latlonkeluar,
                        getlokasiabsen_darirekapabsen(ra.id,"m") as lokasimasuk,
                        getlokasiabsen_darirekapabsen(ra.id,"k") as lokasikeluar,
                        IFNULL(TIME(ra.waktumasuk),"") as waktumasuk,
                        IFNULL(TIME(ra.waktukeluar),"") as waktukeluar,
                        IF(ra.selisihmasuk>0,SEC_TO_TIME(ra.selisihmasuk),"00:00:00") as datangawal,
                        IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"00:00:00") as terlambat,
                        IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"00:00:00") as pulanglebihawal,
                        SEC_TO_TIME(ra.lamakerja) as lamakerja,
                        SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
                        SEC_TO_TIME(ra.lamalembur) as lamalembur,
                        ROUND(ra.lamakerja/60) as lamakerja1,
                        ROUND(ra.lamalembur/60) as lamalembur1,
                        ra.selisihmasuk as selisihmasukrekapabsen,
                        ra.selisihkeluar as selisihkeluarrekapabsen,
                        ra.lamalembur as lamalemburrekapabsen
                        ' . $atributpenting . '
                    FROM
                        pegawai p,
                        _pegawailengkap _pa,
                        rekapabsen ra
                        LEFT JOIN harilibur hl ON hl.id=ra.idharilibur
                        LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
                        LEFT JOIN jamkerja jk ON jk.id=ra.idjamkerja
                        LEFT JOIN alasanmasukkeluar amk ON amk.id=ra.idalasanmasuk
                        LEFT JOIN (
                            select
                                rala.id,
                                rala.idrekapabsen,
                                rala.masukkeluar,
                                CONCAT(IF(ISNULL(la.lat)=false,CONCAT(IFNULL(la.lat,""),", "),""),IFNULL(la.lon,"")) as latlonmasuk
                            from
                                rekapabsen_logabsen rala
                                LEFT JOIN logabsen la ON rala.idlogabsen=la.id
                            where
                                rala.terhitungkerja="y" AND
                                rala.masukkeluar = "m" '.$where_rekapabsen_logaabsen.'
                            group by
                                rala.idrekapabsen
                        ) x ON x.idrekapabsen=ra.id
                        LEFT JOIN (
                            select
                                rala.id,
                                rala.idrekapabsen,
                                rala.masukkeluar,
                                CONCAT(IF(ISNULL(la.lat)=false,CONCAT(IFNULL(la.lat,""),", "),""),IFNULL(la.lon,"")) as latlonkeluar
                            from
                                rekapabsen_logabsen rala
                                LEFT JOIN logabsen la ON rala.idlogabsen=la.id
                            where
                                rala.terhitungkerja="y" AND
                                rala.masukkeluar = "k" '.$where_rekapabsen_logaabsen.'
                            group by
                                rala.idrekapabsen
                        ) y ON y.idrekapabsen=ra.id
                    WHERE
                        p.id=_pa.id AND
                        ra.idpegawai=p.id AND
                        p.del = "t"
                        '.$wheretable.'
                ) x';
        $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
        $stmt = $pdo->prepare($sql);
        if($tanggalawal != '' && $tanggalakhir != ''){
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
        }
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        $totalData = $row['total'];
        $totalFiltered = $totalData;
        $limit = $request->input('length');
        $start = $request->input('start');
        $orderColumn = $columns[$request->input('order.0.column')];
        $orderAction = $request->input('order.0.dir');
        $orderBy = $orderColumn.' '.$orderAction;

        if(!empty($request->input('search.value'))){
            $search = $request->input('search.value');
            $where .= Utils::searchDatatableQuery($columns);
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
            $stmt = $pdo->prepare($sql);
            if($tanggalawal != '' && $tanggalakhir != ''){
                $stmt->bindValue(':tanggalawal', $tanggalawal);
                $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            }
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                }
            }
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalFiltered = $row['total'];
        }

        $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
        $stmt = $pdo->prepare($sql);
        if($tanggalawal != '' && $tanggalakhir != ''){
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
        }
        if(!empty($request->input('search.value'))) {
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                }
            }
        }
        $stmt->execute();
        $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $data = array();
        if(!empty($originaldata)){
            foreach($originaldata as $key){
                $tempdata['tanggal'] = $key['tanggal'];
                for($i=1;$i<count($columns);$i++){
                    if($columns[$i] == 'libur') {
                        $tempdata[$columns[$i]] = Utils::labelKolom($key[$columns[$i]] == 't' ? 'y' : 't');
                    }elseif($columns[$i] == 'masukkerja') {
                        $tempdata[$columns[$i]] = Utils::labelKolom($key[$columns[$i]]);
                    }elseif($columns[$i] == 'nama') {
                        $tempdata[$columns[$i]] = '<span class=detailpegawai onclick=detailpegawai("'.$key['idpegawai'].'") style=cursor:pointer>'.$key['nama'].'</span>';
                    }else{
                        $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                    }
                }
                $data[] = $tempdata;
            }
        }
        return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
    }

    public function excelKehadiran()
    {
        if(Utils::cekHakakses('laporankehadiran','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.kehadiran'));

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }

            $bt = $b; //variabel b tanggal dari sampai
            $b = $b + 1;

            //get atribut
            $allatribut = Utils::getAllAtribut('blade');
            $atributpenting_controller = ($allatribut['atributpenting_controller'] != '' ? explode('|', $allatribut['atributpenting_controller']) : '');
            $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
            $atributvariablepenting_controller = ($allatribut['atributvariablepenting_controller'] != '' ? explode('|', $allatribut['atributvariablepenting_controller']) : '');
            $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);
            $totalatributvariable = ($atributvariablepenting_controller != '' ? count($atributvariablepenting_controller) : 0);
            $totalatributpenting = ($atributpenting_controller != '' ? count($atributpenting_controller) : 0);

            //set atribut variable
            $i = 6; //huruf setelah kolom pin
            if ($atributvariablepenting_blade != '') {
                //looping untuk header
                foreach ($atributvariablepenting_blade as $key) {
                    if ($key != '') {
                        $hh = Utils::angkaToHuruf($i);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $key);
                        //lebar kolom
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);
                        //set bold
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->getFont()->setBold(true);
                        //style
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);

                        $i++;
                    }
                }
            }

            //set value kolom
            $h1 = Utils::angkaToHuruf($i);
            $h2 = Utils::angkaToHuruf($i + 1);
            $h3 = Utils::angkaToHuruf($i + 2);
            $h4 = Utils::angkaToHuruf($i + 3);
            $h5 = Utils::angkaToHuruf($i + 4);
            $h6 = Utils::angkaToHuruf($i + 5);
            $h7 = Utils::angkaToHuruf($i + 6);
            $h8 = Utils::angkaToHuruf($i + 7);
            $h9 = Utils::angkaToHuruf($i + 8);
            $h10 = Utils::angkaToHuruf($i + 9);
            $h11 = Utils::angkaToHuruf($i + 10);
            $h12 = Utils::angkaToHuruf($i + 11);
            $h13 = Utils::angkaToHuruf($i + 12);
            $h14 = Utils::angkaToHuruf($i + 13);

            //set atribut penting
            if ($atributpenting_blade != '') {
                //looping untuk header
                foreach ($atributpenting_blade as $key) {
                    if ($key != '') {
                        $hi = $i + 14;
                        $hh = Utils::angkaToHuruf($hi);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $key);
                        //lebar kolom
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);
                        //set bold
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->getFont()->setBold(true);
                        //style
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);

                        $i++;
                    }
                }
            }

            //set atribut untuk query
            $whereAtribut = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $whereAtribut = ' AND id IN ' . $batasan;
            }
            if (Session::has('lapkehadiran_atribut')) {
                $atributs = Session::get('lapkehadiran_atribut');
                $atributnilai = Utils::atributNilai($atributs);
                $whereAtribut .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }
            $allatribut_controller = Utils::getAllAtribut('controller', $whereAtribut);
            $atributpenting = $allatribut_controller['atributpenting'];
            $atributvariablepenting = $allatribut_controller['atributvariablepenting'];

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . $b, trans('all.tanggal'))
                        ->setCellValue('B' . $b, trans('all.libur'))
                        ->setCellValue('C' . $b, trans('all.harilibur'))
                        ->setCellValue('D' . $b, trans('all.nama'))
                        ->setCellValue('E' . $b, trans('all.pin'))
                        ->setCellValue($h1 . $b, trans('all.masukkerja'))
                        ->setCellValue($h2 . $b, trans('all.alasantidakmasuk'))
                        ->setCellValue($h3 . $b, trans('all.jamkerja'))
                        ->setCellValue($h4 . $b, trans('all.alasanmasuk'))
                        ->setCellValue($h5 . $b, trans('all.lokasimasuk'))
                        ->setCellValue($h6 . $b, trans('all.lokasikeluar'))
                        ->setCellValue($h7 . $b, trans('all.waktumasuk'))
                        ->setCellValue($h8 . $b, trans('all.waktukeluar'))
                        ->setCellValue($h9 . $b, trans('all.datangawal'))
                        ->setCellValue($h10 . $b, trans('all.terlambat'))
                        ->setCellValue($h11 . $b, trans('all.pulanglebihawal'))
                        ->setCellValue($h12 . $b, trans('all.lamakerja'))
                        ->setCellValue($h13 . $b, trans('all.lamaflexytime'))
                        ->setCellValue($h14 . $b, trans('all.lamalembur'));

            $where = '';
            $where_rekapabsen_logaabsen = '';
            $tanggalawal = '';
            $tanggalakhir = '';
            if(Session::get('lapkehadiran_filtermode') == 'jangkauantanggal'){
                if (Session::has('lapkehadiran_tanggalawal') && Session::has('lapkehadiran_tanggalakhir')) {
                    $tanggalawal = Session::get("lapkehadiran_tanggalawal");
                    $tanggalakhir = Session::get("lapkehadiran_tanggalakhir");
                    $where .= ' AND ra.tanggal BETWEEN STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")';
                    $where_rekapabsen_logaabsen .= ' AND rala.waktu>=CONCAT(SUBDATE(STR_TO_DATE("' . Session::get("lapkehadiran_tanggalawal") . '","%d/%m/%Y"), INTERVAL 1 DAY)," 00:00:00") AND rala.waktu<=CONCAT(ADDDATE(STR_TO_DATE("' . Session::get("lapkehadiran_tanggalakhir") . '","%d/%m/%Y"), INTERVAL 1 DAY)," 23:59:59")';
                }
            }else if(Session::get('lapkehadiran_filtermode') == 'berdasarkantanggal'){
                $tahun = Session::get('lapkehadiran_tahun');
                $bulan = Session::get('lapkehadiran_bulan');
                $tanggal = Session::get('lapkehadiran_tanggal');
                $wherePeriode = '';
                if ($tanggal != ''){
                    for($i=0;$i<count($tanggal);$i++) {
                        $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                    }
                    if (strlen($wherePeriode)>0) {
                        $where .= ' AND ra.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                    }
                }
                else {
                    $where .= ' AND year(ra.tanggal)='.$tahun.' AND month(ra.tanggal)='.$bulan;
                }
            }

            if (Session::has('lapkehadiran_jenis')) {
                $jenis = Session::get('lapkehadiran_jenis');
                $totaljenis = count($jenis);
                // $kehadiranjenis = '';
                $arrJenis = array();
                if ($totaljenis > 0) {
                    for ($i = 0; $i < $totaljenis; $i++) {
                        // $kehadiranjenis .= $jenis[$i] . ',';
                        if ($jenis[$i] == 'terlambat') {
                            $arrJenis[$i] = 'ra.selisihmasuk<0';
                            // $where .= ' OR ra.selisihmasuk<0 ';
                        }

                        if ($jenis[$i] == 'pulangawal') {
                            $arrJenis[$i] = 'ra.selisihkeluar<0';
                            // $where .= ' OR ra.selisihkeluar<0 ';
                        }

                        if ($jenis[$i] == 'lamalembur') {
                            $arrJenis[$i] = 'ra.lamalembur>0';
                            // $where .= ' OR ra.lamalembur>0 ';
                        }
                    }
                    $where .= ' AND ( '.implode(' OR ',$arrJenis).' )';
                }
            }

            $sql = 'SELECT
                        (DATEDIFF(ra.tanggal,"1900-01-01")+2) as tanggal,
                        IF(ra.jadwalmasukkerja="t","' . trans("all.ya") . '","' . trans("all.tidak") . '") as libur,
                        IFNULL(hl.keterangan,"") as harilibur,
                        p.nama,
                        p.pin,
                        ' . $atributvariablepenting . '
                        IF(ra.masukkerja="y","' . trans("all.ya") . '","' . trans("all.tidak") . '") as masukkerja,
                        IFNULL(atm.alasan,"") as alasantidakmasuk,
                        IFNULL(jk.nama,"") as jamkerja,
                        IFNULL(amk.alasan,"") as alasanmasuk,
                        IFNULL(x.latlonmasuk,"") as latlonmasuk,
                        IFNULL(y.latlonkeluar,"") as latlonkeluar,
                        getlokasiabsen_darirekapabsen(ra.id,"m") as lokasimasuk,
                        getlokasiabsen_darirekapabsen(ra.id,"k") as lokasikeluar,
                        ROUND(time_to_sec(timediff(DATE_FORMAT(ra.waktumasuk,"%T"),"00:00:00"))/86400,9) as waktumasuk,
                        ROUND(time_to_sec(timediff(DATE_FORMAT(ra.waktukeluar,"%T"),"00:00:00"))/86400,9) as waktukeluar,
                        IF(ra.selisihmasuk>0,SEC_TO_TIME(ra.selisihmasuk),"00:00:00") as datangawal,
                        IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"00:00:00") as terlambat,
                        IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"00:00:00") as pulanglebihawal,
                        SEC_TO_TIME(ra.lamakerja) as lamakerja,
                        SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
                        SEC_TO_TIME(ra.lamalembur) as lamalembur,
                        ROUND(ra.lamakerja/60) as lamakerja1,
                        ROUND(ra.lamalembur/60) as lamalembur1
                        ' . $atributpenting . '
                    FROM
                        pegawai p,
                        rekapabsen ra
                        LEFT JOIN harilibur hl ON hl.id=ra.idharilibur
                        LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
                        LEFT JOIN jamkerja jk ON jk.id=ra.idjamkerja
                        LEFT JOIN alasanmasukkeluar amk ON amk.id=ra.idalasanmasuk
                        LEFT JOIN (
                            select
                                rala.id,
                                rala.idrekapabsen,
                                rala.masukkeluar,
                                CONCAT(IF(ISNULL(la.lat)=false,CONCAT(IFNULL(la.lat,""),", "),""),IFNULL(la.lon,"")) as latlonmasuk
                            from
                                rekapabsen_logabsen rala
                                LEFT JOIN logabsen la ON rala.idlogabsen=la.id
                            where
                                rala.terhitungkerja="y" AND
                                rala.masukkeluar = "m" '.$where_rekapabsen_logaabsen.'
                            group by
                                rala.idrekapabsen
                        ) x ON x.idrekapabsen=ra.id
                        LEFT JOIN (
                            select
                                rala.id,
                                rala.idrekapabsen,
                                rala.masukkeluar,
                                CONCAT(IF(ISNULL(la.lat)=false,CONCAT(IFNULL(la.lat,""),", "),""),IFNULL(la.lon,"")) as latlonkeluar
                            from
                                rekapabsen_logabsen rala
                                LEFT JOIN logabsen la ON rala.idlogabsen=la.id
                            where
                                rala.terhitungkerja="y" AND
                                rala.masukkeluar = "k" '.$where_rekapabsen_logaabsen.'
                            group by
                                rala.idrekapabsen
                        ) y ON y.idrekapabsen=ra.id,
                        _pegawailengkap _pa
                    WHERE
                        ra.idpegawai=p.id AND
                        p.id=_pa.id AND
                        p.del = "t"
                        ' . $where . '
                    ORDER BY
                        ra.tanggal, p.nama';
            $stmt = $pdo->prepare($sql);
            if($tanggalawal != '' && $tanggalakhir != ''){
                $stmt->bindValue(':tanggalawal', Session::get('lapkehadiran_tanggalawal'));
                $stmt->bindValue(':tanggalakhir', Session::get('lapkehadiran_tanggalakhir'));
            }
            $stmt->execute();
            $i = $b + 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['libur']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['harilibur']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['nama']);
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['masukkerja']);
                $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['alasantidakmasuk']);
                $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['jamkerja']);
                $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['alasanmasuk']);
                $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $row['lokasimasuk']);
                $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['lokasikeluar']);
                $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $row['waktumasuk']);
                $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['waktukeluar']);
                $objPHPExcel->getActiveSheet()->setCellValue($h9 . $i, $row['datangawal']);
                $objPHPExcel->getActiveSheet()->setCellValue($h10 . $i, $row['terlambat']);
                $objPHPExcel->getActiveSheet()->setCellValue($h11 . $i, $row['pulanglebihawal']);
                $objPHPExcel->getActiveSheet()->setCellValue($h12 . $i, $row['lamakerja']);
                $objPHPExcel->getActiveSheet()->setCellValue($h13 . $i, $row['lamaflexytime']);
                $objPHPExcel->getActiveSheet()->setCellValue($h14 . $i, $row['lamalembur']);

                if($atributvariablepenting_controller != '') {
                    $z1 = 6; //huruf setelah kolom jamkerja
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hv = Utils::angkaToHuruf($z1);
                        $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row[$atributvariablepenting_controller[$j]].' ');
//                        $objPHPExcel->getActiveSheet()->setCellValueExplicit($hv . $i, $row[$atributvariablepenting_controller[$j]],PHPExcel_Cell_DataType::TYPE_STRING);
                        $z1++;
                    }
                }

                if($atributpenting_controller != '') {
                    $z2 = 20 + $totalatributvariable; //iterasi untuk looping atribut penting 6 dari jumlah kolom fix
                    for ($j = 0; $j < $totalatributpenting; $j++) {

                        $hap = Utils::angkaToHuruf($z2);
                        $objPHPExcel->getActiveSheet()->setCellValue($hap . $i, ''.$row[$atributpenting_controller[$j]].' ');

                        $z2++;
                    }
                }

                // format
                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY');
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $i)->getNumberFormat()->setFormatCode('HH:MM:SS');
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $i)->getNumberFormat()->setFormatCode('HH:MM:SS');

                for ($j = 1; $j <= 19 + $totalatributvariable + $totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                }

                $i++;
            }

            for ($j = 1; $j <= 19 + $totalatributvariable + $totalatributpenting; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . $bt)->applyFromArray($styleArray);
            }

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(8);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(30);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h1)->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(19);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(20);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h4)->setWidth(20);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h5)->setWidth(20);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(20);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h9)->setWidth(11);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h10)->setWidth(19);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h11)->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h12)->setWidth(17);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h13)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h14)->setWidth(15);

            $heightgambar = 99;
            $widthgambar = 99;

            $cg = Utils::angkaToHuruf(19 + $totalatributvariable + $totalatributpenting) . '1';
            $cg1 = Utils::angkaToHuruf(19 + $totalatributvariable + $totalatributpenting);

            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                $l = $i - 1;
            } else {
                $l = $i + 1;
                Utils::footerExcel($objPHPExcel,'kiri','A','C',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'tengah','G','I',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'kanan','M',$cg1,$l,$rowPE);
                $l = $l+7;
            }

            // password
            Utils::passwordExcel($objPHPExcel);

            if ($b != 2) {
                Utils::header5baris($objPHPExcel,$cg1,$rowPE);
            }

            //merge dan stylegaris range keterangan tanggal setelah header
            $objPHPExcel->getActiveSheet()->mergeCells('A' . $bt . ':' . $cg1 . $bt);
            // value
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $bt, trans('all.menampilkandatatanggal') . ' ' . Session::get("lapkehadiran_tanggalawal") . ' - ' . Session::get("lapkehadiran_tanggalakhir"));
            // center text
            $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            //font size
            $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getFont()->setSize(14);

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $l + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('A' . $ft)->getFont()->setItalic(true);

            if ($rowPE['logokiri'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
            }

            if ($rowPE['logokanan'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg);
            }

            Utils::insertLogUser('Ekspor laporan kehadiran');
            Utils::setFileNameExcel(trans('all.kehadiran'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

//    public function rekapitulasi()
//    {
//        if(Utils::cekHakakses('laporan','l')){
//            if (Session::get('perusahaan_expired') == 'ya') {
//                return redirect('/');
//            }
//            $tahun = Utils::tahunDropdown();
//            $totalhari = cal_days_in_month(CAL_GREGORIAN,date('m'),date('Y'));
//            $atributs = Utils::getAtribut();
//            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();
//            return view('laporan/rekapitulasi/index', ['data' => '', 'tahun' => $tahun, 'totalhari' => $totalhari, 'bulanterpilih' => date('m'), 'tahunterpilih' => date('Y'), 'valuetglawalakhir' => $valuetglawalakhir, 'atributs' => $atributs, 'atributvariable' => '', 'atributpenting' => '', 'keterangan' => '', 'menu' => 'rekapitulasi']);
//        } else {
//            return redirect('/');
//        }
//    }
//
//    public function submitRekapitulasi(Request $request)
//    {
//        if (Session::get('perusahaan_expired') == 'ya') {
//            return '';
//        }
//
//        Session::set('laprekapitulasi_tanggalawal', $request->tanggalawal);
//        Session::set('laprekapitulasi_tanggalakhir', $request->tanggalakhir);
//        Session::set('laprekapitulasi_atribut', $request->atributnilai);
//        Session::set('laprekapitulasi_filtermode', $request->filtermode);
//
//        $atributs = Session::get('laprekapitulasi_atribut');
//        $atributnilai = Utils::atributNilai($atributs);
//        $atributnilaiketerangan = '';
//        if ($atributnilai != '') {
//            $atributnilaidipilih = Utils::getAtributSelected($atributnilai);
//            $atributnilaiketerangan = Utils::atributNilaiKeterangan($atributnilaidipilih);
//        }
//
//        if($request->filtermode == 'berdasarkantanggal') {
//            $tahunterpilih = $request->tahun;
//            $bulanterpilih = $request->bulan;
//            $bulan = Utils::getBulan($request->bulan);
//            $tanggal = implode(", ", $request->tanggal);
//            $totalhari = cal_days_in_month(CAL_GREGORIAN, $bulanterpilih, $tahunterpilih);
//
//            //cek jika totalhari dan tanggal yg terpilih sama(satu bulan penuh)
//            if ($totalhari == count($request->tanggal)) {
//                $tanggal = '';
//            }
//
//            //set session
//            Session::set('laprekapitulasi_tanggal', $request->tanggal);
//            Session::set('laprekapitulasi_bulan', $request->bulan);
//            Session::set('laprekapitulasi_tahun', $request->tahun);
//
//            $keterangan = $tanggal . ' ' . $bulan . ' ' . $tahunterpilih . ' ' . $atributnilaiketerangan;
//        }else{
//            $keterangan = trans('all.tanggal') . ' : ' . Session::get('laprekapitulasi_tanggalawal') . ' - ' . Session::get('laprekapitulasi_tanggalakhir') . $atributnilaiketerangan;
//        }
//
//        //atribut untuk di index.blade nya
//        $allatribut = Utils::getAllAtribut('blade');
//        $atributpenting_controller = explode('|', $allatribut['atributpenting_controller']);
//        $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
//        $atributvariablepenting_controller = explode('|', $allatribut['atributvariablepenting_controller']);
//        $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);
//
//        //totaldata
//        $where = '';
//        if (Session::has('laprekapitulasi_tanggalawal')) {
//            $where = ' WHERE DATE(tanggal) BETWEEN STR_TO_DATE("' . Session::get("laprekapitulasi_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("laprekapitulasi_tanggalakhir") . '","%d/%m/%Y")';
//        }
//        if (Session::has('laprekapitulasi_atribut')) {
//            $atributs = Session::get('laprekapitulasi_atribut');
//            $atributnilai = Utils::atributNilai($atributs);
//            $where .= ' AND idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
//        }
//        $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
//        if ($batasan != '') {
//            $where .= ' AND idpegawai IN ' . $batasan;
//        }
//
//        $pdo = DB::connection('perusahaan_db')->getPdo();
//        $sql = 'SELECT id FROM rekapabsen' . $where;
//        $stmt = $pdo->prepare($sql);
//        $stmt->execute();
//        $totaldata = $stmt->rowCount();
//
//        return view('laporan/rekapitulasi/index', ['data' => 'submit', 'atributs' => $atributs, 'keterangan' => $keterangan, 'totaldata' => $totaldata, 'atributpenting_controller' => $atributpenting_controller, 'atributpenting_blade' => $atributpenting_blade, 'atributvariablepenting_controller' => $atributvariablepenting_controller, 'atributvariablepenting_blade' => $atributvariablepenting_blade, 'menu' => 'rekapitulasi']);
//    }

//    public function rekapitulasiData(Request $request)
//    {
//        if (Session::get('perusahaan_expired') == 'ya') {
//            return '';
//        }
//
//        $where = ' AND 1=2';
//        if(Session::get('laprekapitulasi_filtermode') == 'jangkauantanggal'){
//            if (Session::has('laprekapitulasi_tanggalawal')) {
//                $where .= ' AND DATE(ra.tanggal) BETWEEN STR_TO_DATE("' . Session::get("laprekapitulasi_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("laprekapitulasi_tanggalakhir") . '","%d/%m/%Y")';
//            }
//        }else if(Session::get('laprekapitulasi_filtermode') == 'berdasarkantanggal'){
//            $tahun = Session::get('laprekapitulasi_tahun');
//            $bulan = Session::get('laprekapitulasi_bulan');
//            $tanggal = Session::get('laprekapitulasi_tanggal');
//            $wherePeriode = '';
//            if ($tanggal != ''){
//                for($i=0;$i<count($tanggal);$i++) {
//                    $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
//                }
//                if (strlen($wherePeriode)>0) {
//                    $where .= ' AND ra.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
//                }
//            }
//            else {
//                $where .= ' AND year(ra.tanggal)='.$tahun.' AND month(ra.tanggal)='.$bulan;
//            }
//        }
//
//        $whereAtribut = '';
//        if (Session::has('laprekapitulasi_atribut')) {
//            $atributs = Session::get('laprekapitulasi_atribut');
//            $atributnilai = Utils::atributNilai($atributs);
//            $where .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
//        }
//
//        $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
//        if ($batasan != '') {
//            $where .= ' AND p.id IN ' . $batasan;
//        }
//
//        if ($whereAtribut != '') {
//            $whereAtribut = ' AND ' . substr($whereAtribut, 4);
//        }
//
//        $allatribut = Utils::getAllAtribut('controller', $whereAtribut);
//        $atributpenting = $allatribut['atributpenting'];
//        $atributvariablepenting = $allatribut['atributvariablepenting'];
//
//        $sql = 'SELECT
//	                ra.tanggal,
//	                ra.jadwalmasukkerja as libur,
//	                IFNULL(hl.keterangan,"") as harilibur,
//	                CONCAT("<span class=detailpegawai onclick=detailpegawai(",p.id,") style=cursor:pointer>",p.nama,"</span>") as nama,
//	                p.pin,
//	                ' . $atributvariablepenting . '
//	                ra.masukkerja,
//	                IFNULL(atm.alasan,"") as alasantidakmasuk,
//	                IFNULL(jk.nama,"") as jamkerja,
//	                IFNULL(amk.alasan,"") as alasanmasuk,
//	                ra.waktumasuk,
//	                ra.waktukeluar,
//	                IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"00:00:00") as terlambat,
//	                IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"00:00:00") as pulanglebihawal,
//	                SEC_TO_TIME(ra.lamakerja) as lamakerja,
//	                SEC_TO_TIME(ra.lamalembur) as lamalembur,
//	                ra.absentidaklengkap as kelengkapanpresensi
//	                ' . $atributpenting . '
//	            FROM
//	                pegawai p,
//	                _pegawailengkap _pa,
//	                rekapabsen ra
//	                LEFT JOIN harilibur hl ON hl.id=ra.idharilibur
//	                LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
//	                LEFT JOIN jamkerja jk ON jk.id=ra.idjamkerja
//	                LEFT JOIN alasanmasukkeluar amk ON amk.id=ra.idalasanmasuk
//	            WHERE
//	                p.id=_pa.id AND
//	                ra.idpegawai=p.id AND
//	                p.del = "t"
//	                ' . $where . '
//	            ORDER BY
//	                ra.tanggal';
//
//        $rekapitulasis = DB::connection('perusahaan_db')->table(DB::raw('(' . $sql . ') as rekapitulasi'));
//
//        return Datatables::of($rekapitulasis)
//        ->editColumn('libur', '<center>@if($libur=="t") <span class="label label-primary">' . trans('all.ya') . '</span> @else <span class="label label-danger">' . trans('all.tidak') . '</span> @endif</center>')
//        ->editColumn('masukkerja', '<center>@if($masukkerja=="y") <span class="label label-info">' . trans('all.ya') . '</span> @else <span class="label label-warning">' . trans('all.tidak') . '</span> @endif</center>')
//        ->editColumn('kelengkapanpresensi', '<center>@if($kelengkapanpresensi=="m") ' . trans('all.kurangabsenmasuk') . '</span> @elseif($kelengkapanpresensi == "k")' . trans('all.kurangabsenkeluar') . '</span> @endif</center>')
//        ->make(true);
//    }

//    public function excelRekapitulasi()
//    {
//        if(Utils::cekHakakses('laporan','l')){
//            if (Session::get('perusahaan_expired') == 'ya') {
//                return '';
//            }
//
//            $pdo = DB::connection('perusahaan_db')->getPdo();
//            $objPHPExcel = new PHPExcel();
//
//            //set css kolom
//            $styleArray = array(
//                'borders' => array(
//                    'outline' => array(
//                        'style' => PHPExcel_Style_Border::BORDER_THIN,
//                        'color' => array('argb' => '000000'),
//                    ),
//                ),
//            );
//
//            Utils::setPropertiesExcel($objPHPExcel);
//
//            $sql = 'SELECT * FROM parameterekspor';
//            $stmt = $pdo->prepare($sql);
//            $stmt->execute();
//            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
//            if ($rowPE['logokiri'] == '' AND $rowPE['logokanan'] == '' AND $rowPE['header_1_teks'] == '' AND $rowPE['header_2_teks'] == '' AND $rowPE['header_3_teks'] == '' AND $rowPE['header_4_teks'] == '' AND $rowPE['header_5_teks'] == '') {
//                $b = 1; //b = baris
//            } else {
//                $b = 6;
//            }
//
//            $bt = $b; //variabel b tanggal dari sampai
//
//            $b = $b + 1;
//
//            //get atribut
//            $allatribut = Utils::getAllAtribut('blade');
//            $atributpenting_controller = ($allatribut['atributpenting_controller'] != '' ? explode('|', $allatribut['atributpenting_controller']) : '');
//            $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
//            $atributvariablepenting_controller = ($allatribut['atributvariablepenting_controller'] != '' ? explode('|', $allatribut['atributvariablepenting_controller']) : '');
//            $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);
//            $totalatributvariable = ($atributvariablepenting_controller != '' ? count($atributvariablepenting_controller) : 0);
//            $totalatributpenting = ($atributpenting_controller != '' ? count($atributpenting_controller) : 0);
//
//            //set atribut variable
//            $i = 6;
//            if ($atributvariablepenting_blade != '') {
//                //looping untuk header
//                foreach ($atributvariablepenting_blade as $key) {
//                    if ($key != '') {
//                        $hh = Utils::angkaToHuruf($i);
//                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $key);
//                        //lebar kolom
//                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);
//                        //set bold
//                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->getFont()->setBold(true);
//                        //style
//                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);
//
//                        $i++;
//                    }
//                }
//            }
//
//            //set value kolom
//            $h1 = Utils::angkaToHuruf($i);
//            $h2 = Utils::angkaToHuruf($i + 1);
//            $h3 = Utils::angkaToHuruf($i + 2);
//            $h4 = Utils::angkaToHuruf($i + 3);
//            $h5 = Utils::angkaToHuruf($i + 4);
//            $h6 = Utils::angkaToHuruf($i + 5);
//            $h7 = Utils::angkaToHuruf($i + 6);
//            $h8 = Utils::angkaToHuruf($i + 7);
//            $h9 = Utils::angkaToHuruf($i + 8);
//            $h10 = Utils::angkaToHuruf($i + 9);
//            $h11 = Utils::angkaToHuruf($i + 10);
//
//            //set atribut penting
//            if ($atributpenting_blade != '') {
//                //looping untuk header
//                foreach ($atributpenting_blade as $key) {
//                    if ($key != '') {
//                        $hi = $i + 10;
//                        $hh = Utils::angkaToHuruf($hi);
//                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $key);
//                        //lebar kolom
//                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);
//                        //set bold
//                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->getFont()->setBold(true);
//                        //style
//                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);
//
//                        $i++;
//                    }
//                }
//            }
//
//            //set atribut untuk query
//            $whereAtribut = '';
//            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
//            if ($batasan != '') {
//                $whereAtribut = ' AND id IN ' . $batasan;
//            }
//            if (Session::has('laprekapitulasi_atribut')) {
//                $atributs = Session::get('laprekapitulasi_atribut');
//                $atributnilai = Utils::atributNilai($atributs);
//                $whereAtribut .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
//            }
//            $allatribut_controller = Utils::getAllAtribut('controller', $whereAtribut);
//            $atributpenting = $allatribut_controller['atributpenting'];
//            $atributvariablepenting = $allatribut_controller['atributvariablepenting'];
//
//            $objPHPExcel->setActiveSheetIndex(0)
//                        ->setCellValue('A' . $b, trans('all.tanggal'))
//                        ->setCellValue('B' . $b, trans('all.libur'))
//                        ->setCellValue('C' . $b, trans('all.harilibur'))
//                        ->setCellValue('D' . $b, trans('all.nama'))
//                        ->setCellValue('E' . $b, trans('all.pin'))
//                        ->setCellValue($h1 . $b, trans('all.masukkerja'))
//                        ->setCellValue($h2 . $b, trans('all.alasantidakmasuk'))
//                        ->setCellValue($h3 . $b, trans('all.jamkerja'))
//                        ->setCellValue($h4 . $b, trans('all.alasanmasuk'))
//                        ->setCellValue($h5 . $b, trans('all.waktumasuk'))
//                        ->setCellValue($h6 . $b, trans('all.waktukeluar'))
//                        ->setCellValue($h7 . $b, trans('all.terlambat'))
//                        ->setCellValue($h8 . $b, trans('all.pulanglebihawal'))
//                        ->setCellValue($h9 . $b, trans('all.lamakerja'))
//                        ->setCellValue($h10 . $b, trans('all.lamalembur'))
//                        ->setCellValue($h11 . $b, trans('all.kelengkapanpresensi'));
//
//            $where = '';
//            if(Session::get('laprekapitulasi_filtermode') == 'jangkauantanggal'){
//                if (Session::has('laprekapitulasi_tanggalawal')) {
//                    $where .= ' AND DATE(ra.tanggal) BETWEEN STR_TO_DATE("' . Session::get("laprekapitulasi_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("laprekapitulasi_tanggalakhir") . '","%d/%m/%Y")';
//                }
//            }else if(Session::get('laprekapitulasi_filtermode') == 'berdasarkantanggal'){
//                $tahun = Session::get('laprekapitulasi_tahun');
//                $bulan = Session::get('laprekapitulasi_bulan');
//                $tanggal = Session::get('laprekapitulasi_tanggal');
//                $wherePeriode = '';
//                if ($tanggal != ''){
//                    for($i=0;$i<count($tanggal);$i++) {
//                        $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
//                    }
//                    if (strlen($wherePeriode)>0) {
//                        $where .= ' AND ra.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
//                    }
//                }
//                else {
//                    $where .= ' AND year(ra.tanggal)='.$tahun.' AND month(ra.tanggal)='.$bulan;
//                }
//            }
//
//            $sql = 'SELECT
//                        (DATEDIFF(ra.tanggal,"1900-01-01")+2) as tanggal,
//                        IF(ra.jadwalmasukkerja="y","' . trans("all.tidak") . '","' . trans("all.ya") . '") as libur,
//                        IFNULL(hl.keterangan,"") as harilibur,
//                        p.nama,
//                        p.pin,
//                        ' . $atributvariablepenting . '
//                        IF(ra.masukkerja="y","' . trans("all.ya") . '","' . trans("all.tidak") . '") as masukkerja,
//                        IFNULL(atm.alasan,"") as alasantidakmasuk,
//                        IFNULL(jk.nama,"") as jamkerja,
//                        IFNULL(amk.alasan,"") as alasanmasuk,
//                        ROUND(time_to_sec(timediff(DATE_FORMAT(ra.waktumasuk,"%T"),"00:00:00"))/86400,9) as waktumasuk,
//                        ROUND(time_to_sec(timediff(DATE_FORMAT(ra.waktukeluar,"%T"),"00:00:00"))/86400,9) as waktukeluar,
//                        IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"00:00:00") as terlambat,
//                        IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"00:00:00") as pulanglebihawal,
//                        SEC_TO_TIME(ra.lamakerja) as lamakerja,
//                        SEC_TO_TIME(ra.lamalembur) as lamalembur,
//                        ra.absentidaklengkap as kelengkapanpresensi
//                        ' . $atributpenting . '
//                    FROM
//                        pegawai p,
//                        rekapabsen ra
//                        LEFT JOIN harilibur hl ON hl.id=ra.idharilibur
//                        LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
//                        LEFT JOIN jamkerja jk ON jk.id=ra.idjamkerja
//                        LEFT JOIN alasanmasukkeluar amk ON amk.id=ra.idalasanmasuk,
//                        _pegawailengkap _pa
//                    WHERE
//                        ra.idpegawai=p.id AND
//                        p.id=_pa.id AND
//                        p.del = "t"
//                        ' . $where . '
//                    ORDER BY
//                        ra.tanggal';
//            $stmt = $pdo->prepare($sql);
//            $stmt->execute();
//            $i = $b + 1;
//            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
//
//                $kelengkapanpresensi = '';
//                if($row['kelengkapanpresensi'] == 'm'){
//                    $kelengkapanpresensi = trans('all.kurangabsenmasuk');
//                }else if($row['kelengkapanpresensi'] == 'k'){
//                    $kelengkapanpresensi = trans('all.kurangabsenkeluar');
//                }
//
//                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
//                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['libur']);
//                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['harilibur']);
//                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['nama']);
//                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['pin']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['masukkerja']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['alasantidakmasuk']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['jamkerja']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['alasanmasuk']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $row['waktumasuk']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['waktukeluar']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $row['terlambat']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['pulanglebihawal']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h9 . $i, $row['lamakerja']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h10 . $i, $row['lamalembur']);
//                $objPHPExcel->getActiveSheet()->setCellValue($h11 . $i, $kelengkapanpresensi);
//
//                if($atributvariablepenting_controller != '') {
//                    $z1 = 6; //huruf setelah kolom jamkerja
//                    for ($j = 0; $j < $totalatributvariable; $j++) {
//                        $hv = Utils::angkaToHuruf($z1);
//                        $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row[$atributvariablepenting_controller[$j]]);
//
//                        $z1++;
//                    }
//                }
//
//                if($atributpenting_controller != '') {
//                    $z2 = 16 + $totalatributvariable; //iterasi untuk looping atribut penting 6 dari jumlah kolom fix
//                    for ($j = 0; $j < $totalatributpenting; $j++) {
//
//                        $hap = Utils::angkaToHuruf($z2);
//                        $objPHPExcel->getActiveSheet()->setCellValue($hap . $i, $row[$atributpenting_controller[$j]]);
//
//                        $z2++;
//                    }
//                }
//
//                // format
//                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY');
//                $objPHPExcel->getActiveSheet()->getStyle($h5 . $i)->getNumberFormat()->setFormatCode('HH:MM:SS');
//                $objPHPExcel->getActiveSheet()->getStyle($h6 . $i)->getNumberFormat()->setFormatCode('HH:MM:SS');
//
//                for ($j = 1; $j <= 16 + $totalatributvariable + $totalatributpenting; $j++) {
//                    $huruf = Utils::angkaToHuruf($j);
//                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
//                }
//
//                $i++;
//            }
//
//            for ($j = 1; $j <= 16 + $totalatributvariable + $totalatributpenting; $j++) {
//                $huruf = Utils::angkaToHuruf($j);
//                $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->getFont()->setBold(true);
//                $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->applyFromArray($styleArray);
//                $objPHPExcel->getActiveSheet()->getStyle($huruf . $bt)->applyFromArray($styleArray);
//            }
//
//            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(12);
//            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(8);
//            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(15);
//            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(30);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h1)->setWidth(12);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(19);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(20);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h4)->setWidth(20);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h5)->setWidth(15);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(15);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(11);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(19);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h9)->setWidth(12);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h10)->setWidth(12);
//            $objPHPExcel->getActiveSheet()->getColumnDimension($h11)->setWidth(25);
//
//            $heightgambar = 99;
//            $widthgambar = 99;
//
//            $cg = Utils::angkaToHuruf(16 + $totalatributvariable + $totalatributpenting) . '1';
//            $cg1 = Utils::angkaToHuruf(16 + $totalatributvariable + $totalatributpenting);
//
//            $sql = 'SELECT * FROM parameterekspor';
//            $stmt = $pdo->prepare($sql);
//            $stmt->execute();
//            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
//
//            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
//                $l = $i - 1;
//            } else {
//                $l = $i + 1;
//                Utils::footerExcel($objPHPExcel,'kiri','A','A',$l,$rowPE);
//                Utils::footerExcel($objPHPExcel,'tengah','G','H',$l,$rowPE);
//                Utils::footerExcel($objPHPExcel,'kanan','M',$cg1,$l,$rowPE);
//                $l = $l+7;
//            }
//
//            // password
//            Utils::passwordExcel($objPHPExcel);
//
//            if ($b != 2) {
//                Utils::header5baris($objPHPExcel,$cg1,$rowPE);
//            }
//
//            //merge dan stylegaris range keterangan tanggal setelah header
//            $objPHPExcel->getActiveSheet()->mergeCells('A' . $bt . ':' . $cg1 . $bt);
//            // value
//            $objPHPExcel->getActiveSheet()->setCellValue('A' . $bt, trans('all.menampilkandatatanggal') . ' ' . Session::get("laprekapitulasi_tanggalawal") . ' - ' . Session::get("laprekapitulasi_tanggalakhir"));
//            // center text
//            $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            //font size
//            $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getFont()->setSize(14);
//
//            //footer tanggal file dibuat
//            date_default_timezone_set('Asia/Jakarta');
//            $ft = $l + 2;
//            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
//            $objPHPExcel->getActiveSheet()->getStyle('A' . $ft)->getFont()->setItalic(true);
//
//            if ($rowPE['logokiri'] != "") {
//                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
//                Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
//            }
//
//            if ($rowPE['logokanan'] != "") {
//                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
//                Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg);
//            }
//
//            header('Content-Type: application/vnd.ms-excel');
//            header('Content-Disposition: attachment;filename="' . time() . '_' . trans('all.rekapitulasi') . '.xlsx"');
//            header('Cache-Control: max-age=0');
//            header('Cache-Control: max-age=1');
//
//            header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
//            header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT'); // always modified
//            header('Cache-Control: cache, must-revalidate'); // HTTP/1.1
//            header('Pragma: public'); // HTTP/1.0
//
//            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
//            $writer->save('php://output');
//        }
//    }

    public function rekapShift()
    {
        if(Utils::cekHakakses('laporanrekapparuhwaktu','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }

            $atributs = Utils::getAtribut();
            $tahun = Utils::tahunDropdown();
            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();

            $bulanterpilih = date('m');
            $tahunterpilih = date('Y');
            if(Session::has('laprekapshift_bulan') && Session::has('laprekapshift_tahun')){
                $bulanterpilih = Session::get('laprekapshift_bulan');
                $tahunterpilih = Session::get('laprekapshift_tahun');
            }
            $totalhari = cal_days_in_month(CAL_GREGORIAN,$bulanterpilih,$tahunterpilih);
            Utils::insertLogUser('akses menu laporan rekap shift');
            return view('laporan/rekapshift/index', ['data' => '', 'tahun' => $tahun, 'totalhari' => $totalhari, 'bulanterpilih' => $bulanterpilih, 'tahunterpilih' => $tahunterpilih, 'valuetglawalakhir' => $valuetglawalakhir, 'atributs' => $atributs, 'atributvariable' => '', 'atributpenting' => '', 'keterangan' => '', 'menu' => 'rekapshift']);
        } else {
            return redirect('/');
        }
    }

    public function submitRekapShift(Request $request)
    {
        if($request->filtermode == 'jangkauantanggal' && !Utils::cekDateTime($request->tanggalawal) && !Utils::cekDateTime($request->tanggalakhir)){
            return redirect('laporan/rekapshift');
        }
        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }

        Session::set('laprekapshift_tanggalawal', $request->tanggalawal);
        Session::set('laprekapshift_tanggalakhir', $request->tanggalakhir);
        Session::set('laprekapshift_atribut', $request->atributnilai);
        Session::set('laprekapshift_filtermode', $request->filtermode);

        $atributs = Session::get('laprekapshift_atribut');
        $atributnilai = Utils::atributNilai($atributs);
        $atributnilaiketerangan = '';
        if ($atributnilai != '') {
            $atributnilaidipilih = Utils::getAtributSelected($atributnilai);
            $atributnilaiketerangan = Utils::atributNilaiKeterangan($atributnilaidipilih);
        }

        if($request->filtermode == 'berdasarkantanggal') {
            $tahunterpilih = $request->tahun;
            $bulanterpilih = $request->bulan;
            $bulan = Utils::getBulan($request->bulan);
            $tanggal = implode(", ", $request->tanggal);
            $totalhari = cal_days_in_month(CAL_GREGORIAN, $bulanterpilih, $tahunterpilih);

            //cek jika totalhari dan tanggal yg terpilih sama(satu bulan penuh)
            if ($totalhari == count($request->tanggal)) {
                $tanggal = '';
            }

            //set session
            Session::set('laprekapshift_tanggal', $request->tanggal);
            Session::set('laprekapshift_bulan', $request->bulan);
            Session::set('laprekapshift_tahun', $request->tahun);

            $keterangan = $tanggal . ' ' . $bulan . ' ' . $tahunterpilih . ' ' . $atributnilaiketerangan;
        }else{
            $keterangan = trans('all.tanggal') . ' : ' . Session::get('laprekapshift_tanggalawal') . ' - ' . Session::get('laprekapshift_tanggalakhir') . $atributnilaiketerangan;
        }

        //atribut untuk di index.blade nya
        $allatribut = Utils::getAllAtribut('blade');
        $atributpenting_controller = explode('|', $allatribut['atributpenting_controller']);
        $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
        $atributvariablepenting_controller = explode('|', $allatribut['atributvariablepenting_controller']);
        $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);

        //totaldata
        $where = '';
        if (Session::has('laprekapshift_tanggalawal') && Session::has('laprekapshift_tanggalakhir')) {
            $where .= ' AND tanggal >= STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND tanggal <= STR_TO_DATE(:tanggalakhir,"%d/%m/%Y") ';
        }
        if (Session::has('laprekapshift_atribut')) {
            $atributs = Session::get('laprekapshift_atribut');
            $atributnilai = Utils::atributNilai($atributs);
            $where .= ' AND idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
        }
        $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
        if ($batasan != '') {
            $where .= ' AND idpegawai IN ' . $batasan;
        }

        $pdo = DB::connection('perusahaan_db')->getPdo();
        $sql = 'SELECT id FROM rekapshift WHERE 1=1 ' . $where;
        $stmt = $pdo->prepare($sql);
        if (Session::has('laprekapshift_tanggalawal') && Session::has('laprekapshift_tanggalakhir')) {
            $stmt->bindValue(':tanggalawal', Session::get("laprekapshift_tanggalawal"));
            $stmt->bindValue(':tanggalakhir', Session::get("laprekapshift_tanggalakhir"));
        }
        $stmt->execute();
        $totaldata = $stmt->rowCount();
        return view('laporan/rekapshift/index', ['data' => 'submit', 'atributs' => $atributs, 'keterangan' => $keterangan, 'totaldata' => $totaldata, 'atributpenting_controller' => $atributpenting_controller, 'atributpenting_blade' => $atributpenting_blade, 'atributvariablepenting_controller' => $atributvariablepenting_controller, 'atributvariablepenting_blade' => $atributvariablepenting_blade, 'menu' => 'rekapshift']);
    }

    public function rekapShiftData(Request $request)
    {
        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }
        $pdo = DB::connection('perusahaan_db')->getPdo();
        $where = '';
        $wheretable = '';
        $tanggalawal = '';
        $tanggalakhir = '';
        if(Session::get('laprekapshift_filtermode') == 'jangkauantanggal'){
            if (Session::has('laprekapshift_tanggalawal') && Session::has('laprekapshift_tanggalakhir')) {
                $tanggalawal = Session::get("laprekapshift_tanggalawal");
                $tanggalakhir = Session::get("laprekapshift_tanggalakhir");
                $wheretable .= ' AND rs.tanggal >= STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND rs.tanggal <= STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")';
            }
        }else if(Session::get('laprekapshift_filtermode') == 'berdasarkantanggal'){
            $tahun = Session::get('laprekapshift_tahun');
            $bulan = Session::get('laprekapshift_bulan');
            $tanggal = Session::get('laprekapshift_tanggal');
            $wherePeriode = '';
            if ($tanggal != ''){
                for($i=0;$i<count($tanggal);$i++) {
                    $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                }
                if (strlen($wherePeriode)>0) {
                    $wheretable .= ' AND rs.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                }
            }
            else {
                $wheretable .= ' AND year(rs.tanggal)='.$tahun.' AND month(rs.tanggal)='.$bulan;
            }
        }
        $whereAtribut = '';
        if (Session::has('laprekapshift_atribut')) {
            $atributs = Session::get('laprekapshift_atribut');
            $atributnilai = Utils::atributNilai($atributs);
            $wheretable .= ' AND rs.idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
        }

        $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
        if ($batasan != '') {
            $wheretable .= ' AND rs.idpegawai IN ' . $batasan;
        }
        $allatribut = Utils::getAllAtribut('controller', $whereAtribut);
        $atributpenting = $allatribut['atributpenting'];
        $atributvariablepenting = $allatribut['atributvariablepenting'];
        $stringcolumn = 'tanggal,nama,pin,'.$atributvariablepenting.'masukkerja,jamkerjashift,waktumasuk,waktukeluar,datangawal,terlambat,pulanglebihawal,lamakerja,lamalembur'.$atributpenting;
        $columns = explode(',',$stringcolumn);
        $table = '(
                    SELECT
                        rs.id,
                        rs.idpegawai,
                        rs.tanggal,
                        p.nama,
                        p.pin,
                        ' . $atributvariablepenting . '
                        rs.masukkerja,
                        IFNULL(jks.namashift,"") as jamkerjashift,
                        IFNULL(TIME(rs.waktumasuk),"") as waktumasuk,
                        IFNULL(TIME(rs.waktukeluar),"") as waktukeluar,
                        IF(rs.selisihmasuk>0,SEC_TO_TIME(rs.selisihmasuk),"00:00:00") as datangawal,
                        IF(rs.selisihmasuk<0,SEC_TO_TIME(-1*rs.selisihmasuk),"00:00:00") as terlambat,
                        IF(rs.selisihkeluar<0,SEC_TO_TIME(-1*rs.selisihkeluar),"00:00:00") as pulanglebihawal,
                        SEC_TO_TIME(rs.lamakerja) as lamakerja,
                        SEC_TO_TIME(rs.lamalembur) as lamalembur
                        ' . $atributpenting . '
                    FROM
                        pegawai p,
                        _pegawailengkap _pa,
                        rekapshift rs
                        LEFT JOIN jamkerjashift jks ON rs.idjamkerjashift=jks.id
                    WHERE
                        p.id=rs.idpegawai AND
                        p.id=_pa.id AND
                        p.del = "t"
                        '.$wheretable.'
                ) x';
        $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
        $stmt = $pdo->prepare($sql);
        if($tanggalawal != '' && $tanggalakhir != ''){
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
        }
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        $totalData = $row['total'];
        $totalFiltered = $totalData;
        $limit = $request->input('length');
        $start = $request->input('start');
        $orderColumn = $columns[$request->input('order.0.column')];
        $orderAction = $request->input('order.0.dir');
        $orderBy = $orderColumn.' '.$orderAction;

        if(!empty($request->input('search.value'))){
            $search = $request->input('search.value');
            $where .= Utils::searchDatatableQuery($columns);
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
            $stmt = $pdo->prepare($sql);
            if($tanggalawal != '' && $tanggalakhir != ''){
                $stmt->bindValue(':tanggalawal', $tanggalawal);
                $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            }
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                }
            }
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalFiltered = $row['total'];
        }

        $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
        $stmt = $pdo->prepare($sql);
        if($tanggalawal != '' && $tanggalakhir != ''){
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
        }
        if(!empty($request->input('search.value'))) {
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                }
            }
        }
        $stmt->execute();
        $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $data = array();
        if(!empty($originaldata)){
            foreach($originaldata as $key){
                $tempdata['tanggal'] = $key['tanggal'];
                for($i=1;$i<count($columns);$i++){
                    if($columns[$i] == 'nama') {
                        $tempdata[$columns[$i]] = "<span class=detailpegawai onclick=detailpegawai(".$key['idpegawai'].") style=cursor:pointer>".$key['nama']."</span>";
                    }elseif($columns[$i] == 'masukkerja') {
                        $tempdata[$columns[$i]] = Utils::labelKolom($key[$columns[$i]]);
                    }else{
                        $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                    }
                }
                $data[] = $tempdata;
            }
        }
        return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
    }

    public function excelRekapShift()
    {
        if(Utils::cekHakakses('laporanrekapparuhwaktu','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.rekapshift'));

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }

            $bt = $b; //variabel b tanggal dari sampai

            $b = $b + 1;

            //get atribut
            $allatribut = Utils::getAllAtribut('blade');
            $atributpenting_controller = ($allatribut['atributpenting_controller'] != '' ? explode('|', $allatribut['atributpenting_controller']) : '');
            $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
            $atributvariablepenting_controller = ($allatribut['atributvariablepenting_controller'] != '' ? explode('|', $allatribut['atributvariablepenting_controller']) : '');
            $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);
            $totalatributvariable = ($atributvariablepenting_controller != '' ? count($atributvariablepenting_controller) : 0);
            $totalatributpenting = ($atributpenting_controller != '' ? count($atributpenting_controller) : 0);

            //set atribut variable
            $i = 4;
            if ($atributvariablepenting_blade != '') {
                //looping untuk header
                foreach ($atributvariablepenting_blade as $key) {
                    if ($key != '') {
                        $hh = Utils::angkaToHuruf($i);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $key);
                        //lebar kolom
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);
                        //set bold
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->getFont()->setBold(true);
                        //style
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);

                        $i++;
                    }
                }
            }

            //set value kolom
            $h1 = Utils::angkaToHuruf($i);
            $h2 = Utils::angkaToHuruf($i + 1);
            $h3 = Utils::angkaToHuruf($i + 2);
            $h4 = Utils::angkaToHuruf($i + 3);
            $h5 = Utils::angkaToHuruf($i + 4);
            $h6 = Utils::angkaToHuruf($i + 5);
            $h7 = Utils::angkaToHuruf($i + 6);
            $h8 = Utils::angkaToHuruf($i + 7);
            $h9 = Utils::angkaToHuruf($i + 8);

            //set atribut penting
            if ($atributpenting_blade != '') {
                //looping untuk header
                foreach ($atributpenting_blade as $key) {
                    if ($key != '') {
                        $hi = $i + 9;
                        $hh = Utils::angkaToHuruf($hi);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $key);
                        //lebar kolom
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);
                        //set bold
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->getFont()->setBold(true);
                        //style
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);

                        $i++;
                    }
                }
            }

            //set atribut untuk query
            $whereAtribut = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $whereAtribut = ' AND id IN ' . $batasan;
            }
            if (Session::has('laprekapitulasi_atribut')) {
                $atributs = Session::get('laprekapitulasi_atribut');
                $atributnilai = Utils::atributNilai($atributs);
                $whereAtribut .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }
            $allatribut_controller = Utils::getAllAtribut('controller', $whereAtribut);
            $atributpenting = $allatribut_controller['atributpenting'];
            $atributvariablepenting = $allatribut_controller['atributvariablepenting'];

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . $b, trans('all.tanggal'))
                        ->setCellValue('B' . $b, trans('all.nama'))
                        ->setCellValue('C' . $b, trans('all.pin'))
                        ->setCellValue($h1 . $b, trans('all.masukkerja'))
                        ->setCellValue($h2 . $b, trans('all.jamkerjashift'))
                        ->setCellValue($h3 . $b, trans('all.waktumasuk'))
                        ->setCellValue($h4 . $b, trans('all.waktukeluar'))
                        ->setCellValue($h5 . $b, trans('all.datangawal'))
                        ->setCellValue($h6 . $b, trans('all.terlambat'))
                        ->setCellValue($h7 . $b, trans('all.pulanglebihawal'))
                        ->setCellValue($h8 . $b, trans('all.lamakerja'))
                        ->setCellValue($h9 . $b, trans('all.lamalembur'));

            $where = '';
            $tanggalawal = '';
            $tanggalakhir = '';
            if(Session::get('laprekapshift_filtermode') == 'jangkauantanggal'){
                if (Session::has('laprekapshift_tanggalawal') || Session::has('laprekapshift_tanggalakhir')) {
                    $tanggalawal = Session::get("laprekapshift_tanggalawal");
                    $tanggalakhir = Session::get("laprekapshift_tanggalakhir");
                    $where .= ' AND rs.tanggal >= STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND rs.tanggal <= STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")';
                }
            }else if(Session::get('laprekapshift_filtermode') == 'berdasarkantanggal'){
                $tahun = Session::get('laprekapshift_tahun');
                $bulan = Session::get('laprekapshift_bulan');
                $tanggal = Session::get('laprekapshift_tanggal');
                $wherePeriode = '';
                if ($tanggal != ''){
                    for($i=0;$i<count($tanggal);$i++) {
                        $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                    }
                    if (strlen($wherePeriode)>0) {
                        $where .= ' AND rs.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                    }
                }
                else {
                    $where .= ' AND year(rs.tanggal)='.$tahun.' AND month(rs.tanggal)='.$bulan;
                }
            }

            $sql = 'SELECT
                        rs.tanggal,
                        p.nama as nama,
                        p.pin,
                        ' . $atributvariablepenting . '
                        rs.masukkerja,
                        IFNULL(jks.namashift,"") as jamkerjashift,
                        rs.waktumasuk,
                        rs.waktukeluar,
                        IF(rs.selisihmasuk>0,SEC_TO_TIME(rs.selisihmasuk),"00:00:00") as datangawal,
                        IF(rs.selisihmasuk<0,SEC_TO_TIME(-1*rs.selisihmasuk),"00:00:00") as terlambat,
                        IF(rs.selisihkeluar<0,SEC_TO_TIME(-1*rs.selisihkeluar),"00:00:00") as pulanglebihawal,
                        SEC_TO_TIME(rs.lamakerja) as lamakerja,
                        SEC_TO_TIME(rs.lamalembur) as lamalembur
                        ' . $atributpenting . '
                    FROM
                        pegawai p,
                        _pegawailengkap _pa,
                        rekapshift rs
                        LEFT JOIN jamkerjashift jks ON rs.idjamkerjashift=jks.id
                    WHERE
                        p.id=rs.idpegawai AND
                        p.id=_pa.id AND
                        p.del = "t"
                        ' . $where . '
                    ORDER BY
                        rs.tanggal';
            $stmt = $pdo->prepare($sql);
            if($tanggalawal != '' && $tanggalakhir != ''){
                $stmt->bindValue(':tanggalawal', $tanggalawal);
                $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            }
            $stmt->execute();
            $i = $b + 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

                $masukkerja = '';
                if($row['masukkerja'] == 'y'){
                    $masukkerja = trans('all.ya');
                }else if($row['masukkerja'] == 't'){
                    $masukkerja = trans('all.tidak');
                }
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $masukkerja);
                $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['jamkerjashift']);
                $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['waktumasuk']);
                $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['waktukeluar']);
                $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $row['datangawal']);
                $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['terlambat']);
                $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $row['pulanglebihawal']);
                $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['lamakerja']);
                $objPHPExcel->getActiveSheet()->setCellValue($h9 . $i, $row['lamalembur']);

                if($atributvariablepenting_controller != '') {
                    $z1 = 4; //huruf setelah kolom pin
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hv = Utils::angkaToHuruf($z1);
                        $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row[$atributvariablepenting_controller[$j]]);

                        $z1++;
                    }
                }

                if($atributpenting_controller != '') {
                    $z2 = 13 + $totalatributvariable; //iterasi untuk looping atribut penting 11 dari jumlah kolom fix
                    for ($j = 0; $j < $totalatributpenting; $j++) {

                        $hap = Utils::angkaToHuruf($z2);
                        $objPHPExcel->getActiveSheet()->setCellValue($hap . $i, $row[$atributpenting_controller[$j]]);

                        $z2++;
                    }
                }

                // format
                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY');
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $i)->getNumberFormat()->setFormatCode('HH:MM:SS');
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $i)->getNumberFormat()->setFormatCode('HH:MM:SS');

                for ($j = 1; $j <= 12 + $totalatributvariable + $totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                }

                $i++;
            }

            for ($j = 1; $j <= 12 + $totalatributvariable + $totalatributpenting; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . $bt)->applyFromArray($styleArray);
            }

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(35);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h1)->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(19);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(20);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h4)->setWidth(20);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h5)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(11);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(19);

            $heightgambar = 99;
            $widthgambar = 99;

            $cg = Utils::angkaToHuruf(12 + $totalatributvariable + $totalatributpenting) . '1';
            $cg1 = Utils::angkaToHuruf(12 + $totalatributvariable + $totalatributpenting);

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                $l = $i - 1;
            } else {
                $l = $i + 1;
                Utils::footerExcel($objPHPExcel,'kiri','A','A',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'tengah','G','H',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'kanan','M',$cg1,$l,$rowPE);
                $l = $l+7;
            }

            // password
            Utils::passwordExcel($objPHPExcel);

            if ($b != 2) {
                Utils::header5baris($objPHPExcel,$cg1,$rowPE);
            }

            //merge dan stylegaris range keterangan tanggal setelah header
            $objPHPExcel->getActiveSheet()->mergeCells('A' . $bt . ':' . $cg1 . $bt);
            // value
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $bt, trans('all.menampilkandatatanggal') . ' ' . Session::get("laprekapshift_tanggalawal") . ' - ' . Session::get("laprekapshift_tanggalakhir"));
            // center text
            $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            //font size
            $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getFont()->setSize(14);

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $l + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('A' . $ft)->getFont()->setItalic(true);

            if ($rowPE['logokiri'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
            }

            if ($rowPE['logokanan'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg);
            }

            Utils::insertLogUser('Ekspor laporan rekap shift');
            Utils::setFileNameExcel(trans('all.rekapshift'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    // setelah lebaran, optimasi pake parameter datadefault(array) jangan pakai session di semua menu(yang bisa saja, jika tidak bisa tidak usah)
    public function perTanggal()
    {
        if(Utils::cekHakakses('laporanpertanggal','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }

            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();
            // data default
            $dataform = array();
            $dataform['dataharilibur'] = Utils::dataHariliburBulanIni();
            $dataform['totalhari'] = '';
            $dataform['tahun'] = Utils::tahunDropdown();
            $dataform['bulanterpilih'] = date('m');
            $dataform['tahunterpilih'] = date('Y');
            $dataform['atribut'] = Utils::getAtribut();
            $dataform['atributvariable'] = '';
            $dataform['atributpenting'] = '';
            $dataform['keterangan'] = '';
            $dataform['filtermode'] = 'periode';
            $dataform['tanggalawal'] = $valuetglawalakhir->tanggalawal;
            $dataform['tanggalakhir'] = $valuetglawalakhir->tanggalakhir;
            $dataform['headertanggal'] = array();

            $atributs = Utils::getAtribut();
            $bulanterpilih = date('m');
            $tahunterpilih = date('Y');
            if (Session::has('lappertanggal_filtermode')) {
                $dataform['filtermode'] = Session::get('lappertanggal_filtermode');
            }
            if (Session::has('lappertanggal_bulan')) {
                $bulanterpilih = Session::get('lappertanggal_bulan');
                $dataform['bulanterpilih'] = Session::get('lappertanggal_bulan');
            }
            if (Session::has('lappertanggal_tahun')) {
                $tahunterpilih = Session::get('lappertanggal_tahun');
                $dataform['tahunterpilih'] = Session::get('lappertanggal_tahun');
            }
            if (Session::has('lappertanggal_tanggalawal')) {
                $dataform['tanggalawal'] = Session::get('lappertanggal_tanggalawal');
            }
            if (Session::has('lappertanggal_tanggalakhir')) {
                $dataform['tanggalakhir'] = Session::get('lappertanggal_tanggalakhir');
            }
            $tahun = Utils::tahunDropdown();
            Utils::insertLogUser('akses menu laporan pertanggal');
            return view('laporan/pertanggal/index', ['data' => '', 'dataform' => $dataform, 'totalhari' => '', 'tahun' => $tahun, 'bulanterpilih' => $bulanterpilih, 'tahunterpilih' => $tahunterpilih, 'atributs' => $atributs, 'atributvariable' => '', 'atributpenting' => '', 'keterangan' => '', 'menu' => 'pertanggal']);
//            return view('laporan/pertanggal/index', ['data' => '', 'dataharilibur' => $dataharilibur, 'totalhari' => '', 'tahun' => $tahun, 'bulanterpilih' => $bulanterpilih, 'tahunterpilih' => $tahunterpilih, 'atributs' => $atributs, 'atributvariable' => '', 'atributpenting' => '', 'keterangan' => '', 'menu' => 'pertanggal']);
        } else {
            return redirect('/');
        }
    }

    public function submitPerTanggal(Request $request)
    {
        if($request->filtermode == 'jangkauantanggal' && !Utils::cekDateTime($request->tanggalawal) && !Utils::cekDateTime($request->tanggalakhir)){
            return redirect('laporan/pertanggal');
        }

        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }

        $atributnilai = Utils::atributNilai($request->atributnilai);

        $bulan = $request->bulan;
        $tahun = $request->tahun;
        $periode = substr($tahun, 2) . $bulan;
        $tanggalawal = $request->tanggalawal;
        $tanggalakhir = $request->tanggalakhir;
        $filtermode = $request->filtermode;
        if($filtermode == 'jangkauantanggal'){
            $periode = NULL;
            $totalhari = Utils::getTotalHariFrom2Date(Utils::convertDmy2Ymd($tanggalakhir),Utils::convertDmy2Ymd($tanggalawal));
        }else{
            $totalhari = cal_days_in_month(CAL_GREGORIAN, $request->bulan, $request->tahun);
        }

        Session::set('lappertanggal_bulan', $bulan);
        Session::set('lappertanggal_tahun', $tahun);
        Session::set('lappertanggal_tanggalawal', $tanggalawal);
        Session::set('lappertanggal_tanggalakhir', $tanggalakhir);
        Session::set('lappertanggal_atribut', $request->atributnilai);
        Session::set('lappertanggal_filtermode', $request->filtermode);

        $pdo = DB::connection('perusahaan_db')->getPdo();
        $sql = 'CALL laporanabsenperbulan(:periode,:tanggalawal,:tanggalakhir,:atributnilai,:bahasa)';
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':periode', $periode);
        $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
        $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
        $stmt->bindValue(':atributnilai', $atributnilai);
        $stmt->bindValue(':bahasa', Session::get('conf_bahasaperusahaan'));
        $stmt->execute();

        $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
        if ($batasan != '') {
            $batasan = ' WHERE idpegawai IN ' . $batasan;
        }

        //atribut variable header
        $atributvariableheader = Utils::getAtributvariable();

        //atribut penting header
        $atributpentingheader = Utils::getAtributPenting();

        $response = array();
        $sql = 'SELECT
                    t.*,
                    p.pin,
                    CONCAT("<span class=detailpegawai onclick=detailpegawai(",t.idpegawai,") style=cursor:pointer>",t.nama,"</span>") as nama
                FROM
                    temp_laporanabsenperbulan t
                    LEFT JOIN pegawai p ON t.idpegawai=p.id' . $batasan;
        $stmt = $pdo->prepare($sql);
        $stmt->execute();
        $i = 0;
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

            $response[$i]['nama'] = $row['nama'];
            $response[$i]['pin'] = $row['pin'];
            $response[$i]['jumlahmasuk'] = $row['jumlahmasuk'];
            $response[$i]['jumlahterlambat'] = $row['jumlahterlambat'];
            $response[$i]['jumlahsakit'] = $row['jumlah_sakit'];
            $response[$i]['jumlahijin'] = $row['jumlah_ijin'];
            $response[$i]['jumlahdispensasi'] = $row['jumlah_dispensasi'];
            $response[$i]['jumlahcuti'] = $row['jumlah_cuti'];
            $response[$i]['jumlahalpha'] = $row['jumlah_alpha'];
            $response[$i]['tgl'] = array();
            $jumlahtidakmasuk = 0;
            for ($j = 1; $j <= $totalhari; $j++) {
                $response[$i]['tgl'][$j]['terlambat'] = $row['selisihmasuk_' . $j] < 0 ? 'y' : 't';
                $response[$i]['tgl'][$j]['masukkerja'] = $row['masukkerja_' . $j];
                $response[$i]['tgl'][$j]['alasantidakmasukkategori'] = $row['alasantidakmasukkategori_' . $j] == null ? '' : $row['alasantidakmasukkategori_' . $j];
//                $response[$i]['tgl'][$j]['harilibur'] = $row['harilibur_' . $j] < 0 ? 'y' : 't'; // ubahan tgl 20190827
                $response[$i]['tgl'][$j]['harilibur'] = $row['harilibur_' . $j] != '' ? 'y' : 't';
                $response[$i]['tgl'][$j]['tooltip'] = $row['tooltip_' . $j];
                if($response[$i]['tgl'][$j]['masukkerja'] == 't'){
                    $jumlahtidakmasuk++;
                }
            }
            $response[$i]['jumlahtidakmasuk'] = $jumlahtidakmasuk;
            $i++;
        }
        $datas = $response;
        $atributs = Utils::getAtribut();

        $atributnilaiketerangan = "";
        if ($atributnilai != "") {
            $atributnilaidipilih = Utils::getAtributSelected($atributnilai);
            $atributnilaiketerangan = Utils::atributNilaiKeterangan($atributnilaidipilih);
        }

        if($filtermode == 'jangkauantanggal') {
            $keterangan = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir)).' '.$atributnilaiketerangan;
        } else {
            $arrbulan = array('', trans('all.januari'), trans('all.februari'), trans('all.maret'), trans('all.april'), trans('all.mei'), trans('all.juni'), trans('all.juli'), trans('all.agustus'), trans('all.september'), trans('all.oktober'), trans('all.november'), trans('all.desember'));
            if ($bulan[0] == 0)
            {
                $bulan = str_replace('0', '', $bulan);
            }

            $keterangan = trans('all.periode') . ' : ' . $arrbulan[$bulan] . ' ' . $tahun . ' ' . $atributnilaiketerangan;
        }
        $dataharilibur = Utils::dataHariliburBulanIni();

        $dataform = array();
        $dataform['dataharilibur'] = Utils::dataHariliburBulanIni();
        $dataform['totalhari'] = $totalhari;
        $dataform['tahun'] = Utils::tahunDropdown();
        $dataform['bulanterpilih'] = $bulan;
        $dataform['tahunterpilih'] = $request->tahun;
        $dataform['atribut'] = Utils::getAtribut();
        $dataform['atributvariable'] = $atributvariableheader;
        $dataform['atributpenting'] = $atributpentingheader;
        $dataform['keterangan'] = $keterangan;
        $dataform['filtermode'] = $request->filtermode;
        $dataform['tanggalawal'] = $tanggalawal;
        $dataform['tanggalakhir'] = $tanggalakhir;
        // header tanggal
        $dataform['headertanggal'] = array();
        for ($j = 0; $j < $totalhari; $j++) {
            if($filtermode == 'jangkauantanggal') {
                $dataform['headertanggal'][$j] = date('j', strtotime(date('Y-m-d', strtotime(Utils::convertDmy2Ymd($tanggalawal))) . ' +' . $j . ' day'));
            }else{
                $dataform['headertanggal'][$j] = $j+1;
            }
        }
        return view('laporan/pertanggal/index', ['data' => $datas, 'dataform' => $dataform, 'dataharilibur' => $dataharilibur,
        'totalhari' => $totalhari, 'totaldata' => $i, 'bulansekarang' => $bulan, 'tahunsekarang' => $tahun, 'atributs' => $atributs,
        'atributvariable' => $atributvariableheader, 'atributpenting' => $atributpentingheader, 'keterangan' => $keterangan, 'menu' => 'pertanggal']);
    }

    public function excelPerTanggal()
    {
        if(Utils::cekHakakses('laporanpertanggal','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $periode = substr(Session::get('lappertanggal_tahun'), 2) . Session::get('lappertanggal_bulan');
            $tanggalawal = Session::get('lappertanggal_tanggalawal');
            $tanggalakhir = Session::get('lappertanggal_tanggalakhir');
            $atributnilai = Utils::atributNilai(Session::get('lappertanggal_atribut'));
            $filtermode = Session::get('lappertanggal_filtermode');
            $ba = 1; // ba = barisakhir

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel,trans('all.pertanggal'));

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();

            // jika ada filter atribut nilai
            $sessionatribut = Session::get('lappertanggal_atribut');
            $totalfilteratribut = count($sessionatribut);
            if($totalfilteratribut > 0){
                $bal = 0; // baris akhir looping
                $bag = 1; // baris akhir gambar
                for($i = 0;$i<$totalfilteratribut;$i++){
                    $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
                    if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                        $b = 6 + $ba; //b = baris
                    } else {
                        $b = 1 + $ba;
                    }

                    // header sebelum data
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $b, trans('all.laporankehadiranpertanggal'));
                    //font size
                    $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->getFont()->setSize(14);
                    if($filtermode == 'jangkauantanggal') {
                        $jenisfilter = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));
                    } else {
                        $jenisfilter = trans('all.periode') . ' : ' . Utils::periodeCantik($periode);
                    }
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . ($b+1), trans('all.'.$filtermode).' '.$jenisfilter);
                    //font size
                    $objPHPExcel->getActiveSheet()->getStyle('A' . ($b+1))->getFont()->setSize(14);
                    $b = $b+1; // jika tidak ada filter atribut
                    $atributnilaidipilih = Utils::getAtributSelected($sessionatribut[$i]);
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . ($b+1), Utils::atributNilaiKeterangan($atributnilaidipilih));
                    //font size
                    $objPHPExcel->getActiveSheet()->getStyle('A' . ($b+1))->getFont()->setSize(14);
                    $b = $b+2; // jika ada filter atribut

                    $bt = $b; //variabel b tanggal dari sampai
                    $b = $b + 1; // untuk separator

                    if($filtermode == 'jangkauantanggal'){
                        $periode = NULL;
                        $totalhari = Utils::getTotalHariFrom2Date(Utils::convertDmy2Ymd($tanggalakhir),Utils::convertDmy2Ymd($tanggalawal));
                    }else{
                        $totalhari = cal_days_in_month(CAL_GREGORIAN, Session::get('lappertanggal_bulan'), Session::get('lappertanggal_tahun'));
                    }

                    $sql = 'CALL laporanabsenperbulan(:periode,:tanggalawal,:tanggalakhir,:atributnilai,:bahasa)';
                    $stmt = $pdo->prepare($sql);
                    $stmt->bindValue(':periode', $periode);
                    $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
                    $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
                    $stmt->bindValue(':atributnilai', $sessionatribut[$i]);
                    $stmt->bindValue(':bahasa', Session::get('conf_bahasaperusahaan'));
                    $stmt->execute();

                    $whereAtribut = '';
                    $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
                    if ($batasan != '') {
                        $whereAtribut = ' AND p.id IN ' . $batasan;
                    }

                    $sql = 'SELECT
                        t.*,
                        p.pin
                    FROM
                        temp_laporanabsenperbulan t,
                        pegawai p
                    WHERE
                        t.idpegawai=p.id AND
                        p.del = "t"
                        '.$whereAtribut.'
                    ORDER BY
                        p.nama';
                    $stmt = $pdo->prepare($sql);
                    $stmt->execute();

                    //set value kolom
                    $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('A' . $b, trans('all.nama'))
                                ->setCellValue('B' . $b, trans('all.pin'));

                    $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->applyFromArray($styleArray);

                    $x = $b + 1;
                    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

                        $objPHPExcel->getActiveSheet()->setCellValue('A' . $x, $row['nama']);
                        $objPHPExcel->getActiveSheet()->setCellValue('B' . $x, ' '.$row['pin']);
                        $k = 3;
                        $jumlahtidakmasuk = 0;
                        for ($j = 1; $j <= $totalhari; $j++) {
                            $celltgl = Utils::angkaToHuruf($k);

                            if ($row['selisihmasuk_' . $j] < 0) {
                                $tempisi = 'O';
                            } else if ($row['masukkerja_' . $j] == 'y') {
                                $tempisi = 'V';
                            } else if ($row['alasantidakmasukkategori_' . $j] != null) {
                                $tempisi = strtoupper($row['alasantidakmasukkategori_' . $j]);
                            } else {
                                $tempisi = 'X';
                            }

                            if ($row['masukkerja_' . $j] == 't') {
                                $jumlahtidakmasuk++;
                            }

                            // header tanggal
                            if(Session::get('lappertanggal_filtermode') == 'jangkauantanggal'){
                                $headertanggal = date('j', strtotime(date('Y-m-d', strtotime(Utils::convertDmy2Ymd($tanggalawal))) . ' +' . ($j-1) . ' day'));
                            }else{
                                $headertanggal = $j;
                            }
                            $objPHPExcel->getActiveSheet()->setCellValue($celltgl . $b, $headertanggal);
                            $objPHPExcel->getActiveSheet()->getStyle($celltgl . $b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                            //isi absen
                            $objPHPExcel->getActiveSheet()->setCellValue($celltgl . $x, $tempisi);
                            $objPHPExcel->getActiveSheet()->getStyle($celltgl . $x)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                            //style text
                            $objPHPExcel->getActiveSheet()->getColumnDimension($celltgl)->setWidth(3);
                            $objPHPExcel->getActiveSheet()->getStyle($celltgl . $b)->getFont()->setBold(true);

                            //border
                            $objPHPExcel->getActiveSheet()->getStyle($celltgl . $b)->applyFromArray($styleArray);
                            $objPHPExcel->getActiveSheet()->getStyle($celltgl . $x)->applyFromArray($styleArray);

                            $k++;
                        }

                        $objPHPExcel->getActiveSheet()->getStyle('A' . $x)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle('B' . $x)->applyFromArray($styleArray);

                        $al = Utils::angkatohuruf($k);
                        $xl = $x;
                        $objPHPExcel->getActiveSheet()->setCellValue($al . $xl, $row['jumlahmasuk']);
                        Utils::customizeColumn($objPHPExcel,$al,$b,trans('all.masuk'),7,true,false,$styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al . $xl)->applyFromArray($styleArray);
                        $al7 = Utils::angkatohuruf($k + 1);
                        $xl7 = $x;
                        $objPHPExcel->getActiveSheet()->setCellValue($al7 . $xl7, $jumlahtidakmasuk);
                        Utils::customizeColumn($objPHPExcel,$al7,$b,trans('all.tidakmasuk'),12,true,false,$styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al7 . $xl7)->applyFromArray($styleArray);
                        $al2 = Utils::angkatohuruf($k + 2);
                        $xl2 = $x;
                        $objPHPExcel->getActiveSheet()->setCellValue($al2 . $xl2, $row['jumlahterlambat']);
                        Utils::customizeColumn($objPHPExcel,$al2,$b,trans('all.terlambat'),10,true,false,$styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al2 . $xl2)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al . $xl)->applyFromArray($styleArray);
                        $al3 = Utils::angkatohuruf($k + 3);
                        $xl3 = $x;
                        $objPHPExcel->getActiveSheet()->setCellValue($al3 . $xl3, $row['jumlah_sakit']);
                        Utils::customizeColumn($objPHPExcel,$al3,$b,trans('all.sakit'),10,true,false,$styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al3 . $xl3)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al . $xl)->applyFromArray($styleArray);
                        $al4 = Utils::angkatohuruf($k + 4);
                        $xl4 = $x;
                        $objPHPExcel->getActiveSheet()->setCellValue($al4 . $xl4, $row['jumlah_ijin']);
                        Utils::customizeColumn($objPHPExcel,$al4,$b,trans('all.ijin'),10,true,false,$styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al4 . $xl4)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al . $xl)->applyFromArray($styleArray);
                        $al4 = Utils::angkatohuruf($k + 5);
                        $xl4 = $x;
                        $objPHPExcel->getActiveSheet()->setCellValue($al4 . $xl4, $row['jumlah_dispensasi']);
                        Utils::customizeColumn($objPHPExcel,$al4,$b,trans('all.dispensasi'),10,true,false,$styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al4 . $xl4)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al . $xl)->applyFromArray($styleArray);
                        $al5 = Utils::angkatohuruf($k + 6);
                        $xl5 = $x;
                        $objPHPExcel->getActiveSheet()->setCellValue($al5 . $xl5, $row['jumlah_cuti']);
                        Utils::customizeColumn($objPHPExcel,$al5,$b,trans('all.cuti'),10,true,false,$styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al5 . $xl5)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al . $xl)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al . $xl)->applyFromArray($styleArray);
                        $al6 = Utils::angkatohuruf($k + 7);
                        $xl6 = $x;
                        $objPHPExcel->getActiveSheet()->setCellValue($al6 . $xl6, $row['jumlah_alpha']);
                        Utils::customizeColumn($objPHPExcel,$al6,$b,trans('all.alpha'),10,true,false,$styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al6 . $xl6)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($al . $xl)->applyFromArray($styleArray);

                        $x++;
                    }

                    $xl3 = $x + 1;
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $xl3, trans('all.keterangan') . ' : ');
                    $xl4 = $x + 2;
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $xl4, 'V : ' . trans('all.masuk'));
                    $xl5 = $x + 3;
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $xl5, 'X : ' . trans('all.tidakmasuk'));
                    $xl6 = $x + 4;
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $xl6, 'O : ' . trans('all.terlambat'));
                    $xl7 = $x + 5;
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $xl7, 'S : ' . trans('all.sakit'));
                    $xl8 = $x + 6;
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $xl8, 'I : ' . trans('all.ijin'));
                    $xl9 = $x + 7;
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $xl9, 'D : ' . trans('all.dispensasi'));
                    $xl10 = $x + 8;
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $xl10, 'C : ' . trans('all.cuti'));

                    $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(30);

                    $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->getFont()->setBold(true);

                    $heightgambar = 99;
                    $widthgambar = 99;

                    $xx = $xl10 + 1;

                    $lhuruf = Utils::angkaToHuruf($k + 6);
                    $cg = Utils::angkaToHuruf($k+6) . $bag;
                    $fkhuruf = Utils::angkaToHuruf($k);

                    $sql = 'SELECT * FROM parameterekspor';
                    $stmt = $pdo->prepare($sql);
                    $stmt->execute();
                    $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

                    if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                        $l = $xx + 1;
                    } else {
                        $l = $xx + 1;
                        Utils::footerExcel($objPHPExcel,'kiri','A','B',$l,$rowPE);
                        Utils::footerExcel($objPHPExcel,'tengah','K','T',$l,$rowPE);
                        Utils::footerExcel($objPHPExcel,'kanan',$fkhuruf,$lhuruf,$l,$rowPE);
                    }

                    // password
                    Utils::passwordExcel($objPHPExcel);

                    if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                        $ihb = $bag;
                        for ($ih = 1; $ih <= 5; $ih++) {
                            // merge
                            $objPHPExcel->getActiveSheet()->mergeCells('A' . $ihb . ':' . $lhuruf . $ihb);

                            // value
                            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ihb, $rowPE['header_' . $ih . '_teks']);

                            //font style
                            if ($rowPE['header_' . $ih . '_fontstyle'] == 'bold') {
                                $objPHPExcel->getActiveSheet()->getStyle('A' . $ihb)->getFont()->setBold(true);
                            } else if ($rowPE['header_' . $ih . '_fontstyle'] == 'italic') {
                                $objPHPExcel->getActiveSheet()->getStyle('A' . $ihb)->getFont()->setItalic(true);
                            } else if ($rowPE['header_' . $ih . '_fontstyle'] == 'underline') {
                                $objPHPExcel->getActiveSheet()->getStyle('A' . $ihb)->getFont()->setUnderline(true);
                            }

                            // center text
                            $objPHPExcel->getActiveSheet()->getStyle('A' . $ihb)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                            $ihb++;
                        }
                    }

                    //merge dan stylegaris range keterangan tanggal setelah header
                    $objPHPExcel->getActiveSheet()->mergeCells('A' . $bt . ':' . $lhuruf . $bt);

                    if ($rowPE['logokiri'] != "") {
                        $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                        Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A'.$bag);
                    }

                    if ($rowPE['logokanan'] != "") {
                        $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                        Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg);
                    }

                    if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                        $bal = $l + 15; // bal = baris akhir looping
                    }else{
                        $bal = $l; // bal = baris akhir looping
                    }
                    $bag = $l + 9; // bag = baris akhir gambar header
                    $ba = $bal; // ba = baris akhir
                }
            }else{
                $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
                if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                    $b = 6; //b = baris
                } else {
                    $b = 1;
                }

                // header sebelum data
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $b, trans('all.laporankehadiranpertanggal'));
                //font size
                $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->getFont()->setSize(14);
                if($filtermode == 'jangkauantanggal') {
                    $jenisfilter = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));
                } else {
                    $jenisfilter = trans('all.periode') . ' : ' . Utils::periodeCantik($periode);
                }
                $objPHPExcel->getActiveSheet()->setCellValue('A' . ($b+1), trans('all.'.$filtermode).' '.$jenisfilter);
                //font size
                $objPHPExcel->getActiveSheet()->getStyle('A' . ($b+1))->getFont()->setSize(14);
                $b = $b+1; // jika tidak ada filter atribut
                $atributnilai = Utils::atributNilai(Session::get('lappertanggal_atribut'));
                if ($atributnilai != '') {
                    $atributnilaidipilih = Utils::getAtributSelected($atributnilai);
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . ($b+1), Utils::atributNilaiKeterangan($atributnilaidipilih));
                    //font size
                    $objPHPExcel->getActiveSheet()->getStyle('A' . ($b+1))->getFont()->setSize(14);
                    $b = $b+2; // jika ada filter atribut
                }

                $bt = $b; //variabel b tanggal dari sampai
                $b = $b + 1; // untuk separator

                if($filtermode == 'jangkauantanggal'){
                    $periode = NULL;
                    $totalhari = Utils::getTotalHariFrom2Date(Utils::convertDmy2Ymd($tanggalakhir),Utils::convertDmy2Ymd($tanggalawal));
                }else{
                    $totalhari = cal_days_in_month(CAL_GREGORIAN, Session::get('lappertanggal_bulan'), Session::get('lappertanggal_tahun'));
                }

                $sql = 'CALL laporanabsenperbulan(:periode,:tanggalawal,:tanggalakhir,:atributnilai,:bahasa)';
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':periode', $periode);
                $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
                $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
                $stmt->bindValue(':atributnilai', $atributnilai);
                $stmt->bindValue(':bahasa', Session::get('conf_bahasaperusahaan'));
                $stmt->execute();

                $whereAtribut = '';
                $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
                if ($batasan != '') {
                    $whereAtribut = ' AND p.id IN ' . $batasan;
                }

                $sql = 'SELECT
                        t.*,
                        p.pin
                    FROM
                        temp_laporanabsenperbulan t,
                        pegawai p
                    WHERE
                        t.idpegawai=p.id AND
                        p.del = "t"
                        '.$whereAtribut.'
                    ORDER BY
                        p.nama';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();

                //set value kolom
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . $b, trans('all.nama'))
                            ->setCellValue('B' . $b, trans('all.pin'));

                $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->applyFromArray($styleArray);

                $i = $b + 1;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['nama']);
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, ' '.$row['pin']);
                    $k = 3;
                    $jumlahtidakmasuk = 0;
                    for ($j = 1; $j <= $totalhari; $j++) {
                        $celltgl = Utils::angkaToHuruf($k);

                        if ($row['selisihmasuk_' . $j] < 0) {
                            $tempisi = 'O';
                        } else if ($row['masukkerja_' . $j] == 'y') {
                            $tempisi = 'V';
                        } else if ($row['alasantidakmasukkategori_' . $j] != null) {
                            $tempisi = strtoupper($row['alasantidakmasukkategori_' . $j]);
                        } else {
                            $tempisi = 'X';
                        }

                        if ($row['masukkerja_' . $j] == 't') {
                            $jumlahtidakmasuk++;
                        }

                        // header tanggal
                        if(Session::get('lappertanggal_filtermode') == 'jangkauantanggal'){
                            $headertanggal = date('j', strtotime(date('Y-m-d', strtotime(Utils::convertDmy2Ymd($tanggalawal))) . ' +' . ($j-1) . ' day'));
                        }else{
                            $headertanggal = $j;
                        }
                        $objPHPExcel->getActiveSheet()->setCellValue($celltgl . $b, $headertanggal);
                        $objPHPExcel->getActiveSheet()->getStyle($celltgl . $b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                        //isi absen
                        $objPHPExcel->getActiveSheet()->setCellValue($celltgl . $i, $tempisi);
                        $objPHPExcel->getActiveSheet()->getStyle($celltgl . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                        //style text
                        $objPHPExcel->getActiveSheet()->getColumnDimension($celltgl)->setWidth(3);
                        $objPHPExcel->getActiveSheet()->getStyle($celltgl . $b)->getFont()->setBold(true);

                        //border
                        $objPHPExcel->getActiveSheet()->getStyle($celltgl . $b)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($celltgl . $i)->applyFromArray($styleArray);

                        $k++;
                    }

                    $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle('B' . $i)->applyFromArray($styleArray);

                    $al = Utils::angkatohuruf($k);
                    $il = $i;
                    $objPHPExcel->getActiveSheet()->setCellValue($al . $il, $row['jumlahmasuk']);
                    Utils::customizeColumn($objPHPExcel,$al,$b,trans('all.masuk'),7,true,false,$styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                    $al7 = Utils::angkatohuruf($k + 1);
                    $il7 = $i;
                    $objPHPExcel->getActiveSheet()->setCellValue($al7 . $il7, $jumlahtidakmasuk);
                    Utils::customizeColumn($objPHPExcel,$al7,$b,trans('all.tidakmasuk'),12,true,false,$styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al7 . $il7)->applyFromArray($styleArray);
                    $al2 = Utils::angkatohuruf($k + 2);
                    $il2 = $i;
                    $objPHPExcel->getActiveSheet()->setCellValue($al2 . $il2, $row['jumlahterlambat']);
                    Utils::customizeColumn($objPHPExcel,$al2,$b,trans('all.terlambat'),10,true,false,$styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al2 . $il2)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                    $al3 = Utils::angkatohuruf($k + 3);
                    $il3 = $i;
                    $objPHPExcel->getActiveSheet()->setCellValue($al3 . $il3, $row['jumlah_sakit']);
                    Utils::customizeColumn($objPHPExcel,$al3,$b,trans('all.sakit'),10,true,false,$styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al3 . $il3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                    $al4 = Utils::angkatohuruf($k + 4);
                    $il4 = $i;
                    $objPHPExcel->getActiveSheet()->setCellValue($al4 . $il4, $row['jumlah_ijin']);
                    Utils::customizeColumn($objPHPExcel,$al4,$b,trans('all.ijin'),10,true,false,$styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al4 . $il4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                    $al4 = Utils::angkatohuruf($k + 5);
                    $il4 = $i;
                    $objPHPExcel->getActiveSheet()->setCellValue($al4 . $il4, $row['jumlah_dispensasi']);
                    Utils::customizeColumn($objPHPExcel,$al4,$b,trans('all.dispensasi'),10,true,false,$styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al4 . $il4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                    $al5 = Utils::angkatohuruf($k + 6);
                    $il5 = $i;
                    $objPHPExcel->getActiveSheet()->setCellValue($al5 . $il5, $row['jumlah_cuti']);
                    Utils::customizeColumn($objPHPExcel,$al5,$b,trans('all.cuti'),10,true,false,$styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al5 . $il5)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                    $al6 = Utils::angkatohuruf($k + 7);
                    $il6 = $i;
                    $objPHPExcel->getActiveSheet()->setCellValue($al6 . $il6, $row['jumlah_alpha']);
                    Utils::customizeColumn($objPHPExcel,$al6,$b,trans('all.alpha'),10,true,false,$styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al6 . $il6)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);

                    $i++;
                }

                $il3 = $i + 1;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il3, trans('all.keterangan') . ' : ');
                $il4 = $i + 2;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il4, 'V : ' . trans('all.masuk'));
                $il5 = $i + 3;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il5, 'X : ' . trans('all.tidakmasuk'));
                $il6 = $i + 4;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il6, 'O : ' . trans('all.terlambat'));
                $il7 = $i + 5;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il7, 'S : ' . trans('all.sakit'));
                $il8 = $i + 6;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il8, 'I : ' . trans('all.ijin'));
                $il9 = $i + 7;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il9, 'D : ' . trans('all.dispensasi'));
                $il10 = $i + 8;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il10, 'C : ' . trans('all.cuti'));

                $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(30);

                $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->getFont()->setBold(true);

                $heightgambar = 99;
                $widthgambar = 99;

                $ix = $il10 + 1;

                $lhuruf = Utils::angkaToHuruf($k + 6);
                $cg = Utils::angkaToHuruf($k+6) . '1';
                $fkhuruf = Utils::angkaToHuruf($k);

                $sql = 'SELECT * FROM parameterekspor';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

                if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                    $l = $ix + 1;
                } else {
                    $l = $ix + 1;
                    Utils::footerExcel($objPHPExcel,'kiri','A','B',$l,$rowPE);
                    Utils::footerExcel($objPHPExcel,'tengah','K','T',$l,$rowPE);
                    Utils::footerExcel($objPHPExcel,'kanan',$fkhuruf,$lhuruf,$l,$rowPE);
                }

                // password
                Utils::passwordExcel($objPHPExcel);

                if ($b > 7) {
                    Utils::header5baris($objPHPExcel,$lhuruf,$rowPE);
                }

                //merge dan stylegaris range keterangan tanggal setelah header
                $objPHPExcel->getActiveSheet()->mergeCells('A' . $bt . ':' . $lhuruf . $bt);

                if ($rowPE['logokiri'] != "") {
                    $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                    Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
                }

                if ($rowPE['logokanan'] != "") {
                    $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                    Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg);
                }

                $ba = $l; // $ba = baris akhir
            }

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $ba + 7;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('A' . $ft)->getFont()->setItalic(true);

            Utils::insertLogUser('Ekspor laporan per tanggal');
            Utils::setFileNameExcel(trans('all.pertanggal'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function excelPerTanggal_asli()
    {
        if(Utils::cekHakakses('laporanpertanggal','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $periode = substr(Session::get('lappertanggal_tahun'), 2) . Session::get('lappertanggal_bulan');
            $tanggalawal = Session::get('lappertanggal_tanggalawal');
            $tanggalakhir = Session::get('lappertanggal_tanggalakhir');
            $atributnilai = Utils::atributNilai(Session::get('lappertanggal_atribut'));
            $filtermode = Session::get('lappertanggal_filtermode');

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel,trans('all.pertanggal'));

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }

            // header sebelum data
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $b, trans('all.laporankehadiranpertanggal'));
            //font size
            $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->getFont()->setSize(14);
            if($filtermode == 'jangkauantanggal') {
                $jenisfilter = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));
            } else {
                $jenisfilter = trans('all.periode') . ' : ' . Utils::periodeCantik($periode);
            }
            $objPHPExcel->getActiveSheet()->setCellValue('A' . ($b+1), trans('all.'.$filtermode).' '.$jenisfilter);
            //font size
            $objPHPExcel->getActiveSheet()->getStyle('A' . ($b+1))->getFont()->setSize(14);
            $b = $b+1; // jika tidak ada filter atribut
            $atributnilai = Utils::atributNilai(Session::get('lappertanggal_atribut'));
            if ($atributnilai != '') {
                $atributnilaidipilih = Utils::getAtributSelected($atributnilai);
                $objPHPExcel->getActiveSheet()->setCellValue('A' . ($b+1), Utils::atributNilaiKeterangan($atributnilaidipilih));
                //font size
                $objPHPExcel->getActiveSheet()->getStyle('A' . ($b+1))->getFont()->setSize(14);
                $b = $b+2; // jika ada filter atribut
            }

            $bt = $b; //variabel b tanggal dari sampai
            $b = $b + 1; // untuk separator

            if($filtermode == 'jangkauantanggal'){
                $periode = NULL;
                $totalhari = Utils::getTotalHariFrom2Date(Utils::convertDmy2Ymd($tanggalakhir),Utils::convertDmy2Ymd($tanggalawal));
            }else{
                $totalhari = cal_days_in_month(CAL_GREGORIAN, Session::get('lappertanggal_bulan'), Session::get('lappertanggal_tahun'));
            }

            $sql = 'CALL laporanabsenperbulan(:periode,:tanggalawal,:tanggalakhir,:atributnilai,:bahasa)';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':periode', $periode);
            $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
            $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
            $stmt->bindValue(':atributnilai', $atributnilai);
            $stmt->bindValue(':bahasa', Session::get('conf_bahasaperusahaan'));
            $stmt->execute();

            $whereAtribut = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $whereAtribut = ' AND p.id IN ' . $batasan;
            }

            $sql = 'SELECT
                        t.*,
                        p.pin
                    FROM
                        temp_laporanabsenperbulan t,
                        pegawai p
                    WHERE
                        t.idpegawai=p.id AND
                        p.del = "t"
                        '.$whereAtribut.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();

            //set value kolom
            $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . $b, trans('all.nama'))
                ->setCellValue('B' . $b, trans('all.pin'));

            $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->applyFromArray($styleArray);

            $i = $b + 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['nama']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, ' '.$row['pin']);
                $k = 3;
                for ($j = 1; $j <= $totalhari; $j++) {
                    $celltgl = Utils::angkaToHuruf($k);

                    if ($row['selisihmasuk_' . $j] < 0) {
                        $tempisi = 'O';
                    } else if ($row['masukkerja_' . $j] == 'y') {
                        $tempisi = 'V';
                    } else if ($row['alasantidakmasukkategori_' . $j] != null) {
                        $tempisi = strtoupper($row['alasantidakmasukkategori_' . $j]);
                    } else {
                        $tempisi = 'X';
                    }

                    // header tanggal
                    if(Session::get('lappertanggal_filtermode') == 'jangkauantanggal'){
                        $headertanggal = date('j', strtotime(date('Y-m-d', strtotime(Utils::convertDmy2Ymd($tanggalawal))) . ' +' . ($j-1) . ' day'));
                    }else{
                        $headertanggal = $j;
                    }
                    $objPHPExcel->getActiveSheet()->setCellValue($celltgl . $b, $headertanggal);
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl . $b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                    //isi absen
                    $objPHPExcel->getActiveSheet()->setCellValue($celltgl . $i, $tempisi);
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                    //style text
                    $objPHPExcel->getActiveSheet()->getColumnDimension($celltgl)->setWidth(3);
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl . $b)->getFont()->setBold(true);

                    //border
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl . $b)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl . $i)->applyFromArray($styleArray);

                    $k++;
                }

                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $i)->applyFromArray($styleArray);

                $al = Utils::angkatohuruf($k);
                $il = $i;
                $objPHPExcel->getActiveSheet()->setCellValue($al . $il, $row['jumlahmasuk']);
                Utils::customizeColumn($objPHPExcel,$al,$b,trans('all.masuk'),7,true,false,$styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                $al2 = Utils::angkatohuruf($k + 1);
                $il2 = $i;
                $objPHPExcel->getActiveSheet()->setCellValue($al2 . $il2, $row['jumlahterlambat']);
                Utils::customizeColumn($objPHPExcel,$al2,$b,trans('all.terlambat'),10,true,false,$styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al2 . $il2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                $al3 = Utils::angkatohuruf($k + 2);
                $il3 = $i;
                $objPHPExcel->getActiveSheet()->setCellValue($al3 . $il3, $row['jumlah_sakit']);
                Utils::customizeColumn($objPHPExcel,$al3,$b,trans('all.sakit'),10,true,false,$styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al3 . $il3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                $al4 = Utils::angkatohuruf($k + 3);
                $il4 = $i;
                $objPHPExcel->getActiveSheet()->setCellValue($al4 . $il4, $row['jumlah_ijin']);
                Utils::customizeColumn($objPHPExcel,$al4,$b,trans('all.ijin'),10,true,false,$styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al4 . $il4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                $al4 = Utils::angkatohuruf($k + 4);
                $il4 = $i;
                $objPHPExcel->getActiveSheet()->setCellValue($al4 . $il4, $row['jumlah_dispensasi']);
                Utils::customizeColumn($objPHPExcel,$al4,$b,trans('all.dispensasi'),10,true,false,$styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al4 . $il4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                $al5 = Utils::angkatohuruf($k + 5);
                $il5 = $i;
                $objPHPExcel->getActiveSheet()->setCellValue($al5 . $il5, $row['jumlah_cuti']);
                Utils::customizeColumn($objPHPExcel,$al5,$b,trans('all.cuti'),10,true,false,$styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al5 . $il5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);
                $al6 = Utils::angkatohuruf($k + 6);
                $il6 = $i;
                $objPHPExcel->getActiveSheet()->setCellValue($al6 . $il6, $row['jumlah_alpha']);
                Utils::customizeColumn($objPHPExcel,$al6,$b,trans('all.alpha'),10,true,false,$styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al6 . $il6)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($al . $il)->applyFromArray($styleArray);

                $i++;
            }

            $il3 = $i + 1;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $il3, trans('all.keterangan') . ' : ');
            $il4 = $i + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $il4, 'V : ' . trans('all.masuk'));
            $il5 = $i + 3;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $il5, 'X : ' . trans('all.tidakmasuk'));
            $il6 = $i + 4;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $il6, 'O : ' . trans('all.terlambat'));
            $il7 = $i + 5;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $il7, 'S : ' . trans('all.sakit'));
            $il8 = $i + 6;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $il8, 'I : ' . trans('all.ijin'));
            $il9 = $i + 7;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $il9, 'D : ' . trans('all.dispensasi'));
            $il10 = $i + 8;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $il10, 'C : ' . trans('all.cuti'));

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(30);

            $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->getFont()->setBold(true);

            $heightgambar = 99;
            $widthgambar = 99;

            $ix = $il10 + 1;

            $lhuruf = Utils::angkaToHuruf($k + 6);
            $cg = Utils::angkaToHuruf($k+6) . '1';
            $fkhuruf = Utils::angkaToHuruf($k);

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                $l = $ix + 1;
            } else {
                $l = $ix + 1;
                Utils::footerExcel($objPHPExcel,'kiri','A','B',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'tengah','K','T',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'kanan',$fkhuruf,$lhuruf,$l,$rowPE);
            }

            // password
            Utils::passwordExcel($objPHPExcel);

            if ($b > 7) {
                Utils::header5baris($objPHPExcel,$lhuruf,$rowPE);
            }

            //merge dan stylegaris range keterangan tanggal setelah header
            $objPHPExcel->getActiveSheet()->mergeCells('A' . $bt . ':' . $lhuruf . $bt);

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $l + 7;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('A' . $ft)->getFont()->setItalic(true);

            if ($rowPE['logokiri'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
            }

            if ($rowPE['logokanan'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg);
            }

            Utils::insertLogUser('Ekspor laporan per tanggal');
            Utils::setFileNameExcel(trans('all.pertanggal'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function rekapAbsen()
    {
        if(Utils::cekHakakses('laporanekspor','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }
            $atributs = Utils::getAtribut();
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $sql = 'SELECT id,nama FROM jamkerja WHERE jenis = "full" ORDER BY nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $jamkerjafull = $stmt->fetchAll(PDO::FETCH_OBJ);

            $sql = 'SELECT id,nama,jenis FROM jamkerja WHERE jenis = "shift" ORDER BY nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $jamkerjashift = $stmt->fetchAll(PDO::FETCH_OBJ);
            foreach ($jamkerjashift as $row) {
                //ambil data jamkerja shift
                $sql = 'SELECT
                            id,
                            namashift
                        FROM
                            jamkerjashift
                        WHERE
                            idjamkerja=:idjamkerja
                        ORDER BY
                            namashift';
                $stmt2 = $pdo->prepare($sql);
                $stmt2->bindValue(':idjamkerja', $row->id);
                $stmt2->execute();

                $row->jamkerjashift = $stmt2->fetchAll(PDO::FETCH_OBJ);
            }
            $tahun = Utils::tahunDropdown();
            $totalhari = cal_days_in_month(CAL_GREGORIAN,date('m'),date('Y'));
            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();
            Utils::insertLogUser('akses menu laporan rekap absen');
            return view('laporan/rekapabsen/index', ['valuetglawalakhir' => $valuetglawalakhir, 'tahun' => $tahun, 'totalhari' => $totalhari, 'bulanterpilih' => date('m'), 'tahunterpilih' => date('Y'), 'atributs' => $atributs, 'jamkerjafull' => $jamkerjafull, 'jamkerjashift' => $jamkerjashift, 'menu' => 'rekapabsen']);
        } else {
            return redirect('/');
        }
    }

    public function rekapAbsenSubmit(Request $request)
    {
        if(!Utils::cekDateTime($request->tanggalawal) && !Utils::cekDateTime($request->tanggalakhir)){
            return redirect('laporan/rekapabsen');
        }

        $tombol = $request->tombol;
        $tanggalawal = $request->tanggalawal;
        $tanggalakhir = $request->tanggalakhir;
        $atribut = '';
        if (isset($request->atributnilai)) {
            $atribut = $request->atributnilai;
        }
        $jamkerjafull = '';
        if(isset($request->jamkerjafull)){
            $jamkerjafull = $request->jamkerjafull;
        }

        $jamkerjashift = '';
        if(isset($request->jamkerjashift)){
            $jamkerjashift = $request->jamkerjashift;
        }

        $jamkerjashift_umum = ''; // khusus perusahaan virtus
        if(isset($request->jamkerjashift_umum)){
            $jamkerjashift_umum = $request->jamkerjashift_umum;
        }

        Session::set('laprekapabsen_filtermode', $request->filtermode);
        if($request->filtermode == 'berdasarkantanggal') {
            $tahunterpilih = $request->tahun;
            $bulanterpilih = $request->bulan;
            $bulan = Utils::getBulan($request->bulan);
            $tanggal = implode(", ", $request->tanggal);
            $totalhari = cal_days_in_month(CAL_GREGORIAN, $bulanterpilih, $tahunterpilih);

            //cek jika totalhari dan tanggal yg terpilih sama(satu bulan penuh)
            if ($totalhari == count($request->tanggal)) {
                $tanggal = '';
            }

            //set session
            Session::set('laprekapabsen_tanggal', $request->tanggal);
            Session::set('laprekapabsen_bulan', $request->bulan);
            Session::set('laprekapabsen_tahun', $request->tahun);
            Session::set('laprekapabsen_keterangan', $tanggal . ' ' . $bulan . ' ' . $tahunterpilih);
        }

        if ($tombol == 'rekap') {
            //rekapitulasi
            return $this->rekapAbsenExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift);
        } else if ($tombol == 'rekapperkategori') {
            //rekapitulasi catatan tidakmasuk
            return $this->rekapAbsenPerKategoriExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull , $jamkerjashift);
        } else if ($tombol == 'rekapgabungan') {
            return $this->rekapAbsenGabunganExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull , $jamkerjashift);
        } else if ($tombol == 'rekapbulanan') {
            return $this->rekapAbsenBulananExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull , $jamkerjashift);
        } else if ($tombol == 'rekaptext') {
            //riwayat kehadiran
            return $this->rekapAbsenText($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift);
//        } else if ($tombol == 'harilibur') {
//            return $this->hariLibur($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift);
        } else if ($tombol == 'ijintidakmasuk') {
            return $this->ijinTidakMasukExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift);
        } else if ($tombol == 'rekapshift') {
            return $this->rekapAbsenShiftExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift);
        } else if ($tombol == 'attlog') {
            return $this->rekapAbsenAttLog($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull);
        } else if ($tombol == 'pekerjaan') {
            return $this->rekapAbsenPekerjaan($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull);
        } else if ($tombol == 'sepertiwa') {
            return $this->sepertiwa($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull);
        } else if ($tombol == 'sunfish') {
            return $this->sunfish($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull);
        } else if ($tombol == 'timesheetsudahterisi') {
//            if(Session::get('conf_webperusahaan') == '12035') {
//                return $this->timesheetSudahTerisiZip($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull);
//            }else{
//                return $this->timesheetSudahTerisi($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull);
//            }
            return $this->timesheetSudahTerisi($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull);
        } else if ($tombol == 'timesheetsudahterisijamkerja') {
            return $this->timesheetSudahTerisiJamKerja($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift_umum);
        } else if ($tombol == 'internalmemopotongan') {
            return $this->internalMemoPotongan($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull);
        } else if ($tombol == 'internalmemoinsentif') {
            return $this->internalMemoInsentif($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull);
//        } else if ($tombol == 'perpegawai_excel') {  // fungsi ini ada di tab perpegawai combobox tipe 1
//            return $this->rekapAbsenPerpegawaiExcel($tanggalawal, $tanggalakhir, $request->pegawai);
//        } else if ($tombol == 'perpegawai_pdf') {
//            return $this->rekapAbsenPerpegawaiPDF($tanggalawal, $tanggalakhir, $request->pegawai);
        } else if ($tombol == 'summaryrekap') {
            return $this->summaryRekap($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift);
        } else if ($tombol == 'peratribut') {
            return $this->perAtribut($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift);
        }

        // laporan perpegawai baru tipe dua sampai 4 request rs fatmawati
        if(isset($request->jenisperpegawai)){
            $jenis = $request->jenisperpegawai;
            if($jenis == 'tipe1' && $tombol == 'excel'){  // fungsi ini ada di tab perpegawai combobox tipe 1
                return $this->rekapAbsenPerpegawaiExcel($tanggalawal, $tanggalakhir, $request->pegawai);
            }
            if($jenis == 'tipe1' && $tombol == 'pdf'){  // fungsi ini ada di tab perpegawai combobox tipe 1
                return $this->rekapAbsenPerpegawaiPDF($tanggalawal, $tanggalakhir, $request->pegawai);
            }
            if($jenis == 'tipe2' && $tombol == 'excel'){  // fungsi ini ada di tab perpegawai combobox tipe 2
                return redirect('laporan/rekapabsen')->with('message', 'Under Maintenance');
//                return $this->EksporPerpegawaiTipeDuaExcel($tanggalawal, $tanggalakhir, $request->pegawai);
            }
            if($jenis == 'tipe2' && $tombol == 'pdf'){  // fungsi ini ada di tab perpegawai combobox tipe 2
                return $this->EksporPerpegawaiTipeDuaPDF($tanggalawal, $tanggalakhir, $request->pegawai);
            }
        }

        // laporan lainnya request rs fatmawati 202008151038
        if(isset($request->jenislainnya)){
            $jenis = $request->jenislainnya;
            if($jenis == 'tipe1'){ // format rekap per satker
                return $this->EksporLainnyaTipe1($tanggalawal,$tanggalakhir,$atribut,$jamkerjafull,$jamkerjashift);
            }
            if($jenis == 'tipe2'){ // format rekap per satker
                return $this->EksporLainnyaTipe2($tanggalawal,$tanggalakhir,$atribut,$jamkerjafull,$jamkerjashift);
            }
            if($jenis == 'tipe3'){ // format rekap per satker
                return $this->EksporLainnyaTipe3($tanggalawal,$tanggalakhir,$atribut,$jamkerjafull,$jamkerjashift);
            }
        }
        return '';
    }

    public function perAtribut($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $redText = array(
                'font'  => array(
                    'color' => array('rgb' => 'FF0000'),
                )
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $sql = 'SELECT gunakanpwd,pwd,logokiri FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

            $objPHPExcel->createSheet();
            $objPHPExcel->setActiveSheetIndex(0);

            $whereDP = '';
            if($atribut != ''){
                $whereDP = ' AND id IN(SELECT idpegawai FROM pegawaiatribut WHERE 1=1 AND idatributnilai IN('.Utils::atributNilai($atribut).'))';
            }
            $sqlDP = 'SELECT id FROM pegawai WHERE 1=1 '.$whereDP.' ORDER BY nama';
            $stmtDP = $pdo->prepare($sqlDP);
            $stmtDP->execute();
            $r1 = 1;
            $r2 = 2;
            $r3 = 3;
            $r4 = 4;
            $idpegawai_tes = '';
            while($rowDP = $stmtDP->fetch(PDO::FETCH_ASSOC)) {
                $idpegawai = $rowDP['id'];
                $idpegawai_tes .= $rowDP['id'].' ';

                $hh1 = 'A'; //huruf header
                $hh2 = 'B';
                $pdop = DB::getPdo();
                $sql = 'SELECT folderroot FROM perusahaan_route WHERE idperusahaan = :idperusahaan';
                $stmt = $pdop->prepare($sql);
                $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
                $stmt->execute();
                $rowp = $stmt->fetch(PDO::FETCH_ASSOC);
                $path = $rowp['folderroot'] . '/logo_perusahaan';
                if (file_exists($path)) {
                    $hh1 = 'B';
                    $hh2 = 'C';
                    $heightgambar = 99;
                    $widthgambar = 99;
                    Utils::logoExcel('kiri', $objPHPExcel, $path, $heightgambar, $widthgambar, 'A'.$r1);
                }

                // data atribut variable pegawai
                $pdo = DB::connection('perusahaan_db')->getPdo();
                $aa = $r4 + 1; // angka akhir
                $aa2 = $aa + 1;
                $sql1 = 'SELECT
                            av.atribut,
                            pa.variable
                        FROM
                            atributvariable av,
                            pegawaiatributvariable pa
                        WHERE
                            pa.idatributvariable=av.id AND
                            av.penting = "y" AND
                            pa.idpegawai = :idpegawai';
                $stmt1 = $pdo->prepare($sql1);
                $stmt1->bindValue(':idpegawai', $idpegawai);
                $stmt1->execute();
                if ($stmt1->rowCount() > 0) {
                    while ($row1 = $stmt1->fetch(PDO::FETCH_ASSOC)) {
                        $objPHPExcel->getActiveSheet()->setCellValue($hh1 . $aa, $row1['atribut']);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh2 . $aa, ': ' . $row1['variable']);
                        $aa++;
                        $aa2++;
                    }
                }
                $aa = $aa + 1;
                $aa2 = $aa2 + 1;

                //set value kolom
                $periodecantik = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal), Utils::convertDmy2Ymd($tanggalakhir));

                $objPHPExcel->getActiveSheet()
                            ->setCellValue($hh1 . $r1, trans('all.laporankehadiranpegawai'))
                            ->setCellValue($hh1 . $r2, trans('all.periode'))
                            ->setCellValue($hh2 . $r2, ': ' . $periodecantik)
                            ->setCellValue($hh1 . $r3, trans('all.nama'))
                            ->setCellValue($hh2 . $r3, ': ' . Utils::getNamaPegawai($idpegawai))
                            ->setCellValue($hh1 . $r4, trans('all.pin'))
                            ->setCellValue($hh2 . $r4, ': ' . Utils::getDataWhere($pdo, 'pegawai', 'pin', 'id', $idpegawai))
                            ->setCellValue('A' . $aa, trans('all.tanggal'))
                            ->setCellValue('B' . $aa, trans('all.jamkerja'))
                            ->setCellValue('B' . $aa2, trans('all.masuk'))
                            ->setCellValue('C' . $aa2, trans('all.pulang'))
                            ->setCellValue('D' . $aa, trans('all.jammasuk'))
                            ->setCellValue('E' . $aa, trans('all.jamkeluar'))
                            ->setCellValue('F' . $aa, trans('all.jamdatang'))
                            ->setCellValue('F' . $aa2, trans('all.cepat'))
                            ->setCellValue('G' . $aa2, trans('all.telat'))
                            ->setCellValue('H' . $aa, trans('all.jumlahjampulang'))
                            ->setCellValue('H' . $aa2, trans('all.cepat'))
                            ->setCellValue('I' . $aa2, trans('all.telat'))
                            ->setCellValue('J' . $aa, trans('all.terlambataktual'))
                            ->setCellValue('K' . $aa, trans('all.jumlahjamefektif'))
                            ->setCellValue('L' . $aa, trans('all.jumlahjamaktual'))
                            ->setCellValue('M' . $aa, trans('all.keterangan'));

                $objPHPExcel->getActiveSheet()->mergeCells('A' . $aa . ':A' . $aa2);
                $objPHPExcel->getActiveSheet()->mergeCells('B' . $aa . ':C' . $aa);
                $objPHPExcel->getActiveSheet()->mergeCells('D' . $aa . ':D' . $aa2);
                $objPHPExcel->getActiveSheet()->mergeCells('F' . $aa . ':G' . $aa);
                $objPHPExcel->getActiveSheet()->mergeCells('E' . $aa . ':E' . $aa2);
                $objPHPExcel->getActiveSheet()->mergeCells('H' . $aa . ':I' . $aa);
                $objPHPExcel->getActiveSheet()->mergeCells('J' . $aa . ':J' . $aa2);
                $objPHPExcel->getActiveSheet()->mergeCells('K' . $aa . ':K' . $aa2);
                $objPHPExcel->getActiveSheet()->mergeCells('L' . $aa . ':L' . $aa2);
                $objPHPExcel->getActiveSheet()->mergeCells('M' . $aa . ':M' . $aa2);

                $objPHPExcel->getActiveSheet()->getStyle('A' . $aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('D' . $aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('E' . $aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('J' . $aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('K' . $aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('L' . $aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('M' . $aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                $objPHPExcel->getActiveSheet()->getStyle('A' . $aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('D' . $aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('E' . $aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('F' . $aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('F' . $aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('G' . $aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('H' . $aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('H' . $aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('I' . $aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('J' . $aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('K' . $aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('L' . $aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('M' . $aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                $objPHPExcel->getActiveSheet()->getStyle('D' . $aa . ':E' . $aa)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle('J' . $aa . ':L' . $aa)->getAlignment()->setWrapText(true);

                for ($j = 1; $j <= 13; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . '' . $aa)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . '' . $aa)->applyFromArray($styleArray);
                }
                $objPHPExcel->getActiveSheet()->getStyle('B' . $aa2)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $aa2)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('F' . $aa2)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('G' . $aa2)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('H' . $aa2)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('I' . $aa2)->getFont()->setBold(true);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('D' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('E' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('F' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('G' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('H' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('I' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('J' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('K' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('L' . $aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('M' . $aa2)->applyFromArray($styleArray);

                $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(15);
                $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setWidth(12);
                $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setWidth(12);
                $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setWidth(12);
                $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setWidth(50);

                $where1 = '';
                $where2 = '';
                if ($tanggalawal != '' && $tanggalakhir != '') {
                    $where1 .= ' AND ra.tanggal BETWEEN :tanggalawal1 AND :tanggalakhir1';
                    $where2 .= ' AND ra.tanggal BETWEEN :tanggalawal2 AND :tanggalakhir2';
                }

                $sql = 'SELECT
                            ra.tanggal,
                            IFNULL(ra.idharilibur,"") as idharilibur,
                            IFNULL(ra.waktumasuk,"") as waktumasukdatetime,
                            IFNULL(ra.waktukeluar,"") as waktukeluardatetime,
                            IFNULL(TIME(ra.waktumasuk),"") as waktumasuk,
                            IFNULL(TIME(ra.waktukeluar),"") as waktukeluar,
                            IF(ra.selisihmasuk>0,ra.selisihmasuk,"") as datangawal,
                            IF(ra.selisihmasuk<0,-1*ra.selisihmasuk,"") as terlambat,
                            IF(ra.selisihkeluar<0,-1*ra.selisihkeluar,"") as pulanglebihawal,
                            IF(ra.selisihkeluar>0,ra.selisihkeluar,"") as pulangterlambat,
                            SEC_TO_TIME(ra.lamakerja) as lamakerja,
                            SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
                            SEC_TO_TIME(ra.lamalembur) as lamalembur,
                            ra.jadwalmasukkerja,
                            ra.masukkerja,
                            ra.absentidaklengkap,
                            IFNULL(hl.keterangan,"") as keteranganharilibur,
                            IFNULL(atm.kategori,"") as kategorialasantidakmasuk,
                            IFNULL(atm.alasan,"") as alasantidakmasuk,
                            IFNULL(x.jamkerja,"") as jamkerja,
                            ra.jadwallamakerja as jamkerjaefektif
                        FROM
                            rekapabsen ra
                            LEFT JOIN (
                                SELECT
                                    ra.id,
                                    GROUP_CONCAT(DATE_FORMAT(raj.waktu,"%H:%i") ORDER BY raj.waktu SEPARATOR " - ") as jamkerja
                                FROM
                                    rekapabsen ra,
                                    rekapabsen_jadwal raj
                                WHERE
                                    ra.id=raj.idrekapabsen AND
                                    raj.checking IN ("start", "end") AND
                                    ra.idpegawai = :idpegawai1
                                    ' . $where1 . '
                                GROUP BY
                                    ra.id
                            ) x ON ra.id = x.id
                            LEFT JOIN harilibur hl ON ra.idharilibur = hl.id
                            LEFT JOIN alasantidakmasuk atm ON ra.idalasantidakmasuk = atm.id
                        WHERE
                            ra.idpegawai = :idpegawai2 ' . $where2 . '
                        ORDER BY
                            ra.tanggal ASC';
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':idpegawai1', $idpegawai);
                $stmt->bindValue(':idpegawai2', $idpegawai);
                if ($tanggalawal != '' && $tanggalakhir != '') {
                    $stmt->bindValue(':tanggalawal1', Utils::convertDmy2Ymd($tanggalawal));
                    $stmt->bindValue(':tanggalakhir1', Utils::convertDmy2Ymd($tanggalakhir));
                    $stmt->bindValue(':tanggalawal2', Utils::convertDmy2Ymd($tanggalawal));
                    $stmt->bindValue(':tanggalakhir2', Utils::convertDmy2Ymd($tanggalakhir));
                }
                $stmt->execute();
                $i = $aa + 2;

                $total_harikerja = 0;
                $total_jamdatang_cepat = 0;
                $total_jamdatang_telat = 0;
                $total_jampulang_cepat = 0;
                $total_jampulang_telat = 0;
                $total_terlambat = 0;
                $total_jamefektif = 0;
                $total_jamaktual = 0;
                $totaldata = $stmt->rowCount();
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $jamkerja = $row['jamkerja'] != '' ? explode('-', $row['jamkerja']) : '';
                    $jamkerjaefektif = floor($row['jamkerjaefektif'] / 60);

                    // terlambataktual
                    $terlambataktual = 0;
                    $jamkerjaaktual = 0;

                    if ($row['waktumasukdatetime'] != '' || $row['waktukeluardatetime'] != '') {
                        $total_harikerja = $total_harikerja + 1;
                        //                    $pulangterlambat = $row['pulangterlambat'] > 1800 ? 1800 : $row['pulangterlambat'];
                        $pulangterlambat = $row['pulangterlambat'] > 1800 ? floor(1800 / 60) : floor($row['pulangterlambat'] / 60);
                        if ($pulangterlambat > 0 || $row['pulanglebihawal'] != 0) {
                            //                        $terlambataktual = $row['terlambat'] + $row['pulanglebihawal'] - $pulangterlambat;
                            $terlambataktual = floor($row['terlambat'] / 60) + floor($row['pulanglebihawal'] / 60) - $pulangterlambat;
                        }
                        if ($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't') {
                            // jika harilibur dan pegawai tsb tetap masuk, hitung jam kerja aktual dari waktu keluar di kurangi waktu masuk
                            if ($row['waktumasukdatetime'] != '' && $row['waktukeluardatetime'] != '') {
                                //                            $jamkerjaaktual = abs(strtotime($row['waktukeluardatetime']) - strtotime($row['waktumasukdatetime']));
                                $jamkerjaaktual = floor(abs(strtotime($row['waktukeluardatetime']) - strtotime($row['waktumasukdatetime'])) / 60);
                            }
                        } else {
                            // jika tidak harilibur, jam kerja aktual dari jamkerjaefektif
                            $jamkerjaaktual = $jamkerjaefektif;
                        }
                        if ($terlambataktual > 0) {
                            $jamkerjaaktual = $jamkerjaaktual - $terlambataktual;
                        }
                    }

                    //jika dispensasi jamkerjaaktual dari jam kerjaefektif
                    if ($row['kategorialasantidakmasuk'] == 'd') {
                        $jamkerjaaktual = $jamkerjaefektif;
                    }

                    if ($row['absentidaklengkap'] != '') {
                        $jamkerjaaktual = floor(14400 / 60); // 4jam (permintaan heerjan)
                    }

                    if ($row['kategorialasantidakmasuk'] == 'i' || $row['kategorialasantidakmasuk'] == 's' || $row['kategorialasantidakmasuk'] == 'c') {
                        $jamkerjaaktual = 0;
                        $jamkerjaefektif = 0;
                    }

                    $datangawal = $row['datangawal'] != '' ? floor($row['datangawal'] / 60) : 0;
                    $terlambat = $row['terlambat'] != '' ? floor($row['terlambat'] / 60) : 0;
                    $pulanglebihawal = $row['pulanglebihawal'] != '' ? floor($row['pulanglebihawal'] / 60) : 0;
                    $pulangterlambat = $row['pulangterlambat'] != '' ? floor($row['pulangterlambat'] / 60) : 0;

                    $total_jamdatang_cepat = $total_jamdatang_cepat + $datangawal;
                    $total_jamdatang_telat = $total_jamdatang_telat + $terlambat;
                    $total_jampulang_cepat = $total_jampulang_cepat + $pulanglebihawal;
                    $total_jampulang_telat = $total_jampulang_telat + $pulangterlambat;
                    $total_terlambat = $total_terlambat + $terlambataktual;
                    $total_jamefektif = $total_jamefektif + $jamkerjaefektif;
                    $total_jamaktual = $total_jamaktual + $jamkerjaaktual;

                    //keterangan
                    $keterangan = '';
                    if ($terlambat > 0) {
                        $keterangan .= trans('all.terlambat') . ', ';
                    }
                    if ($pulanglebihawal > 0) {
                        $keterangan .= trans('all.pulangawal') . ', ';
                    }
                    if ($row['absentidaklengkap'] == 'm') {
                        $keterangan .= trans('all.kurangabsenmasuk') . ', ';
                    }
                    if ($row['absentidaklengkap'] == 'k') {
                        $keterangan .= trans('all.kurangabsenkeluar') . ', ';
                    }
                    if ($row['alasantidakmasuk'] != '') {
                        $keterangan .= $row['alasantidakmasuk'] . ', ';
                    }
                    if ($row['keteranganharilibur'] != '') {
                        $keterangan .= $row['keteranganharilibur'] . ', ';
                    }
                    if ($row['jadwalmasukkerja'] == 't') {
                        $keterangan = trans('all.libur') . ', ';
                    }

                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, Utils::tanggalCantik($row['tanggal']));
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['jamkerja'] != '' ? $jamkerja[0] : '-');
                    $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['jamkerja'] != '' ? $jamkerja[1] : '-');
                    $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['waktumasuk'] != '' ? substr($row['waktumasuk'], 0, -3) : '-');
                    $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['waktukeluar'] != '' ? substr($row['waktukeluar'], 0, -3) : '-');
                    //                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $datangawal > 59 ? Utils::sec2hhmm($datangawal) : '-'); //kenapa 59 ? untuk menghindari return 00:00
                    $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $datangawal > 0 ? Utils::min2hhmm($datangawal) : '-');
                    $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $terlambat > 0 ? Utils::min2hhmm($terlambat) : '-');
                    $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $pulanglebihawal > 0 ? Utils::min2hhmm($pulanglebihawal) : '-');
                    $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $pulangterlambat > 0 ? Utils::min2hhmm($pulangterlambat) : '-');
                    $objPHPExcel->getActiveSheet()->setCellValue('J' . $i, $terlambataktual > 0 ? Utils::min2hhmm($terlambataktual) : '-');//$terlambataktual > 59 ? Utils::sec2hhmm($terlambataktual) : '-');
                    $objPHPExcel->getActiveSheet()->setCellValue('K' . $i, $jamkerjaefektif > 0 ? Utils::min2hhmm($jamkerjaefektif) : '-');//$jamkerjaefektif > 59 ? Utils::sec2hhmm($jamkerjaefektif) : '-');
                    $objPHPExcel->getActiveSheet()->setCellValue('L' . $i, $jamkerjaaktual > 0 ? Utils::min2hhmm($jamkerjaaktual) : '-');///$jamkerjaaktual > 59 ? Utils::sec2hhmm($jamkerjaaktual) : '-');
                    $objPHPExcel->getActiveSheet()->setCellValue('M' . $i, $keterangan != '' ? substr($keterangan, 0, -2) : ($row['masukkerja'] == 'y' ? '' : trans('all.tanpaketerangan')));

                    //jika libur
                    if ($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't') {
                        $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->applyFromArray($redText);
                    }

                    if ($row['jadwalmasukkerja'] == 't' && ($row['waktumasuk'] != '' || $row['waktukeluar'] != '')) {
                        $objPHPExcel->getActiveSheet()->getStyle('D' . $i)->applyFromArray($redText);
                        $objPHPExcel->getActiveSheet()->getStyle('E' . $i)->applyFromArray($redText);
                    }

                    for ($j = 1; $j <= 13; $j++) {
                        $hi = Utils::angkaToHuruf($j);
                        $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    }

                    $i++;
                }

                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, trans('all.total') . ' ' . $total_harikerja . ' ' . trans('all.hari')); // 13 dari jumlah dia masuk
                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $total_jamdatang_cepat > 0 ? Utils::min2hhmm($total_jamdatang_cepat) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $total_jamdatang_telat > 0 ? Utils::min2hhmm($total_jamdatang_telat) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $total_jampulang_cepat > 0 ? Utils::min2hhmm($total_jampulang_cepat) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $total_jampulang_telat > 0 ? Utils::min2hhmm($total_jampulang_telat) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('J' . $i, $total_terlambat > 0 ? Utils::min2hhmm($total_terlambat) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('K' . $i, $total_jamefektif > 0 ? Utils::min2hhmm($total_jamefektif) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('L' . $i, $total_jamaktual > 0 ? Utils::min2hhmm($total_jamaktual) : '-');
                $objPHPExcel->getActiveSheet()->mergeCells('A' . $i . ':E' . $i);
                for ($j = 1; $j <= 13; $j++) {
                    $hi = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                }
                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $r1 = $r1 + $totaldata + 16;
                $r2 = $r2 + $totaldata + 16;
                $r3 = $r3 + $totaldata + 16;
                $r4 = $r4 + $totaldata + 16;
            }

            // password
            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan per atribut');
            Utils::setFileNameExcel(trans('all.laporanperatribut'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

//    public function perAtribut($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift){
//        if(Utils::cekHakakses('laporanekspor','l')){
//            $pdo = DB::connection('perusahaan_db')->getPdo();
//            $objPHPExcel = new PHPExcel();
//
//            Utils::setPropertiesExcel($objPHPExcel,trans('all.perpegawai'));
//
//            $sql = 'SELECT gunakanpwd,pwd,logokiri FROM parameterekspor';
//            $stmt = $pdo->prepare($sql);
//            $stmt->execute();
//            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
//
//            $where = '';
//            if($atribut != ''){
//                $where .= ' AND p.id IN (SELECT idpegawai FROM pegawaiatribut WHERE idatributnilai IN('.Utils::atributNilai($atribut).'))';
//            }
//
//            //sheet 1 data pegawai
//            //set value kolom
//            $objPHPExcel->createSheet();
//            $objPHPExcel->setActiveSheetIndex(0)
//                        ->setCellValue('A11', trans('all.datapegawai'))
//                        ->setCellValue('A12', trans('all.nama'))
//                        ->setCellValue('A13', trans('all.pin'))
//                        ->setCellValue('A14', trans('all.nomorhp'));
//
//            //data pegawai
//
//            $sql = 'SELECT
//                        p.id,
//                        p.nama,
//                        p.pin,
//                        p.nomorhp
//                    FROM
//                        pegawai p
//                    WHERE
//                        1=1 '.$where.'
//                    ORDER BY
//                        p.nama';
//            $stmt = $pdo->prepare($sql);
//            $stmt->execute();
//            $i_foto = 1;
//            $i_datapegawai = 11;
//            $i_nama = 12;
//            $i_pin = 13;
//            $i_nomorhp = 14;
//            while($row = $stmt->fetch(PDO::FETCH_ASSOC)){
//                $idpegawai = $row['id'];
//                $objPHPExcel->getActiveSheet()->setCellValue('A'.$i_datapegawai, trans('all.datapegawai'));
//                $objPHPExcel->getActiveSheet()->setCellValue('A'.$i_nama, trans('all.nama'));
//                $objPHPExcel->getActiveSheet()->setCellValue('A'.$i_pin, trans('all.pin'));
//                $objPHPExcel->getActiveSheet()->setCellValue('A'.$i_nomorhp, trans('all.nomorhp'));
//
//                $objPHPExcel->getActiveSheet()->setCellValue('B'.$i_nama, $row['nama']);
//                $objPHPExcel->getActiveSheet()->setCellValue('B'.$i_pin, $row['pin']);
//                $objPHPExcel->getActiveSheet()->setCellValue('B'.$i_nomorhp, $row['nomorhp']);
//
//                $angkaakhir = $i_nomorhp + 1;
//
//                // data atribut pegawai
//                $sql1 = 'SELECT
//                            a.atribut,
//                            an.nilai
//                        FROM
//                            atributnilai an LEFT JOIN atribut a ON an.idatribut=a.id
//                            LEFT JOIN pegawaiatribut pa ON pa.idatributnilai=an.id
//                        WHERE
//                            pa.idpegawai = ' . $idpegawai;
//                $stmt1 = $pdo->prepare($sql1);
//                $stmt1->execute();
//                $totalatributpegawai = $stmt1->rowCount();
//                if ($totalatributpegawai > 0) {
//                    while ($row1 = $stmt1->fetch(PDO::FETCH_ASSOC)) {
//                        $objPHPExcel->getActiveSheet()->setCellValue('A' . $angkaakhir, $row1['atribut']);
//                        $objPHPExcel->getActiveSheet()->setCellValue('B' . $angkaakhir, $row1['nilai']);
//                        $angkaakhir++;
//                    }
//                }
//
//                // data pegawai lokasi
//                $sql2 = 'SELECT
//                            IFNULL(GROUP_CONCAT(l.nama SEPARATOR ", "),"") as lokasi
//                        FROM
//                            lokasi l,
//                            pegawailokasi pl
//                        WHERE
//                            pl.idlokasi=l.id AND
//                            pl.idpegawai = ' . $idpegawai . '
//                        GROUP BY
//                            pl.idpegawai';
//                $stmt2 = $pdo->prepare($sql2);
//                $stmt2->execute();
//                $row2 = $stmt2->fetch(PDO::FETCH_ASSOC);
//                if ($row2['lokasi'] != '') {
//                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $angkaakhir, trans('all.lokasi'));
//                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $angkaakhir, $row2['lokasi']);
//                }
//
//                //foto pegawai
//                $pathfoto = Session::get('folderroot_perusahaan') . '/pegawai/' . Utils::id2Folder($idpegawai) . '/' . $idpegawai;
//                if (file_exists($pathfoto)) {
//                    $raw = Utils::decrypt($pathfoto);
//                    $im = imagecreatefromstring($raw);
//
//                    $objDrawing = new PHPExcel_Worksheet_MemoryDrawing();
//                    $objDrawing->setName(trans('all.logo'));
//                    $objDrawing->setImageResource($im);
//                    $objDrawing->setRenderingFunction(PHPExcel_Worksheet_MemoryDrawing::RENDERING_JPEG);
//                    $objDrawing->setMimeType(PHPExcel_Worksheet_MemoryDrawing::MIMETYPE_DEFAULT);
//                    $objDrawing->setHeight(150);
//                    $objDrawing->setWidth(150);
//                    $objDrawing->setCoordinates('A'.$i_foto);
//                    $objDrawing->setOffsetX(50);
//                    $objDrawing->setOffsetY(50);
//                    $objDrawing->setWorksheet($objPHPExcel->getActiveSheet());
//                }
//
//                $objPHPExcel->getActiveSheet()->getStyle('A'.$i_datapegawai)->getFont()->setBold(true);
//                $objPHPExcel->getActiveSheet()->mergeCells('A'.$i_datapegawai.':B'.$i_datapegawai);
//                $objPHPExcel->getActiveSheet()->getStyle('A'.$i_datapegawai)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//
//                $i_foto = $i_foto + 14 + $totalatributpegawai;
//                $i_datapegawai = $i_datapegawai + 14 + $totalatributpegawai;
//                $i_nama = $i_nama + 14 + $totalatributpegawai;
//                $i_pin = $i_pin + 14 + $totalatributpegawai;
//                $i_nomorhp = $i_nomorhp + 14 + $totalatributpegawai;
//            }
//
//            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(15);
//            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(25);
//            $objPHPExcel->getActiveSheet()->setTitle(trans('all.pegawai'));
//
//            // password
//            Utils::passwordExcel($objPHPExcel);
//
//            // sheet 2 rekapitulasi
//            $tampilflexytime = Utils::getDataWhere($pdo,'pengaturan','tampilkan_flexytime');
//            $objPHPExcel->createSheet();
//            //set value kolom
//            if($tampilflexytime == 'y') {
//                $objPHPExcel->getActiveSheet()->setCellValue('P1', trans('all.lamaflexytime'));
//                $huruflamalembur = 'S';
//                $hurufkelengkapanpresensi = 'T';
//            }else{
//                $huruflamalembur = 'Q';
//                $hurufkelengkapanpresensi = 'R';
//            }
//            $objPHPExcel->setActiveSheetIndex(1)
//                ->setCellValue('A1', trans('all.tanggal'))
//                ->setCellValue('B1', trans('all.tanggal'))
//                ->setCellValue('C1', trans('all.libur'))
//                ->setCellValue('D1', trans('all.harilibur'))
//                ->setCellValue('E1', trans('all.masukkerja'))
//                ->setCellValue('F1', trans('all.alasantidakmasuk'))
//                ->setCellValue('G1', trans('all.jamkerja'))
//                ->setCellValue('H1', trans('all.jadwalkerja'))
//                ->setCellValue('I1', trans('all.alasanmasuk'))
//                ->setCellValue('J1', trans('all.waktumasuk'))
//                ->setCellValue('K1', trans('all.waktukeluar'))
//                ->setCellValue('L1', trans('all.flag'))
//                ->setCellValue('M1', trans('all.datangawal'))
//                ->setCellValue('N1', trans('all.terlambat'))
//                ->setCellValue('O1', trans('all.pulanglebihawal'))
//                ->setCellValue('P1', trans('all.lamakerja'))
//                ->setCellValue($huruflamalembur.'1', trans('all.lamalembur'))
//                ->setCellValue($hurufkelengkapanpresensi.'1', trans('all.kelengkapanpresensi'));
//
//            $sql = 'SELECT
//                        p.nama as pegawai,
//                        (DATEDIFF(ra.tanggal,"1900-01-01")+2) as tanggal,
//                        ra.jadwalmasukkerja as libur,
//                        IFNULL(hl.keterangan,"") as harilibur,
//                        ra.masukkerja,
//                        IFNULL(atm.alasan,"") as alasantidakmasuk,
//                        IFNULL(jk.nama,"") as jamkerja,
//                        IFNULL(amk.alasan,"") as alasanmasuk,
//                        (DATEDIFF(ra.waktumasuk,"1900-01-01")+2)+ROUND(time_to_sec(timediff(DATE_FORMAT(ra.waktumasuk,"%T"),"00:00:00"))/86400,9) as waktumasuk1,
//	                    (DATEDIFF(ra.waktukeluar,"1900-01-01")+2)+ROUND(time_to_sec(timediff(DATE_FORMAT(ra.waktukeluar,"%T"),"00:00:00"))/86400,9) as waktukeluar,
//                        TIME(ra.waktumasuk) as waktumasuk,
//                        TIME(ra.waktukeluar) as waktukeluar,
//                        ra.flag_terlambat,
//                        ra.flag_pulangawal,
//                        ra.flag_lembur,
//                        CONCAT(IFNULL(TIME(ra.waktumasuk),"")," - ",IFNULL(TIME(ra.waktukeluar),"")) AS waktukerja,
//                        IF(ra.selisihmasuk>0,SEC_TO_TIME(ra.selisihmasuk),"00:00:00") as datangawal,
//                        IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"00:00:00") as terlambat,
//                        IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"00:00:00") as pulanglebihawal,
//                        SEC_TO_TIME(ra.lamakerja) as lamakerja,
//                        SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
//                        SEC_TO_TIME(ra.lamalembur) as lamalembur,
//                        ROUND(ra.lamakerja/60) as lamakerja1,
//                        ROUND(ra.lamalembur/60) as lamalembur1,
//                        IFNULL(GROUP_CONCAT(raj.waktu ORDER BY IF(raj.checking="start",0,1) ASC, IF(raj.masukkeluar="m",0,1) ASC SEPARATOR "|" ),"") as jadwalkerja2,
//	                    IFNULL(GROUP_CONCAT(raj.waktu SEPARATOR "|" ),"") as jadwalkerja,
//                        ra.absentidaklengkap as kelengkapanpresensi
//                    FROM
//                        rekapabsen ra
//                        LEFT JOIN harilibur hl ON hl.id=ra.idharilibur
//                        LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
//                        LEFT JOIN jamkerja jk ON jk.id=ra.idjamkerja
//                        LEFT JOIN alasanmasukkeluar amk ON amk.id=ra.idalasanmasuk
//                        LEFT JOIN rekapabsen_jadwal raj ON raj.idrekapabsen=ra.id AND raj.checking IN ("start", "end"),
//                        pegawai p
//                    WHERE
//                        ra.idpegawai = p.id AND
//                        ra.tanggal BETWEEN "' . Utils::convertDmy2Ymd($tanggalawal) . '" AND "' . Utils::convertDmy2Ymd($tanggalakhir) . '"
//                        ' . $where . '
//                    GROUP BY
//                        ra.id
//                    ORDER BY
//                        p.nama ASC, ra.tanggal ASC';
//            $stmt = $pdo->prepare($sql);
//            $stmt->execute();
//            $i = 2;
//            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
//
//                $jadwalKerja ='';
//                $explode = explode('|', $row['jadwalkerja']);
//                $jumlah = floor(count($explode) / 2);
//                $a = 0;
//                for($j=0;$j<$jumlah;$j++) {
//                    $awal_tgl = substr($explode[$j+$a],0,10);
//                    $awal_jam = substr($explode[$j+$a],11,8);
//                    $akhir_tgl = substr($explode[$j+$a+1],0,10);
//                    $akhir_jam = substr($explode[$j+$a+1],11,8);
//                    $tandaBedaHari = '';
//                    if ($awal_tgl != $akhir_tgl) {
//                        $tandaBedaHari = '*';
//                    }
//                    $jadwalKerja .= $awal_jam.' ~ '.$akhir_jam.' '.$tandaBedaHari;
//                    if ($j < $jumlah) {
//                        $jadwalKerja .= ' ';
//                    }
//                    $a++;
//                }
//                $kelengkapanpresensi = '';
//                if($row['kelengkapanpresensi'] == 'm'){
//                    $kelengkapanpresensi = trans('all.kurangabsenmasuk');
//                }else if($row['kelengkapanpresensi'] == 'k'){
//                    $kelengkapanpresensi = trans('all.kurangabsenkeluar');
//                }
//
//                if($tampilflexytime == 'y') {
//                    $objPHPExcel->getActiveSheet()->setCellValue('P' . $i, $row['lamaflexytime']);
//                }
//
//                $terlambat = $row['flag_terlambat'] != '' ? ($row['flag_terlambat'] == 'y' ? trans('all.terlambat').' ' : trans('all.tidakterlambat').' ') : '';
//                $pulangawal = $row['flag_pulangawal'] != '' ? ($row['flag_pulangawal'] == 'y' ? trans('all.pulangawal').' ' : trans('all.tidakpulangawal').' ') : '';
//                $lembur = $row['flag_lembur'] != '' ? ($row['flag_lembur'] == 'y' ? trans('all.lembur') : trans('all.tidaklembur')) : '';
//                $flag = $terlambat.$pulangawal.$lembur;
//
//                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pegawai']);
//                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['tanggal']);
//                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['libur'] != 'y' ? trans('all.ya') : trans('all.tidak'));
//                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['harilibur']);
//                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['masukkerja'] == 'y' ? trans('all.ya') : trans('all.tidak'));
//                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $row['alasantidakmasuk']);
//                $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $row['jamkerja']);
//                $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $jadwalKerja);
//                $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $row['alasanmasuk']);
//                $objPHPExcel->getActiveSheet()->setCellValue('J' . $i, $row['waktumasuk']);
//                $objPHPExcel->getActiveSheet()->setCellValue('K' . $i, $row['waktukeluar']);
//                $objPHPExcel->getActiveSheet()->setCellValue('L' . $i, $flag);
//                $objPHPExcel->getActiveSheet()->setCellValue('M' . $i, $row['datangawal']);
//                $objPHPExcel->getActiveSheet()->setCellValue('N' . $i, $row['terlambat']);
//                $objPHPExcel->getActiveSheet()->setCellValue('O' . $i, $row['pulanglebihawal']);
//                $objPHPExcel->getActiveSheet()->setCellValue('P' . $i, $row['lamakerja']);
//                $objPHPExcel->getActiveSheet()->setCellValue($huruflamalembur . $i, $row['lamalembur']);
//                $objPHPExcel->getActiveSheet()->setCellValue($hurufkelengkapanpresensi . $i, $kelengkapanpresensi);
//
//                // format
//                $objPHPExcel->getActiveSheet()->getStyle('B' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY');
//                $objPHPExcel->getActiveSheet()->getStyle('J' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY HH:MM:SS');
//                $objPHPExcel->getActiveSheet()->getStyle('K' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY HH:MM:SS');
//
//                $i++;
//            }
//
//            $arrWidth = array('', 50, 12, 12, 15, 15, 20, 20, 20, 20, 20, 20, 30, 15, 12, 15, 15, 17, 15, 25);
//            for ($j = 1; $j <= 19; $j++) {
//                $huruf = Utils::angkaToHuruf($j);
//                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
//                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
//            }
//
//            $objPHPExcel->getActiveSheet()->setTitle(trans('all.rekapitulasi'));
//
//            // password
//            Utils::passwordExcel($objPHPExcel);
//
//            //sheet 3 riwayat kehadiran
//            $objPHPExcel->createSheet();
//            //set value kolom
//            $objPHPExcel->setActiveSheetIndex(2)
//                        ->setCellValue('A1', trans('all.pegawai'))
//                        ->setCellValue('B1', trans('all.tanggal'))
//                        ->setCellValue('C1', trans('all.masukkeluar'))
//                        ->setCellValue('D1', trans('all.alasan'))
//                        ->setCellValue('E1', trans('all.terhitungkerja'))
//                        ->setCellValue('F1', trans('all.status'))
//                        ->setCellValue('G1', trans('all.mesin'))
//                        ->setCellValue('H1', trans('all.lat'))
//                        ->setCellValue('I1', trans('all.lon'));
//
//            $sql = 'SELECT
//                        p.nama as pegawai,
//                        (DATEDIFF(la.waktu,"1900-01-01")+2)+ROUND(time_to_sec(timediff(DATE_FORMAT(la.waktu,"%T"),"00:00:00"))/86400,9) as tanggal,
//                        IF(la.masukkeluar="m","' . trans('all.masuk') . '","' . trans('all.keluar') . '") as masukkeluar,
//                        IFNULL(amk.alasan,"-") as alasan,
//                        IF(la.terhitungkerja="y","' . trans('all.ya') . '","' . trans('all.tidak') . '") as terhitungkerja,
//                        IF(la.status="v","' . trans('all.valid') . '",IF(la.status="c","' . trans('all.konfirmasi') . '",IF(la.status="na","' . trans('all.tidakvalid') . '",""))) as status,
//                        m.nama as mesin,
//                        la.lat,
//                        la.lon
//                      FROM
//                        logabsen la
//                        LEFT JOIN mesin m ON m.id=la.idmesin
//                        LEFT JOIN alasanmasukkeluar amk ON amk.id=la.idalasanmasukkeluar,
//                        pegawai p
//                      WHERE
//                        la.idpegawai = p.id AND
//                        la.waktu>=CONCAT(STR_TO_DATE("' . $tanggalawal . '","%d/%m/%Y")," 00:00:00") AND la.waktu<=CONCAT(STR_TO_DATE("' . $tanggalakhir . '","%d/%m/%Y")," 23:59:59")
//                        ' . $where . '
//                      ORDER BY
//                        p.nama ASC, la.waktu ASC';
//            $stmt = $pdo->prepare($sql);
//            $stmt->execute();
//            $i = 2;
//            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
//                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pegawai']);
//                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['tanggal']);
//                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['masukkeluar']);
//                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['alasan']);
//                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['terhitungkerja']);
//                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $row['status']);
//                $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $row['mesin']);
//                $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $row['lat']);
//                $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $row['lon']);
//
//                $objPHPExcel->getActiveSheet()->getStyle('B' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY HH:MM:SS');
//
//                $i++;
//            }
//
//            $arrWidth = array('', 50, 25, 12, 30, 15, 10, 30, 15, 15);
//            for ($j = 1; $j <= 9; $j++) {
//                $huruf = Utils::angkaToHuruf($j);
//                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
//                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
//            }
//
//            $objPHPExcel->getActiveSheet()->setTitle(trans('all.riwayatkehadiran'));
//
//            // password
//            Utils::passwordExcel($objPHPExcel);
//
//            //sheet 4 ijin tidak masuk
//            $objPHPExcel->createSheet();
//            //set value kolom
//            $objPHPExcel->setActiveSheetIndex(3)
//                        ->setCellValue('A1', trans('all.pegawai'))
//                        ->setCellValue('B1', trans('all.tanggal'))
//                        ->setCellValue('C1', trans('all.alasan'))
//                        ->setCellValue('D1', trans('all.keterangan'))
//                        ->setCellValue('E1', trans('all.status'));
//
//            $sql = 'SELECT
//                        p.nama as pegawai,
//                        i.tanggalawal,
//                        i.tanggalakhir,
//                        a.alasan,
//                        i.keterangan,
//                        IF(i.status="c","' . trans('all.konfirmasi') . '",IF(i.status="a","' . trans('all.diterima') . '",IF(i.status="na","' . trans('all.ditolak') . '",""))) as status
//                    FROM
//                        ijintidakmasuk i
//                        LEFT JOIN alasantidakmasuk a ON i.idalasantidakmasuk=a.id,
//                        pegawai p
//                    WHERE
//                        i.idpegawai = p.id ' . $where.'
//                    ORDER BY
//                        p.nama ASC';
//            $stmt = $pdo->prepare($sql);
//            $stmt->execute();
//            $i = 2;
//            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
//                $tgl = Utils::tanggalCantikDariSampai($row['tanggalawal'], $row['tanggalakhir']);
//
//                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pegawai']);
//                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $tgl);
//                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['alasan']);
//                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['keterangan']);
//                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['status']);
//
//                $i++;
//            }
//
//            $arrWidth = array('', 50, 20, 30, 50, 12);
//            for ($j = 1; $j <= 5; $j++) {
//                $huruf = Utils::angkaToHuruf($j);
//                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
//                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
//            }
//
//            $objPHPExcel->getActiveSheet()->setTitle(trans('all.ijintidakmasuk'));
//
//            // password
//            Utils::passwordExcel($objPHPExcel);
//
//            $nextsheet = 4;
//            //sheet 5 jadwal shift
//            $objPHPExcel->createSheet();
//            //set value kolom
//            $objPHPExcel->setActiveSheetIndex($nextsheet)
//                        ->setCellValue('A1', trans('all.pegawai'))
//                        ->setCellValue('B1', trans('all.tanggal'))
//                        ->setCellValue('C1', trans('all.jamkerja'))
//                        ->setCellValue('D1', trans('all.namashift'));
//
//            $sql = 'SELECT
//                        p.nama as pegawai,
//                        (DATEDIFF(js.tanggal,"1900-01-01")+2) as tanggal,
//                        jk.nama as jamkerja,
//                        jks.namashift
//                    FROM
//                        jamkerja jk,
//                        jamkerjashift jks,
//                        jadwalshift js,
//                        pegawai p
//                    WHERE
//                        jk.id=jks.idjamkerja AND
//                        jks.id=js.idjamkerjashift AND
//                        js.idpegawai = p.id AND
//                        js.tanggal BETWEEN "' . Utils::convertDmy2Ymd($tanggalawal) . '" AND "' . Utils::convertDmy2Ymd($tanggalakhir) . '"' . $where.'
//                    ORDER BY
//                        p.nama ASC, js.tanggal ASC';
//            $stmt = $pdo->prepare($sql);
//            $stmt->execute();
//            $i = 2;
//            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
//                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pegawai']);
//                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['tanggal']);
//                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['jamkerja']);
//                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['namashift']);
//
//                $objPHPExcel->getActiveSheet()->getStyle('B' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY');
//
//                $i++;
//            }
//
//            $arrWidth = array('', 50, 15, 30, 30);
//            for ($j = 1; $j <= 4; $j++) {
//                $huruf = Utils::angkaToHuruf($j);
//                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
//                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
//            }
//
//            $objPHPExcel->getActiveSheet()->setTitle(trans('all.jadwalshift'));
//
//            // password
//            Utils::passwordExcel($objPHPExcel);
//            Utils::insertLogUser('Ekspor laporan per atribut');
//            header('Content-Type: application/vnd.ms-excel');
//            header('Content-Disposition: attachment;filename="' . time() . '_' . trans('all.laporanperatribut') . '.xlsx"');
//            header('Cache-Control: max-age=0');
//            header('Cache-Control: max-age=1');
//
//            header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
//            header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT'); // always modified
//            header('Cache-Control: cache, must-revalidate'); // HTTP/1.1
//            header('Pragma: public'); // HTTP/1.0
//
//            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
//            $writer->save('php://output');
//        }
//    }

    public function summaryRekap($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            $batasansql = '';
            $shift_batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
//                $batasan = ' AND p.id IN :batasan ';
                $batasan = ' AND p.id IN '.$batasan;
                $shift_batasan = ' AND rs.idpegawai IN ' . $shift_batasan;
            }

            //file summary rekap
            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel,trans('all.summaryrekap'));

            $sql = 'SELECT id, alasan FROM alasantidakmasuk WHERE digunakan="y" ORDER BY urutan';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $arrAlasanTidakMasuk = $stmt->fetchAll(PDO::FETCH_ASSOC);
            $totalalasantidakmasuk = $stmt->rowCount();
            $sqlAlasanTidakMasuk = '';
            $sqlAlasanTidakMasuk_x = '';
            $h = 6; // karena dari F
            for($l=0;$l<$totalalasantidakmasuk;$l++) {
                $ah = Utils::angkaToHuruf($h);
                $objPHPExcel->getActiveSheet()->setCellValue($ah . '4', $arrAlasanTidakMasuk[$l]['alasan']);
                $objPHPExcel->getActiveSheet()->getStyle($ah . '4')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getColumnDimension($ah)->setWidth(25);

                // untu sql query
                $sqlAlasanTidakMasuk = $sqlAlasanTidakMasuk. 'SUM(IF(ra.jadwalmasukkerja="y" AND ra.idalasantidakmasuk='.$arrAlasanTidakMasuk[$l]['id'].',1,0)) as catatan_'.$l.', ';
                $sqlAlasanTidakMasuk_x = $sqlAlasanTidakMasuk_x. 'SUM(IFNULL(x.catatan_'.$l.',0)) as catatan_'.$l.', ';

                $h++;
            }
            $ahh1 = Utils::angkaToHuruf($h);
            $ahh2 = Utils::angkaToHuruf($h+1);
            $ahh3 = Utils::angkaToHuruf($h+2);
            $ahh4 = Utils::angkaToHuruf($h+3);
            $ahh5 = Utils::angkaToHuruf($h+4);

            //set value kolom
            $periodecantik = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('B2', $periodecantik)
                        ->setCellValue('B4', trans('all.atributnilai'))
                        ->setCellValue('C4', trans('all.totalpegawai'))
                        ->setCellValue('D4', trans('all.totaljadwal'))
                        ->setCellValue('E4', trans('all.totalhariyangterisijadwal'))
                        ->setCellValue($ahh1.'4', trans('all.totalharitidakmasuk'))
                        ->setCellValue($ahh2.'4', trans('all.totalhariefektif'))
                        ->setCellValue($ahh3.'4', trans('all.persentase').' %')
                        ->setCellValue($ahh4.'4', trans('all.totalhariterlambat'))
                        ->setCellValue($ahh5.'4', trans('all.persentase').' %');

            $objPHPExcel->getActiveSheet()->getStyle('B4')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C4')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('D4')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('E4')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($ahh1.'4')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($ahh2.'4')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($ahh3.'4')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($ahh4.'4')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($ahh5.'4')->applyFromArray($styleArray);

//            $sql = 'CALL laporan_rekapabsen_peratributnilai("'.Utils::convertDmy2Ymd($tanggalawal).'","'.Utils::convertDmy2Ymd($tanggalakhir).'")';
//            $stmt = $pdo->prepare($sql);
//            $stmt->execute();

            $where = '';
            if($atribut != ''){
//                $where = ' AND an.id IN :atribut';
                $where = ' AND an.id IN ('.Utils::atributNilai($atribut).')';
//                $where = ' AND an.id IN (:atribut)';
            }

//            $sql = 'SELECT
//                        an.nilai,
//                        IFNULL(x.total_pegawai,0) as total_pegawai,
//                        IFNULL(x.total_jadwal,0) as total_jadwal,
//                        IFNULL(x.total_masukkerja,0) as total_masukkerja,
//                        IFNULL(x.total_masukkerja_manual,0) as total_masukkerja_manual,
//                        IFNULL(x.total_masukkerja_mesin,0) as total_masukkerja_mesin,
//                        ROUND(IFNULL(x.persentase,0),2) as persentase,
//                        IFNULL(y.jumlah_seharusnya_masuk,0) as jumlah_seharusnya_masuk,
//                        IFNULL(y.jumlah_masuk_normal,0) as jumlah_masuk_normal,
//                        IFNULL(y.jumlah_masuk_terlambat,0) as jumlah_masuk_terlambat,
//                        IFNULL(y.jumlah_masuk_dispensasi,0) as jumlah_masuk_dispensasi
//                    FROM
//                        atributnilai an
//                        LEFT JOIN (
//                            SELECT
//                                pa.idatributnilai,
//                                COUNT(*) as total_pegawai,
//                                SUM(_t.total_jadwal) as total_jadwal,
//                                SUM(_t.total_masukkerja) as total_masukkerja,
//                                SUM(_t.total_masukkerja_manual) as total_masukkerja_manual,
//                                SUM(_t.total_masukkerja_mesin) as total_masukkerja_mesin,
//                                IF(SUM(_t.total_jadwal)=0, 0, SUM(_t.total_masukkerja)*100/SUM(_t.total_jadwal)) as persentase
//                            FROM
//                                pegawaiatribut pa,
//                                _temp_laporan_rekapabsen_peratributnilai _t
//                            WHERE
//                                _t.idpegawai=pa.idpegawai
//                            GROUP BY
//                                pa.idatributnilai
//                        ) x ON x.idatributnilai=an.id
//                        LEFT JOIN (
//                            SELECT
//                                pa.idatributnilai,
//                                SUM(IF(ra.jadwalmasukkerja="y",1,0)) as jumlah_seharusnya_masuk,
//                                SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk>=0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_normal,
//                                SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk<0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_terlambat,
//                                SUM(IF(ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d",1,0)) as jumlah_masuk_dispensasi
//                            FROM
//                                pegawaiatribut pa,
//                                rekapabsen ra
//                            WHERE
//                                pa.idpegawai = ra.idpegawai AND
//                                ra.tanggal BETWEEN "'.Utils::convertDmy2Ymd($tanggalawal).'" AND "'.Utils::convertDmy2Ymd($tanggalakhir).'"
//                            GROUP BY pa.idatributnilai
//                        )y ON an.id=y.idatributnilai
//                    WHERE
//                      1=1'.$where;

            $sql = 'SELECT
                        an.nilai,
                        count(*) as total_pegawai,
                        '.$sqlAlasanTidakMasuk_x.'
                        SUM(IFNULL(x.total_jadwal,0)) as total_jadwal,
                        SUM(IFNULL(x.total_masuk,0)) as total_masuk,
                        SUM(IFNULL(x.total_tidakmasuk,0)) as total_tidakmasuk,
                        SUM(IFNULL(x.total_masuk_terlambat,0)) as total_masuk_terlambat,
                        SUM(IFNULL(x.total_masuk_dispensasi,0)) as total_masuk_dispensasi,
                        SUM(IFNULL(x.total_masuk_normal,0)) as total_masuk_normal,
                        SUM(IFNULL(x.totalshift_jadwal,0)) as totalshift_jadwal,
                        SUM(IFNULL(x.total_tidakmasuk_ijin,0)) as total_tidakmasuk_ijin,
                        SUM(IFNULL(x.total_tidakmasuk_sakit,0)) as total_tidakmasuk_sakit,
                        SUM(IFNULL(x.total_tidakmasuk_alpha,0)) as total_tidakmasuk_alpha
                    FROM
                        atributnilai an,
                        pegawaiatribut pa,
                        pegawai p,
                        (
                            SELECT
                                ra.idpegawai,
                                IFNULL(SUM(ra.jumlahsesi),0) as totalshift_jadwal,
                                '.$sqlAlasanTidakMasuk.'
                                SUM(IF(ra.jadwalmasukkerja="y",1,0)) as total_jadwal,
                                SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y",1,0)) as total_masuk,
                                SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk<0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as total_masuk_terlambat,
                                SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t",1,0)) as total_tidakmasuk,
                                SUM(IF(ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d",1,0)) as total_masuk_dispensasi,
                                SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk>=0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as total_masuk_normal,
                                SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="i",1,0)) as total_tidakmasuk_ijin,
                                SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="s",1,0)) as total_tidakmasuk_sakit,
                                SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori="a"),1,0)) as total_tidakmasuk_alpha
                            FROM
                                rekapabsen ra
                                LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
                            WHERE
                                ra.tanggal BETWEEN :tanggalawal AND :tanggalakhir
                            GROUP BY
                                ra.idpegawai
                        ) x
                    WHERE
                        x.idpegawai=p.id AND
                        p.id=pa.idpegawai AND
                        an.id=pa.idatributnilai AND
                        p.status = "a" AND
                        p.del = "t"
                        '.$where.'
                        ' . $batasan . '
                    GROUP BY
                        an.id';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
            $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
//            if($atribut != ''){
//                $stmt->bindValue(':atribut', Utils::atributNilai($atribut));
//            }
//            if($batasan != ''){
//                $stmt->bindValue(':batasan', $batasan);
//            }
            $stmt->execute();
            $i = 5;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $totalhari = $row['total_masuk_normal'] + $row['total_masuk_terlambat'] + $row['total_masuk_dispensasi'];
                $totaltidakmasuk = $row['total_tidakmasuk_ijin'] + $row['total_tidakmasuk_sakit'] + $row['total_tidakmasuk_alpha'];
                for($l=0;$l<$totalalasantidakmasuk;$l++) {
                    $totaltidakmasuk = $row['total_tidakmasuk_ijin'] + $row['total_tidakmasuk_sakit'] + $row['total_tidakmasuk_alpha'] + $row['catatan_'.$l];
                }
                $persentase = $totalhari + $totaltidakmasuk != 0 ? round($totalhari / ($totalhari + $totaltidakmasuk),4) : 0;

                $h = 6; // karena dari F
                for($l=0;$l<$totalalasantidakmasuk;$l++) {
                    $ah = Utils::angkaToHuruf($h);
                    $objPHPExcel->getActiveSheet()->setCellValue($ah . $i, $row['catatan_'.$l]);
                    $objPHPExcel->getActiveSheet()->getStyle($ah . $i)->applyFromArray($styleArray);
                    $h++;
                }

                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nilai']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['total_pegawai']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['totalshift_jadwal']);
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $totalhari);
                $objPHPExcel->getActiveSheet()->setCellValue($ahh1 . $i, $totaltidakmasuk);
                $objPHPExcel->getActiveSheet()->setCellValue($ahh2 . $i, $totalhari + $totaltidakmasuk);
                $objPHPExcel->getActiveSheet()->setCellValue($ahh3 . $i, $persentase);
                $objPHPExcel->getActiveSheet()->setCellValue($ahh4 . $i, $row['total_masuk_terlambat']);
                $objPHPExcel->getActiveSheet()->setCellValue($ahh5 . $i, $row['total_masuk_terlambat'] != 0 ? round($row['total_masuk_terlambat'] / ($totalhari + $totaltidakmasuk),4) : 0);

                $objPHPExcel->getActiveSheet()->getStyle($ahh3 . $i)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);
                $objPHPExcel->getActiveSheet()->getStyle($ahh5 . $i)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('D' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('E' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($ahh1 . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($ahh2 . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($ahh3 . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($ahh4 . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($ahh5 . $i)->applyFromArray($styleArray);

                $objPHPExcel->getActiveSheet()->getColumnDimension($ahh1)->setWidth(25);
                $objPHPExcel->getActiveSheet()->getColumnDimension($ahh2)->setWidth(25);
                $objPHPExcel->getActiveSheet()->getColumnDimension($ahh3)->setWidth(25);
                $objPHPExcel->getActiveSheet()->getColumnDimension($ahh4)->setWidth(25);
                $objPHPExcel->getActiveSheet()->getColumnDimension($ahh5)->setWidth(25);

                $i++;
            }

            $arrWidth = array('', '', 35, 25, 25, 25, 25);
            for ($j = 2; $j <= 5; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            Utils::passwordExcel($objPHPExcel);

            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $dirsummaryrekap = '../storage/'.trans('all.summaryrekap').'.xlsx';
            // $writer->save('php://output');
            $writer->save($dirsummaryrekap);
            // end file summaryrekap

            //file rekapitulasi gabungan peratribut
            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }
            // looping atribut nilai berdasarkan parameter atribut, jika parameter atribut tidak ada isi, maka looping dari semua atributnilai
            $whereAtributNilai = '';
            if($atribut != ''){
                $whereAtributNilai = ' id IN('.Utils::atributNilai($atribut).')';
            }
            $dataatributnilai = Utils::getData($pdo,'atributnilai','id,nilai',$whereAtributNilai,'urutan');
            foreach ($dataatributnilai as $key){
                $objPHPExcel = new PHPExcel();
                Utils::setPropertiesExcel($objPHPExcel,$key->nilai);

                //select atrbut variable
                $sql = 'SELECT id, md5(CONCAT(atribut,"_atributvariable",id)) as nama,atribut FROM atributvariable WHERE penting = "y" ORDER BY atribut';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $totalatributvariable = $stmt->rowCount();

                $i = 4;
                $a = 0;
                $arratirbutvariable = array();
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $hh = Utils::angkaToHuruf($i);
                    $arratirbutvariableheader[$a] = $row['atribut'];
                    $arratirbutvariable[$a] = $row['nama'];

                    //lebar kolom
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                    $i++;
                    $a++;
                }

                //select atrbut penting
                $sql = 'SELECT id, md5(CONCAT(atribut,"_atributpenting",id)) as nama,atribut FROM atribut WHERE penting="y" ORDER BY atribut';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $totalatributpenting = $stmt->rowCount();

                $a = 0;
                $arratirbutpenting = array();
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $hh = Utils::angkaToHuruf($i);
                    $arratirbutpentingheader[$a] = $row['atribut'];
                    $arratirbutpenting[$a] = $row['nama'];

                    //lebar kolom
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                    $i++;
                    $a++;
                }

                //get atributvariable query
                $atributvariable = Utils::getAtributVariableQuery('p.id');

                //get atributpenting query
                $atributpenting = Utils::getAtributPentingQuery('p.id');

                //baris(row)
                $r = $b + 1;
                $r2 = $b + 3;
                $r3 = $b + 4;
                $r4 = $b + 5;
                $r5 = $b + 6;

                $ii = $i; //bantuan untuk h1 dll di jamkerja shift
                //huruf setelah atribut penting
                $h1 = Utils::angkaToHuruf($i);
                $h2 = Utils::angkaToHuruf($i + 1);
                $h3 = Utils::angkaToHuruf($i + 2);
                $h4 = Utils::angkaToHuruf($i + 3);
                $h5 = Utils::angkaToHuruf($i + 4);
                $h6 = Utils::angkaToHuruf($i + 5);
                $h7 = Utils::angkaToHuruf($i + 6);
                $h8 = Utils::angkaToHuruf($i + 7);
                $h9 = Utils::angkaToHuruf($i + 8);
                $h10 = Utils::angkaToHuruf($i + 9);

                // ambil dahulu alasan tidak masuk nya
                $sql = 'SELECT id, alasan FROM alasantidakmasuk WHERE digunakan="y" ORDER BY urutan';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $arrAlasanTidakMasuk = $stmt->fetchAll(PDO::FETCH_ASSOC);
                $totalalasantidakmasuk = $stmt->rowCount();
                $sqlAlasanTidakMasuk = '';
                $hatm = Utils::angkaToHuruf($i + 10);
                $a_atm = $i + 10;
                $hatm2 = $hatm;
                for($l=0;$l<$totalalasantidakmasuk;$l++) {
                    $hatm = Utils::angkaToHuruf($i + 10 + $l);
//                $objPHPExcel->getActiveSheet()->setCellValue($hatm . $r4, $arrAlasanTidakMasuk[$l]['alasan']);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->applyFromArray($styleArray);
//                $objPHPExcel->getActiveSheet()->getColumnDimension($hatm)->setWidth(15);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                    $sqlAlasanTidakMasuk = $sqlAlasanTidakMasuk. 'SUM(IF(ra.jadwalmasukkerja="y" AND ra.idalasantidakmasuk='.$arrAlasanTidakMasuk[$l]['id'].',1,0)) as catatan_'.$l.', ';
                }
//            if($totalalasantidakmasuk > 0){
//                $objPHPExcel->getActiveSheet()->mergeCells($hatm2 . $r3 . ':' . $hatm . $r3);
//                $objPHPExcel->getActiveSheet()->setCellValue($hatm2 . $r3, trans('all.tidakmasuk').' ('.trans('all.alasan').') a');
//                $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
//            }

                $h11 = Utils::angkaToHuruf($i + 10 + $totalalasantidakmasuk);
                $h12 = Utils::angkaToHuruf($i + 11 + $totalalasantidakmasuk);
                $h13 = Utils::angkaToHuruf($i + 12 + $totalalasantidakmasuk);
                $h14 = Utils::angkaToHuruf($i + 13 + $totalalasantidakmasuk);
                $h15 = Utils::angkaToHuruf($i + 14 + $totalalasantidakmasuk);
                $h16 = Utils::angkaToHuruf($i + 15 + $totalalasantidakmasuk);
                $h17 = Utils::angkaToHuruf($i + 16 + $totalalasantidakmasuk);
                $h18 = Utils::angkaToHuruf($i + 17 + $totalalasantidakmasuk);
                $h19 = Utils::angkaToHuruf($i + 18 + $totalalasantidakmasuk);
                $h20 = Utils::angkaToHuruf($i + 19 + $totalalasantidakmasuk);
                $h21 = Utils::angkaToHuruf($i + 20 + $totalalasantidakmasuk);
                $h22 = Utils::angkaToHuruf($i + 21 + $totalalasantidakmasuk);

                $whereJamkerja = '';
                $shift_whereJamkerja = '';
                if($jamkerjafull != ''){
                    $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                    $whereJamkerja .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
                    $shift_whereJamkerja .= ' AND rs.idpegawai IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
                }

                $where = '';
                $shift_where = '';
                if(Session::has('laprekapabsen_tanggal')){
                    $tahun = Session::get('lapkehadiran_tahun');
                    $bulan = Session::get('lapkehadiran_bulan');
                    $tanggal = Session::get('lapkehadiran_tanggal');
                    $wherePeriode = '';
                    if ($tanggal != ''){
                        for($i=0;$i<count($tanggal);$i++) {
                            $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                        }
                        if (strlen($wherePeriode)>0) {
                            $where .= ' AND ra.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                            $shift_where .= ' AND rs.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                        }
                    }
                    else {
                        $where .= ' AND year(ra.tanggal)="'.$tahun.'" AND month(ra.tanggal)="'.$bulan.'"';
                        $shift_where .= ' AND year(rs.tanggal)="'.$tahun.'" AND month(rs.tanggal)="'.$bulan.'"';
                    }
                }else{
                    $where = ' AND ra.tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y")';
                    $shift_where = ' AND rs.tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y")';
                }

                $querysql = 'p.pin as pin,';
//                if(Session::get('conf_webperusahaan') == '12009'){ // virtus local
                if(Session::get('conf_webperusahaan') == '12035'){ // virtus online
                    $querysql = 'getatributvariablepegawai(p.id, 8) as pin,';
                }

                $sql = 'SELECT
                            p.nama as nama,
                            ' . $querysql . '
                            ' . $atributvariable . '
                            ' . $atributpenting . '
                            SUM(IF(ra.jadwalmasukkerja="y",1,0)) as jumlah_seharusnya_masuk,
                            SUM(IF(ra.jadwalmasukkerja="y",ra.jadwallamakerja,0)) as waktu_seharusnya_masuk,
                            SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d" AND ISNULL(atm.hitunguangmakan)=false AND atm.hitunguangmakan="y",1,0)) as alasantidakmasuk_hitunguangmakan,
                            SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y",1,0)) as jumlah_masuk_sesuai_jadwal,
                            SUM(IF(ra.jadwalmasukkerja="t" AND ra.masukkerja="y",1,0)) as jumlah_masuk_tidak_sesuai_jadwal,
                            SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk>=0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_normal,
                            SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk<0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_terlambat,
                            SUM(IF(ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d",1,0)) as jumlah_masuk_dispensasi,
                            SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="i",1,0)) as jumlah_tidakmasuk_ijin,
                            SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="s",1,0)) as jumlah_tidakmasuk_sakit,
                            SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori="a"),1,0)) as jumlah_tidakmasuk_alpha,
                            '.$sqlAlasanTidakMasuk.'
                            SUM(ra.lamakerja) as waktu_lamakerja_dlm_detik,
                            ROUND(SUM(ra.lamakerja)/60,1) as waktu_lamakerja,
                            SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,1,0)) as jumlah_datangawal,
                            ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,ra.selisihmasuk,0))/60,1) as waktu_datangawal,
                            SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,1,0)) as jumlah_terlambat,
                            ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,-1*ra.selisihmasuk,0))/60,1) as waktu_terlambat,
                            SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,1,0)) as jumlah_pulangawal,
                            ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,-1*ra.selisihkeluar,0))/60,1) as waktu_pulangawal,
                            SUM(IF(ra.lamalembur>0,1,0)) as jumlah_lembur,
                            ROUND(SUM(ra.lamalembur)/60,1) as waktu_lembur,
                            "" as kelengkapanpresensi
                        FROM
                            pegawai p,
                            rekapabsen ra
                            LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
                        WHERE
                            p.id=ra.idpegawai AND
                            ra.jenisjamkerja="full" AND
                            p.status = "a" AND
                            p.del = "t" AND
                            p.id IN (SELECT idpegawai FROM pegawaiatribut WHERE idatributnilai = :idatributnilai)
                            ' . $where . '
                            ' . $batasan . '
                            ' . $whereJamkerja . '
                        GROUP BY
                            p.id
                        ORDER BY
                            p.nama ASC';
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':idatributnilai', $key->id);
                $stmt->execute();

                $fulladadata = false;

                if ($stmt->rowCount() > 0) {
                    $fulladadata = true;

                    // set value kolom
                    $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('B' . $r, trans('all.laporankerjafulltime'))
                                ->setCellValue('B' . $r2, trans('all.nama'))
                                ->setCellValue('C' . $r2, trans('all.pin'))
                                ->setCellValue($h1 . $r2, trans('all.jumlahkehadiran') . '(' . trans('all.kali') . ')')
                                ->setCellValue($h12 . $r2, trans('all.waktukehadiran') . '(' . trans('all.menit') . ')')
                                ->setCellValue($h1 . $r3, trans('all.masuk'))
                                ->setCellValue($h1 . $r4, trans('all.normal'))
                                ->setCellValue($h2 . $r4, trans('all.terlambat'))
                                ->setCellValue($h3 . $r4, trans('all.dispensasi'))
                                ->setCellValue($h4 . $r3, trans('all.totalmasuk'))
                                ->setCellValue($h4 . $r4, trans('all.sesuaijadwal'))
                                ->setCellValue($h5 . $r4, trans('all.tidaksesuaijadwal'))
                                ->setCellValue($h6 . $r4, trans('all.total'))
                                ->setCellValue($h7 . $r4, trans('all.prosentase')) //tambahan baru
                                ->setCellValue($h8 . $r3, trans('all.tidakmasuk').' ('.trans('all.kategori').')')
                                ->setCellValue($h8 . $r4, trans('all.ijin'))
                                ->setCellValue($h9 . $r4, trans('all.sakit'))
                                ->setCellValue($h10 . $r4, trans('all.alpha'))
                                ->setCellValue($h11 . $r3, trans('all.totaltidakmasuk'))
                                ->setCellValue($h12 . $r3, trans('all.jamkerja'))
                                ->setCellValue($h12 . $r4, trans('all.total'))
                                ->setCellValue($h13 . $r4, trans('all.prosentase'))
                                ->setCellValue($h14 . $r3, trans('all.datangawal'))
                                ->setCellValue($h16 . $r3, trans('all.terlambat'))
                                ->setCellValue($h18 . $r3, trans('all.pulangawal'))
                                ->setCellValue($h20 . $r3, trans('all.lembur'))
                                ->setCellValue($h14 . $r4, trans('all.jumlah'))
                                ->setCellValue($h15 . $r4, trans('all.durasi'))
                                ->setCellValue($h16 . $r4, trans('all.jumlah'))
                                ->setCellValue($h17 . $r4, trans('all.durasi'))
                                ->setCellValue($h18 . $r4, trans('all.jumlah'))
                                ->setCellValue($h19 . $r4, trans('all.durasi'))
                                ->setCellValue($h20 . $r4, trans('all.jumlah'))
                                ->setCellValue($h21 . $r4, trans('all.durasi'))
                                ->setCellValue($h22 . $r2, trans('all.jumlahuangmakan'));

                    //style atributvariable
                    $z = 4; //karena dari d
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                        //header
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutvariableheader[$j]);
                        $z++;
                    }

                    for($l=0;$l<$totalalasantidakmasuk;$l++) {
                        $hatm = Utils::angkaToHuruf($i + 10 + $l);
                        $objPHPExcel->getActiveSheet()->setCellValue($hatm . $r4, $arrAlasanTidakMasuk[$l]['alasan']);
                        $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hatm)->setWidth(15);
                        $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    }
                    if($totalalasantidakmasuk > 0){
                        $objPHPExcel->getActiveSheet()->mergeCells($hatm2 . $r3 . ':' . $hatm . $r3);
                        $objPHPExcel->getActiveSheet()->setCellValue($hatm2 . $r3, trans('all.tidakmasuk').' ('.trans('all.alasan').')');
                        $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    }

                    //style atributpenting
                    for ($j = 0; $j < $totalatributpenting; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                        //header
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutpentingheader[$j]);
                        $z++;
                    }

                    $objPHPExcel->getActiveSheet()->mergeCells('B' . $r2 . ':B' . $r4);
                    $objPHPExcel->getActiveSheet()->mergeCells('C' . $r2 . ':C' . $r4);
                    $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r2 . ':' . $hatm . $r2);
                    $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r3 . ':' . $h3 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h4 . $r3 . ':' . $h7 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h8 . $r3 . ':' . $h10 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h11 . $r3 . ':' . $h11 . $r4);
                    $objPHPExcel->getActiveSheet()->mergeCells($h12 . $r3 . ':' . $h13 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h14 . $r3 . ':' . $h15 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h16 . $r3 . ':' . $h17 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h18 . $r3 . ':' . $h19 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h20 . $r3 . ':' . $h21 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h12 . $r2 . ':' . $h21 . $r2);
                    $objPHPExcel->getActiveSheet()->mergeCells($h22 . $r2 . ':' . $h22 . $r4);

                    $objPHPExcel->getActiveSheet()->getStyle('B' . $r2 . ':B' . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle('C' . $r2 . ':C' . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2 . ':' . $hatm . $r2)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3 . ':' . $h3 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3 . ':' . $h6 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3 . ':' . $hatm . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2 . ':' . $h21 . $r2)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3 . ':' . $h11 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3 . ':' . $h13 . $r3)->applyFromArray($styleArray);

                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3 . ':' . $h15 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3 . ':' . $h17 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3 . ':' . $h19 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h20 . $r3 . ':' . $h21 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h22 . $r2 . ':' . $h22 . $r4)->applyFromArray($styleArray);

//                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->applyFromArray($styleArray);

                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h19 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h20 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h21 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h22 . $r4)->applyFromArray($styleArray);

                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r5)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r5)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h15 . $r5)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r5)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h17 . $r5)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h18 . $r5)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h19 . $r5)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h20 . $r5)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h21 . $r5)->applyFromArray($styleArray);

                    for ($j = 2; $j <= 20 + $totalatributvariable + $totalatributpenting; $j++) {
                        $huruf = Utils::angkaToHuruf($j);
                        $objPHPExcel->getActiveSheet()->getStyle($huruf . $r5)->applyFromArray($styleArray);
                    }

                    $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h20 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h20 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h19 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h20 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h21 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h22 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                    $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(40);
                    $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(12);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(14);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h4)->setWidth(14);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h5)->setWidth(17);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(8);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(10);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(10);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h9)->setWidth(10);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h10)->setWidth(10);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h11)->setWidth(12);
//                $objPHPExcel->getActiveSheet()->getColumnDimension($h22)->setWidth(20);

                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setWrapText(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setWrapText(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h22 . $r2)->getAlignment()->setWrapText(true);

                    $objPHPExcel->getActiveSheet()->getStyle('B' . $r)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle('C' . $r)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r4)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getFont()->setBold(true);

                    $i = $b + 6;
                    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

                        //catatan tidak masuk
                        $totaltidakmasuk = $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha'];
                        for($l=0;$l<$totalalasantidakmasuk;$l++) {
                            $hatmv = Utils::angkaToHuruf($a_atm+$l);
                            $objPHPExcel->getActiveSheet()->setCellValue($hatmv . $i, $row['catatan_'.$l]);
                            $totaltidakmasuk = $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha'] + $row['catatan_'.$l];
                        }

                        $persentase_jumlah_masuk = 0;
                        if ($row['jumlah_seharusnya_masuk']>0) {
                            $persentase_jumlah_masuk = round(($row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi'])/$row['jumlah_seharusnya_masuk'],4);
                        }
                        $persentase_waktu_masuk = 0;
                        if ($row['waktu_seharusnya_masuk']>0) {
                            $persentase_waktu_masuk = round($row['waktu_lamakerja_dlm_detik']/$row['waktu_seharusnya_masuk'],4);
                        }
                        $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                        $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pin']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['jumlah_masuk_normal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['jumlah_masuk_terlambat']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['jumlah_masuk_dispensasi']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['jumlah_masuk_sesuai_jadwal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $row['jumlah_masuk_tidak_sesuai_jadwal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $persentase_jumlah_masuk);
                        $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['jumlah_tidakmasuk_ijin']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h9 . $i, $row['jumlah_tidakmasuk_sakit']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h10 . $i, $row['jumlah_tidakmasuk_alpha']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h11 . $i, $totaltidakmasuk);
                        $objPHPExcel->getActiveSheet()->setCellValue($h12 . $i, $row['waktu_lamakerja']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h13 . $i, $persentase_waktu_masuk);
                        $objPHPExcel->getActiveSheet()->setCellValue($h14 . $i, $row['jumlah_datangawal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h15 . $i, $row['waktu_datangawal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h16 . $i, $row['jumlah_terlambat']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h17 . $i, $row['waktu_terlambat']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h18 . $i, $row['jumlah_pulangawal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h19 . $i, $row['waktu_pulangawal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h20 . $i, $row['jumlah_lembur']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h21 . $i, $row['waktu_lembur']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h22 . $i, $row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['alasantidakmasuk_hitunguangmakan']);

                        $objPHPExcel->getActiveSheet()->getStyle($h7 . $i)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);
                        $objPHPExcel->getActiveSheet()->getStyle($h13 . $i)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);

                        //atributvariable
                        $z = 4;
                        $a = 0;
                        for ($j = 0; $j < $totalatributvariable; $j++) {
                            $hh = Utils::angkaToHuruf($z);
                            //$objPHPExcel->getActiveSheet()->setCellValue($hh.$i, $row[$arratirbutvariable[$a]]);
                            $objPHPExcel->getActiveSheet()->setCellValueExplicit($hh . $i, $row[$arratirbutvariable[$a]], PHPExcel_Cell_DataType::TYPE_STRING);

                            $z++;
                            $a++;
                        }

                        //atributpenting
                        $a = 0;
                        for ($j = 0; $j < $totalatributpenting; $j++) {
                            $hh = Utils::angkaToHuruf($z);
                            $objPHPExcel->getActiveSheet()->setCellValue($hh . $i, $row[$arratirbutpenting[$a]]);

                            $z++;
                            $a++;
                        }

                        $objPHPExcel->getActiveSheet()->getStyle($h4 . $i)->getFont()->setBold(true);
                        $objPHPExcel->getActiveSheet()->getStyle($h6 . $i)->getFont()->setBold(true);
                        $objPHPExcel->getActiveSheet()->getStyle($h10 . $i)->getFont()->setBold(true);

                        for ($o = 2; $o < 32 + $totalatributvariable + $totalatributpenting; $o++) {
                            $abjad = Utils::angkaToHuruf($o);
                            $objPHPExcel->getActiveSheet()->getStyle($abjad . $i)->applyFromArray($styleArray);
                        }

                        $i++;
                    }
                }

                //jamkerja shift
                $whereJamkerjaShift = '';
                $shift_whereJamkerjaShift = '';
                if($jamkerjashift != ''){
                    $jamkerjashiftdetail = Utils::jamKerja($jamkerjashift);
                    $whereJamkerjaShift .= ' AND p.id IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y") AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
                    $shift_whereJamkerjaShift .= ' AND rs.idpegawai IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y") AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
                }

                if ($fulladadata == true) {
                    $r = $i + 2;
                    $r2 = $r + 3; // 3
                    $r3 = $r + 4; // 4
                    $r4 = $r + 5; // 5
                    $r5 = $r + 6; // 6
                } else {
                    $r = $b + 1;
                    $r2 = $b + 3;
                    $r3 = $b + 4;
                    $r4 = $b + 5;
                    $r5 = $b + 6;
                }

                //huruf setelah atribut penting
                $h1 = Utils::angkaToHuruf($ii);
                $h2 = Utils::angkaToHuruf($ii + 1);
                $h3 = Utils::angkaToHuruf($ii + 2);
                $h4 = Utils::angkaToHuruf($ii + 3);
                $h5 = Utils::angkaToHuruf($ii + 4);
                $h6 = Utils::angkaToHuruf($ii + 5);
                $h7 = Utils::angkaToHuruf($ii + 6);
                $h8 = Utils::angkaToHuruf($ii + 7);
                $h9 = Utils::angkaToHuruf($ii + 8);
                $h10 = Utils::angkaToHuruf($ii + 9);
                $hatm = Utils::angkaToHuruf($ii + 10 );
                $a_atm = $ii + 10;
                $hatm2 = $hatm;
                $h11 = Utils::angkaToHuruf($ii + 10 + $totalalasantidakmasuk);
                $h12 = Utils::angkaToHuruf($ii + 11 + $totalalasantidakmasuk);
                $h13 = Utils::angkaToHuruf($ii + 12 + $totalalasantidakmasuk);
                $h14 = Utils::angkaToHuruf($ii + 13 + $totalalasantidakmasuk);
                $h15 = Utils::angkaToHuruf($ii + 14 + $totalalasantidakmasuk);
                $h16 = Utils::angkaToHuruf($ii + 15 + $totalalasantidakmasuk);
                $h17 = Utils::angkaToHuruf($ii + 16 + $totalalasantidakmasuk);
                $h18 = Utils::angkaToHuruf($ii + 17 + $totalalasantidakmasuk);
                $h19 = Utils::angkaToHuruf($ii + 18 + $totalalasantidakmasuk);
                $h20 = Utils::angkaToHuruf($ii + 19 + $totalalasantidakmasuk);
                $h21 = Utils::angkaToHuruf($ii + 20 + $totalalasantidakmasuk);
                $h22 = Utils::angkaToHuruf($ii + 21 + $totalalasantidakmasuk);
                $h23 = Utils::angkaToHuruf($ii + 22 + $totalalasantidakmasuk);

                // jamkerjashift
                $sql = 'SELECT
                        p.nama as nama,
                        ' . $querysql . '
                        ' . $atributvariable . '
                        ' . $atributpenting . '
                        SUM(IF(ra.jadwalmasukkerja="y",1,0)) as jumlah_seharusnya_masuk,
                        SUM(IF(ra.jadwalmasukkerja="y",ra.jadwallamakerja,0)) as waktu_seharusnya_masuk,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d" AND ISNULL(atm.hitunguangmakan)=false AND atm.hitunguangmakan="t",1,0)) as alasantidakmasuk_hitunguangmakan,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk>=0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_normal,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk<0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_terlambat,
                        SUM(IF(ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d",1,0)) as jumlah_masuk_dispensasi,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="i",1,0)) as jumlah_tidakmasuk_ijin,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="s",1,0)) as jumlah_tidakmasuk_sakit,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori="a"),1,0)) as jumlah_tidakmasuk_alpha,
                        '.$sqlAlasanTidakMasuk.'
                        SUM(ra.lamakerja) as waktu_lamakerja_dlm_detik,
                        ROUND(SUM(ra.lamakerja)/60,1) as waktu_lamakerja,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,1,0)) as jumlah_datangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,ra.selisihmasuk,0))/60,1) as waktu_datangawal,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,1,0)) as jumlah_terlambat,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,-1*ra.selisihmasuk,0))/60,1) as waktu_terlambat,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,1,0)) as jumlah_pulangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,-1*ra.selisihkeluar,0))/60,1) as waktu_pulangawal,
                        SUM(IF(ra.lamalembur>0,1,0)) as jumlah_lembur,
                        ROUND(SUM(ra.lamalembur)/60,1) as waktu_lembur,
                        IFNULL(SUM(ra.jumlahsesi),0) as totalshift_jadwal,
                        IFNULL(SUM(rs.jumlah_tidakmasuk),0) as totalshift_tidakmasuk,
                        IFNULL(SUM(rs.jumlah_masuk),0) as totalshift_masuk
                    FROM
                        pegawai p,
                        rekapabsen ra
                        LEFT JOIN (
                            SELECT
                                rs.idpegawai,
                                rs.tanggal,
                                IFNULL(SUM(IF(rs.masukkerja="y",1,0)),0) as jumlah_masuk,
                                IFNULL(SUM(IF(rs.masukkerja="t",1,0)),0) as jumlah_tidakmasuk
                            FROM
                                rekapshift rs
                            WHERE
                                1=1 AND
                                rs.idpegawai IN (SELECT idpegawai FROM pegawaiatribut WHERE idatributnilai = :idatributnilai1)
                                ' . $shift_where . '
                                ' . $shift_batasan . '
                                ' . $shift_whereJamkerjaShift . '
                            GROUP BY
                                rs.idpegawai,
                                rs.tanggal
                        ) rs ON ra.tanggal=rs.tanggal AND rs.idpegawai=ra.idpegawai
                        LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
                    WHERE
                        p.id=ra.idpegawai AND
                        p.status = "a" AND
                        p.del = "t" AND
                        ra.jenisjamkerja="shift" AND
                        p.id IN (SELECT idpegawai FROM pegawaiatribut WHERE idatributnilai = :idatributnilai2)
                        ' . $where . '
                        ' . $batasan . '
                        ' . $whereJamkerjaShift . '
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama ASC';
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':idatributnilai1', $key->id);
                $stmt->bindValue(':idatributnilai2', $key->id);
                $stmt->execute();
                if ($stmt->rowCount() > 0) {

                    // set value kolom
                    $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('B' . $r, trans('all.laporankerjashifttime'))
                                ->setCellValue('B' . $r2, trans('all.nama'))
                                ->setCellValue('C' . $r2, trans('all.pin'))
                                ->setCellValue($h1 . $r2, trans('all.jumlahkehadiran') . '(' . trans('all.kali') . ')')
                                ->setCellValue($h13 . $r2, trans('all.waktukehadiran') . '(' . trans('all.menit') . ')')
                                ->setCellValue($h1 . $r3, trans('all.masuk'))
                                ->setCellValue($h1 . $r4, trans('all.normal'))
                                ->setCellValue($h2 . $r4, trans('all.terlambat'))
                                ->setCellValue($h3 . $r4, trans('all.dispensasi'))
                                ->setCellValue($h4 . $r3, trans('all.totalhari'))
                                ->setCellValue($h5 . $r3, trans('all.prosentase'))
                                ->setCellValue($h6 . $r3, trans('all.totaljadwalshift'))
                                ->setCellValue($h7 . $r3, trans('all.totalmasukshift'))
                                ->setCellValue($h8 . $r3, trans('all.tidakmasuk').' ('.trans('all.kategori').')')
                                ->setCellValue($h8 . $r4, trans('all.ijin'))
                                ->setCellValue($h9 . $r4, trans('all.sakit'))
                                ->setCellValue($h10 . $r4, trans('all.alpha'))
                                ->setCellValue($h11 . $r3, trans('all.totaltidakmasuk').' ('.trans('all.hari').')')
                                ->setCellValue($h12 . $r3, trans('all.totaltidakmasukshift'))
                                ->setCellValue($h13 . $r3, trans('all.jamkerja'))
                                ->setCellValue($h13 . $r4, trans('all.total'))
                                ->setCellValue($h14 . $r4, trans('all.prosentase'))
                                ->setCellValue($h15 . $r3, trans('all.datangawal'))
                                ->setCellValue($h17 . $r3, trans('all.terlambat'))
                                ->setCellValue($h19 . $r3, trans('all.pulangawal'))
                                ->setCellValue($h21 . $r3, trans('all.lembur'))
                                ->setCellValue($h15 . $r4, trans('all.jumlah'))
                                ->setCellValue($h16 . $r4, trans('all.durasi'))
                                ->setCellValue($h17 . $r4, trans('all.jumlah'))
                                ->setCellValue($h18 . $r4, trans('all.durasi'))
                                ->setCellValue($h19 . $r4, trans('all.jumlah'))
                                ->setCellValue($h20 . $r4, trans('all.durasi'))
                                ->setCellValue($h21 . $r4, trans('all.jumlah'))
                                ->setCellValue($h22 . $r4, trans('all.durasi'))
                                ->setCellValue($h23 . $r2, trans('all.jumlahuangmakan'));

                    $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(14);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(14);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h11)->setWidth(14);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h12)->setWidth(14);

                    //style atributvariable
                    $z = 4; //karena dari d
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                        //header
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutvariableheader[$j]);
                        $z++;
                    }

                    for($l=0;$l<$totalalasantidakmasuk;$l++) {
                        $hatm = Utils::angkaToHuruf($ii + 10 + $l);
                        $objPHPExcel->getActiveSheet()->setCellValue($hatm . $r4, $arrAlasanTidakMasuk[$l]['alasan']);
                        $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    }
                    if($totalalasantidakmasuk > 0){
                        $objPHPExcel->getActiveSheet()->mergeCells($hatm2 . $r3 . ':' . $hatm . $r3);
                        $objPHPExcel->getActiveSheet()->setCellValue($hatm2 . $r3, trans('all.tidakmasuk').' ('.trans('all.alasan').')');
                        $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    }

                    //style atributvariable
                    for ($j = 0; $j < $totalatributpenting; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                        //header
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutpentingheader[$j]);
                        $z++;
                    }

                    $objPHPExcel->getActiveSheet()->mergeCells('B' . $r2 . ':B' . $r4);
                    $objPHPExcel->getActiveSheet()->mergeCells('C' . $r2 . ':C' . $r4);
                    $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r2 . ':' . $hatm . $r2);
                    $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r3 . ':' . $h3 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h4 . $r3 . ':' . $h4 . $r4);
                    $objPHPExcel->getActiveSheet()->mergeCells($h5 . $r3 . ':' . $h5 . $r4);
                    $objPHPExcel->getActiveSheet()->mergeCells($h6 . $r3 . ':' . $h6 . $r4);
                    $objPHPExcel->getActiveSheet()->mergeCells($h7 . $r3 . ':' . $h7 . $r4);
                    $objPHPExcel->getActiveSheet()->mergeCells($h8 . $r3 . ':' . $h10 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($hatm2 . $r3 . ':' . $hatm . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h11 . $r3 . ':' . $h11 . $r4);
                    $objPHPExcel->getActiveSheet()->mergeCells($h12 . $r3 . ':' . $h12 . $r4);//baru
                    $objPHPExcel->getActiveSheet()->mergeCells($h13 . $r3 . ':' . $h14 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h15 . $r3 . ':' . $h16 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h17 . $r3 . ':' . $h18 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h19 . $r3 . ':' . $h20 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h21 . $r3 . ':' . $h22 . $r3);
                    $objPHPExcel->getActiveSheet()->mergeCells($h13 . $r2 . ':' . $h22 . $r2);
                    $objPHPExcel->getActiveSheet()->mergeCells($h23 . $r2 . ':' . $h23 . $r4);

                    $objPHPExcel->getActiveSheet()->getStyle('B' . $r2 . ':B' . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle('C' . $r2 . ':C' . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2 . ':' . $hatm . $r2)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3 . ':' . $h3 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3 . ':' . $h4 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3 . ':' . $h5 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3 . ':' . $h6 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3 . ':' . $h7 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3 . ':' . $hatm . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2 . ':' . $h21 . $r2)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3 . ':' . $h11 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3 . ':' . $h12 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3 . ':' . $h12 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3 . ':' . $h13 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3 . ':' . $h14 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3 . ':' . $h15 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3 . ':' . $h16 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3 . ':' . $h17 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3 . ':' . $h18 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h19 . $r3 . ':' . $h19 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h20 . $r3 . ':' . $h20 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h21 . $r3 . ':' . $h21 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h22 . $r3 . ':' . $h22 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h22 . $r2 . ':' . $h22 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h23 . $r2 . ':' . $h23 . $r4)->applyFromArray($styleArray);

                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h19 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h20 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h21 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h22 . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($h23 . $r4)->applyFromArray($styleArray);

                    for ($j = 2; $j <= 26 + $totalatributvariable + $totalatributpenting; $j++) {
                        $huruf = Utils::angkaToHuruf($j);
                        $objPHPExcel->getActiveSheet()->getStyle($huruf . $r5)->applyFromArray($styleArray);
                    }

                    $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h19 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h21 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h19 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h20 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h21 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h22 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($h23 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                    $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(40);
                    $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(12);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(14);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(10);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h9)->setWidth(10);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h10)->setWidth(10);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($h11)->setWidth(12);

                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setWrapText(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getAlignment()->setWrapText(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setWrapText(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setWrapText(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setWrapText(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h23 . $r2)->getAlignment()->setWrapText(true);

                    $objPHPExcel->getActiveSheet()->getStyle('B' . $r)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle('C' . $r)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getFont()->setBold(true);

                    if ($fulladadata == true) {
                        $i = 6 + $r;
                    } else {
                        $i = $b + 6;
                    }
                    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

                        //catatan tidak masuk
                        $totaltidakmasuk = $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha'];
                        for($l=0;$l<$totalalasantidakmasuk;$l++) {
                            $hatmv = Utils::angkaToHuruf($a_atm+$l);
                            $objPHPExcel->getActiveSheet()->setCellValue($hatmv . $i, $row['catatan_'.$l]);
                            $totaltidakmasuk = $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha'] + $row['catatan_'.$l];
                        }

                        $persentase_jumlah_masuk = 0;
                        if ($row['jumlah_seharusnya_masuk']>0) {
                            $persentase_jumlah_masuk = round(($row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi'])/$row['jumlah_seharusnya_masuk'],4);
                        }

                        $persentase_waktu_masuk = 0;
                        if ($row['waktu_seharusnya_masuk']>0) {
                            $persentase_waktu_masuk = round($row['waktu_lamakerja_dlm_detik']/$row['waktu_seharusnya_masuk'],4);
                        }

                        $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                        $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pin']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['jumlah_masuk_normal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['jumlah_masuk_terlambat']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['jumlah_masuk_dispensasi']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $persentase_jumlah_masuk);
                        $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['totalshift_jadwal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $row['totalshift_masuk']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['jumlah_tidakmasuk_ijin']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h9 . $i, $row['jumlah_tidakmasuk_sakit']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h10 . $i, $row['jumlah_tidakmasuk_alpha']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h11 . $i, $totaltidakmasuk);
                        $objPHPExcel->getActiveSheet()->setCellValue($h12 . $i, $row['totalshift_tidakmasuk']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h13 . $i, $row['waktu_lamakerja']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h14 . $i, $persentase_waktu_masuk);
                        $objPHPExcel->getActiveSheet()->setCellValue($h15 . $i, $row['jumlah_datangawal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h16 . $i, $row['waktu_datangawal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h17 . $i, $row['jumlah_terlambat']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h18 . $i, $row['waktu_terlambat']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h19 . $i, $row['jumlah_pulangawal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h20 . $i, $row['waktu_pulangawal']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h21 . $i, $row['jumlah_lembur']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h22 . $i, $row['waktu_lembur']);
                        $objPHPExcel->getActiveSheet()->setCellValue($h23 . $i, $row['totalshift_masuk'] - $row['alasantidakmasuk_hitunguangmakan']);

                        $objPHPExcel->getActiveSheet()->getStyle($h5 . $i)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);
                        $objPHPExcel->getActiveSheet()->getStyle($h14 . $i)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);

                        //atributvariable
                        $z = 4;
                        $a = 0;
                        for ($j = 0; $j < $totalatributvariable; $j++) {
                            $hh = Utils::angkaToHuruf($z);
                            $objPHPExcel->getActiveSheet()->setCellValueExplicit($hh . $i, $row[$arratirbutvariable[$a]], PHPExcel_Cell_DataType::TYPE_STRING);

                            $z++;
                            $a++;
                        }

                        //atributpenting
                        $a = 0;
                        for ($j = 0; $j < $totalatributpenting; $j++) {
                            $hh = Utils::angkaToHuruf($z);
                            $objPHPExcel->getActiveSheet()->setCellValue($hh . $i, $row[$arratirbutpenting[$a]]);

                            $z++;
                            $a++;
                        }

                        $objPHPExcel->getActiveSheet()->getStyle($h4 . $i)->getFont()->setBold(true);
                        $objPHPExcel->getActiveSheet()->getStyle($h5 . $i)->getFont()->setBold(true);
                        $objPHPExcel->getActiveSheet()->getStyle($h9 . $i)->getFont()->setBold(true);

                        for ($o = 2; $o < 33 + $totalatributvariable + $totalatributpenting; $o++) {
                            $abjad = Utils::angkaToHuruf($o);
                            $objPHPExcel->getActiveSheet()->getStyle($abjad . $i)->applyFromArray($styleArray);
                        }

                        $i++;
                    }
                }

                // $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setWidth(10);
                // $objPHPExcel->getActiveSheet()->getColumnDimension('W')->setWidth(12);

                $heightgambar = 99;
                $widthgambar = 99;

                $cg = Utils::angkaToHuruf(27 + $totalatributvariable + $totalatributpenting) . '1';
                $cg1 = Utils::angkaToHuruf(27 + $totalatributvariable + $totalatributpenting);

                $sql = 'SELECT * FROM parameterekspor';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

                if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                    $l = $i - 1;
                } else {
                    $l = $i + 1;
                    Utils::footerExcel($objPHPExcel,'kiri','B','B',$l,$rowPE);
                    Utils::footerExcel($objPHPExcel,'tengah','F','H',$l,$rowPE);
                    Utils::footerExcel($objPHPExcel,'kanan','L',$cg1,$l,$rowPE);
                    $l = $l+7;
                }

                // password
                Utils::passwordExcel($objPHPExcel);

                if ($b != 1) {
                    Utils::header5baris($objPHPExcel,$cg1,$rowPE);
                }

                //merge dan stylegaris range keterangan tanggal setelah header
                $objPHPExcel->getActiveSheet()->mergeCells('B' . $b . ':' . $cg1 . $b);
                // value
                if(Session::has('laprekapabsen_keterangan')){
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $b, trans('all.menampilkandata') . ' ' . Session::get('laprekapabsen_keterangan'));
                } else {
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $b, trans('all.menampilkandatatanggal') . ' ' . $tanggalawal . ' - ' . $tanggalakhir);
                }
                // center text
                $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                //font size
                $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getFont()->setSize(14);

                //footer tanggal file dibuat
                date_default_timezone_set('Asia/Jakarta');
                $ft = $l + 2;
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
                $objPHPExcel->getActiveSheet()->getStyle('B' . $ft)->getFont()->setItalic(true);

                if ($rowPE['logokiri'] != "") {
                    $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                    Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
                }

                if ($rowPE['logokanan'] != "") {
                    $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                    Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg);
                }

                $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
                $dir = '../storage/' . str_replace('/', '', $key->nilai) . '.xlsx';
                // $writer->save('php://output');
                $writer->save($dir);
            }

            Utils::insertLogUser('Ekspor laporan summary rekap');

            //proses zip
            $zipname = time().'_'.trans('all.summaryrekap').'.zip';
            $zip = new ZipArchive;
            $zip->open($zipname, ZipArchive::CREATE);
            $zip->addFile($dirsummaryrekap, trans('all.summaryrekap').'.xlsx');
            foreach ($dataatributnilai as $key){
                $zip->addFile('../storage/' . str_replace('/', '', $key->nilai) . '.xlsx', str_replace('/', '', $key->nilai).'.xlsx');
            }
            $zip->close();

            Utils::insertLogUser('Ekspor laporan ZIP');

            header('Content-Type: application/zip');
            header('Content-disposition: attachment; filename='.$zipname);
            header('Content-Length: ' . filesize($zipname));
            readfile($zipname);
            unlink($zipname);
            unlink($dirsummaryrekap);
            foreach ($dataatributnilai as $key){
                unlink('../storage/' . str_replace('/', '', $key->nilai) . '.xlsx');
            }
        }
    }

    public function rekapAbsenPerpegawaiExcel($tanggalawal, $tanggalakhir, $idpegawai){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $redText = array(
                'font'  => array(
                    'color' => array('rgb' => 'FF0000'),
                )
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $sql = 'SELECT gunakanpwd,pwd,logokiri FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

            $objPHPExcel->createSheet();
            $objPHPExcel->setActiveSheetIndex(0);

            $hh1 = 'A'; //huruf header
            $hh2 = 'B';
            $pdop = DB::getPdo();
            $sql = 'SELECT folderroot FROM perusahaan_route WHERE idperusahaan = :idperusahaan';
            $stmt = $pdop->prepare($sql);
            $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
            $stmt->execute();
            $rowp = $stmt->fetch(PDO::FETCH_ASSOC);
            $path = $rowp['folderroot'].'/logo_perusahaan';
            if (file_exists($path)) {
                $hh1 = 'B';
                $hh2 = 'C';
                $heightgambar = 99;
                $widthgambar = 99;
                Utils::logoExcel('kiri',$objPHPExcel,$path,$heightgambar,$widthgambar,'A1');
            }

            // data atribut variable pegawai
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $aa = 5; // angka akhir
            $aa2 = 6;
            $sql1 = 'SELECT
                        av.atribut,
                        pa.variable
                    FROM
                        atributvariable av,
                        pegawaiatributvariable pa
                    WHERE
                        pa.idatributvariable=av.id AND
                        av.penting = "y" AND
                        pa.idpegawai = :idpegawai';
            $stmt1 = $pdo->prepare($sql1);
            $stmt1->bindValue(':idpegawai', $idpegawai);
            $stmt1->execute();
            if ($stmt1->rowCount() > 0) {
                while ($row1 = $stmt1->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue($hh1 . $aa, $row1['atribut']);
                    $objPHPExcel->getActiveSheet()->setCellValue($hh2 . $aa, ': '.$row1['variable']);
                    $aa++;
                    $aa2++;
                }
            }
            $aa = $aa+1;
            $aa2 = $aa2+1;

            //set value kolom
            $periodecantik = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));

            $objPHPExcel->getActiveSheet()
                        ->setCellValue($hh1.'1', trans('all.laporankehadiranpegawai'))
                        ->setCellValue($hh1.'2', trans('all.periode'))
                        ->setCellValue($hh2.'2', ': '.$periodecantik)
                        ->setCellValue($hh1.'3', trans('all.nama'))
                        ->setCellValue($hh2.'3', ': '.Utils::getNamaPegawai($idpegawai))
                        ->setCellValue($hh1.'4', trans('all.pin'))
                        ->setCellValue($hh2.'4', ': '.Utils::getDataWhere($pdo,'pegawai','pin','id', $idpegawai))
                        ->setCellValue('A'.$aa, trans('all.tanggal'))
                        ->setCellValue('B'.$aa, trans('all.jamkerja'))
                        ->setCellValue('B'.$aa2, trans('all.masuk'))
                        ->setCellValue('C'.$aa2, trans('all.pulang'))
                        ->setCellValue('D'.$aa, trans('all.jammasuk'))
                        ->setCellValue('E'.$aa, trans('all.jamkeluar'))
                        ->setCellValue('F'.$aa, trans('all.jamdatang'))
                        ->setCellValue('F'.$aa2, trans('all.cepat'))
                        ->setCellValue('G'.$aa2, trans('all.telat'))
                        ->setCellValue('H'.$aa, trans('all.jumlahjampulang'))
                        ->setCellValue('H'.$aa2, trans('all.cepat'))
                        ->setCellValue('I'.$aa2, trans('all.telat'))
                        ->setCellValue('J'.$aa, trans('all.terlambataktual'))
                        ->setCellValue('K'.$aa, trans('all.jumlahjamefektif'))
                        ->setCellValue('L'.$aa, trans('all.jumlahjamaktual'))
                        ->setCellValue('M'.$aa, trans('all.keterangan'));

            $objPHPExcel->getActiveSheet()->mergeCells('A'.$aa.':A'.$aa2);
            $objPHPExcel->getActiveSheet()->mergeCells('B'.$aa.':C'.$aa);
            $objPHPExcel->getActiveSheet()->mergeCells('D'.$aa.':D'.$aa2);
            $objPHPExcel->getActiveSheet()->mergeCells('F'.$aa.':G'.$aa);
            $objPHPExcel->getActiveSheet()->mergeCells('E'.$aa.':E'.$aa2);
            $objPHPExcel->getActiveSheet()->mergeCells('H'.$aa.':I'.$aa);
            $objPHPExcel->getActiveSheet()->mergeCells('J'.$aa.':J'.$aa2);
            $objPHPExcel->getActiveSheet()->mergeCells('K'.$aa.':K'.$aa2);
            $objPHPExcel->getActiveSheet()->mergeCells('L'.$aa.':L'.$aa2);
            $objPHPExcel->getActiveSheet()->mergeCells('M'.$aa.':M'.$aa2);

            $objPHPExcel->getActiveSheet()->getStyle('A'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('D'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('E'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('J'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('K'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('L'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('M'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

            $objPHPExcel->getActiveSheet()->getStyle('A'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('B'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('D'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('E'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('B'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('C'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('F'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('F'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('G'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('H'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('H'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('I'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('J'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('K'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('L'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('M'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

            $objPHPExcel->getActiveSheet()->getStyle('D'.$aa.':E'.$aa)->getAlignment()->setWrapText(true);
            $objPHPExcel->getActiveSheet()->getStyle('J'.$aa.':L'.$aa)->getAlignment()->setWrapText(true);

            // $arrWidth = array('', 15, 30, 50, 12);
            for ($j = 1; $j <= 13; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . ''.$aa)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . ''.$aa)->applyFromArray($styleArray);
                // $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }
            $objPHPExcel->getActiveSheet()->getStyle('B'.$aa2)->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle('C'.$aa2)->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle('F'.$aa2)->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle('G'.$aa2)->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle('H'.$aa2)->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle('I'.$aa2)->getFont()->setBold(true);

            $objPHPExcel->getActiveSheet()->getStyle('B'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('D'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('E'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('F'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('G'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('H'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('I'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('J'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('K'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('L'.$aa2)->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('M'.$aa2)->applyFromArray($styleArray);

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setWidth(50);

            $where1 = '';
            $where2 = '';
            if ($tanggalawal != '' && $tanggalakhir != '') {
                $where1 .= ' AND ra.tanggal BETWEEN STR_TO_DATE(:tanggalawal1,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir1,"%d/%m/%Y")';
                $where2 .= ' AND ra.tanggal BETWEEN STR_TO_DATE(:tanggalawal2,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir2,"%d/%m/%Y")';
            }

            // IF(ra.selisihmasuk>0,SEC_TO_TIME(ra.selisihmasuk),"00:00:00") as datangawal,
            // IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"00:00:00") as terlambat,
            // IF(ra.selisihkeluar>0,SEC_TO_TIME(ra.selisihkeluar),"00:00:00") as pulanglebihawal,
            // IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"00:00:00") as pulangterlambat,

            // IF(ra.selisihmasuk>0,SEC_TO_TIME(ra.selisihmasuk),"") as datangawal,
            // IF(ra.selisihmasuk<0,SEC_TO_TIME(-1*ra.selisihmasuk),"") as terlambat,
            // IF(ra.selisihkeluar>0,SEC_TO_TIME(ra.selisihkeluar),"") as pulanglebihawal,
            // IF(ra.selisihkeluar<0,SEC_TO_TIME(-1*ra.selisihkeluar),"") as pulangterlambat,

            // CONCAT(IF(ra.absentidaklengkap="m","'.trans('all.kurangabsenmasuk').' ",IF(ra.absentidaklengkap="k","'.trans('all.kurangabsenkeluar').' ","")),IF(ISNULL(ra.idharilibur)=true,IFNULL(atm.alasan,""),hl.keterangan)) as keterangan,
            // -- IF(ra.absentidaklengkap="m","'.trans('all.kurangabsenmasuk').'",IF(ra.absentidaklengkap="k",'.trans('all.kurangabsenkeluar').'",IF(ISNULL(ra.idharilibur)=true,IFNULL(atm.alasan,""),hl.keterangan))) as keterangan,

            $sql = 'SELECT
                        ra.tanggal,
                        IFNULL(ra.idharilibur,"") as idharilibur,
                        IFNULL(ra.waktumasuk,"") as waktumasukdatetime,
                        IFNULL(ra.waktukeluar,"") as waktukeluardatetime,
                        IFNULL(TIME(ra.waktumasuk),"") as waktumasuk,
                        IFNULL(TIME(ra.waktukeluar),"") as waktukeluar,
                        IF(ra.selisihmasuk>0,ra.selisihmasuk,"") as datangawal,
                        IF(ra.selisihmasuk<0,-1*ra.selisihmasuk,"") as terlambat,
                        IF(ra.selisihkeluar<0,-1*ra.selisihkeluar,"") as pulanglebihawal,
                        IF(ra.selisihkeluar>0,ra.selisihkeluar,"") as pulangterlambat,
                        SEC_TO_TIME(ra.lamakerja) as lamakerja,
                        SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
                        SEC_TO_TIME(ra.lamalembur) as lamalembur,
                        ra.jadwalmasukkerja,
                        ra.masukkerja,
                        ra.absentidaklengkap,
                        IFNULL(hl.keterangan,"") as keteranganharilibur,
                        IFNULL(atm.kategori,"") as kategorialasantidakmasuk,
                        IFNULL(atm.alasan,"") as alasantidakmasuk,
                        IFNULL(x.jamkerja,"") as jamkerja,
                        ra.jadwallamakerja as jamkerjaefektif
                    FROM
                        rekapabsen ra
                        LEFT JOIN (
                            SELECT
                                ra.id,
                                GROUP_CONCAT(DATE_FORMAT(raj.waktu,"%H:%i") ORDER BY raj.waktu SEPARATOR " - ") as jamkerja
                            FROM
                                rekapabsen ra,
                                rekapabsen_jadwal raj
                            WHERE
                                ra.id=raj.idrekapabsen AND
                                raj.checking IN ("start", "end") AND
                                ra.idpegawai = :idpegawai1
                                '.$where1.'
                            GROUP BY
                                ra.id
                        ) x ON ra.id = x.id
                        LEFT JOIN harilibur hl ON ra.idharilibur = hl.id
                        LEFT JOIN alasantidakmasuk atm ON ra.idalasantidakmasuk = atm.id
                    WHERE
                        ra.idpegawai = :idpegawai2 '.$where2.'
                    ORDER BY
                        ra.tanggal ASC';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai1', $idpegawai);
            $stmt->bindValue(':idpegawai2', $idpegawai);
            if ($tanggalawal != '' && $tanggalakhir != '') {
                $stmt->bindValue(':tanggalawal1', $tanggalawal);
                $stmt->bindValue(':tanggalakhir1', $tanggalakhir);
                $stmt->bindValue(':tanggalawal2', $tanggalawal);
                $stmt->bindValue(':tanggalakhir2', $tanggalakhir);
            }
            $stmt->execute();
            $i = $aa+2;

            $total_harikerja = 0;
            $total_jamdatang_cepat = 0;
            $total_jamdatang_telat = 0;
            $total_jampulang_cepat = 0;
            $total_jampulang_telat = 0;
            $total_terlambat = 0;
            $total_jamefektif = 0;
            $total_jamaktual = 0;

            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $jamkerja = $row['jamkerja'] != '' ? explode('-',$row['jamkerja']) : '';
//                $jamkerjaefektif = $row['jamkerjaefektif'];
                $jamkerjaefektif = floor($row['jamkerjaefektif']/60);

                // terlambataktual
                $terlambataktual = 0;
                $jamkerjaaktual = 0;

                if($row['waktumasukdatetime'] != '' || $row['waktukeluardatetime'] != ''){
                    $total_harikerja = $total_harikerja + 1;
//                    $pulangterlambat = $row['pulangterlambat'] > 1800 ? 1800 : $row['pulangterlambat'];
                    $pulangterlambat = $row['pulangterlambat'] > 1800 ? floor(1800/60) : floor($row['pulangterlambat']/60);
                    if($pulangterlambat > 0 || $row['pulanglebihawal'] != 0) {
//                        $terlambataktual = $row['terlambat'] + $row['pulanglebihawal'] - $pulangterlambat;
                        $terlambataktual = floor($row['terlambat']/60) + floor($row['pulanglebihawal']/60) - $pulangterlambat;
                    }
                    if($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't'){
                        // jika harilibur dan pegawai tsb tetap masuk, hitung jam kerja aktual dari waktu keluar di kurangi waktu masuk
                        if($row['waktumasukdatetime'] != '' && $row['waktukeluardatetime'] != ''){
//                            $jamkerjaaktual = abs(strtotime($row['waktukeluardatetime']) - strtotime($row['waktumasukdatetime']));
                            $jamkerjaaktual = floor(abs(strtotime($row['waktukeluardatetime']) - strtotime($row['waktumasukdatetime'])) / 60);
                        }
                    }else{
                        // jika tidak harilibur, jam kerja aktual dari jamkerjaefektif
                        $jamkerjaaktual = $jamkerjaefektif;
                    }
                    if ($terlambataktual>0) {
                        $jamkerjaaktual = $jamkerjaaktual - $terlambataktual;
                    }
                }

                //jika dispensasi jamkerjaaktual dari jam kerjaefektif
                if($row['kategorialasantidakmasuk'] == 'd'){
                    $jamkerjaaktual = $jamkerjaefektif;
                }

                if($row['absentidaklengkap'] != ''){
                    $jamkerjaaktual = floor(14400/60); // 4jam (permintaan heerjan)
                }

                if($row['kategorialasantidakmasuk'] == 'i' || $row['kategorialasantidakmasuk'] == 's' || $row['kategorialasantidakmasuk'] == 'c'){
                    $jamkerjaaktual = 0;
                    $jamkerjaefektif = 0;
                }

//                $datangawal = $row['datangawal'] != '' ? $row['datangawal'] : 0;
//                $terlambat = $row['terlambat'] != '' ? $row['terlambat'] : 0;
                $datangawal = $row['datangawal'] != '' ? floor($row['datangawal']/60) : 0;
                $terlambat = $row['terlambat'] != '' ? floor($row['terlambat']/60) : 0;
//                $pulanglebihawal = $row['pulanglebihawal'] != '' ? $row['pulanglebihawal'] : 0;
//                $pulangterlambat = $row['pulangterlambat'] != '' ? $row['pulangterlambat'] : 0;
                $pulanglebihawal = $row['pulanglebihawal'] != '' ? floor($row['pulanglebihawal']/60) : 0;
                $pulangterlambat = $row['pulangterlambat'] != '' ? floor($row['pulangterlambat']/60) : 0;

                $total_jamdatang_cepat = $total_jamdatang_cepat + $datangawal ;
                $total_jamdatang_telat = $total_jamdatang_telat + $terlambat;
                $total_jampulang_cepat = $total_jampulang_cepat + $pulanglebihawal;
                $total_jampulang_telat = $total_jampulang_telat + $pulangterlambat;
                $total_terlambat = $total_terlambat + $terlambataktual;
                $total_jamefektif = $total_jamefektif + $jamkerjaefektif;
                $total_jamaktual = $total_jamaktual + $jamkerjaaktual;

                //keterangan
                $keterangan = '';
                if($terlambat > 0){
                    $keterangan .= trans('all.terlambat').', ';
                }
                if($pulanglebihawal > 0){
                    $keterangan .= trans('all.pulangawal').', ';
                }
                if($row['absentidaklengkap'] == 'm'){
                    $keterangan .= trans('all.kurangabsenmasuk').', ';
                }
                if($row['absentidaklengkap'] == 'k'){
                    $keterangan .= trans('all.kurangabsenkeluar').', ';
                }
                if($row['alasantidakmasuk'] != ''){
                    $keterangan .= $row['alasantidakmasuk'].', ';
                }
                if($row['keteranganharilibur'] != ''){
                    $keterangan .= $row['keteranganharilibur'].', ';
                }
                if($row['jadwalmasukkerja'] == 't'){
                    $keterangan = trans('all.libur').', ';
                }

                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, Utils::tanggalCantik($row['tanggal']));
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['jamkerja'] != '' ? $jamkerja[0] : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['jamkerja'] != '' ? $jamkerja[1] : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['waktumasuk'] != '' ? substr($row['waktumasuk'], 0, -3) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['waktukeluar'] != '' ? substr($row['waktukeluar'], 0, -3) : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $datangawal > 59 ? Utils::sec2hhmm($datangawal) : '-'); //kenapa 59 ? untuk menghindari return 00:00
                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $datangawal > 0 ? Utils::min2hhmm($datangawal) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $terlambat > 0 ? Utils::min2hhmm($terlambat) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $pulanglebihawal> 0  ? Utils::min2hhmm($pulanglebihawal) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $pulangterlambat > 0 ? Utils::min2hhmm($pulangterlambat) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('J' . $i, $terlambataktual > 0 ? Utils::min2hhmm($terlambataktual) : '-');//$terlambataktual > 59 ? Utils::sec2hhmm($terlambataktual) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('K' . $i, $jamkerjaefektif > 0 ? Utils::min2hhmm($jamkerjaefektif) : '-');//$jamkerjaefektif > 59 ? Utils::sec2hhmm($jamkerjaefektif) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('L' . $i, $jamkerjaaktual > 0 ? Utils::min2hhmm($jamkerjaaktual) : '-');///$jamkerjaaktual > 59 ? Utils::sec2hhmm($jamkerjaaktual) : '-');
                $objPHPExcel->getActiveSheet()->setCellValue('M' . $i, $keterangan != '' ? substr($keterangan, 0, -2) : ($row['masukkerja'] == 'y' ? '' : trans('all.tanpaketerangan')));

                //jika libur
                if($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't'){
                    $objPHPExcel->getActiveSheet()->getStyle('A'.$i)->applyFromArray($redText);
                }

                for($j = 1; $j<= 13; $j++){
                    $hi = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                }

                $i++;
            }

            $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, trans('all.total').' '.$total_harikerja.' '.trans('all.harikerja')); // 13 dari jumlah dia masuk
            $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $total_jamdatang_cepat > 0 ? Utils::min2hhmm($total_jamdatang_cepat) : '-');
            $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $total_jamdatang_telat > 0 ? Utils::min2hhmm($total_jamdatang_telat) : '-');
            $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $total_jampulang_cepat > 0 ? Utils::min2hhmm($total_jampulang_cepat) : '-');
            $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $total_jampulang_telat > 0 ? Utils::min2hhmm($total_jampulang_telat) : '-');
            $objPHPExcel->getActiveSheet()->setCellValue('J' . $i, $total_terlambat > 0 ? Utils::min2hhmm($total_terlambat) : '-');
            $objPHPExcel->getActiveSheet()->setCellValue('K' . $i, $total_jamefektif > 0 ? Utils::min2hhmm($total_jamefektif) : '-');
            $objPHPExcel->getActiveSheet()->setCellValue('L' . $i, $total_jamaktual > 0 ? Utils::min2hhmm($total_jamaktual) : '-');
            $objPHPExcel->getActiveSheet()->mergeCells('A'.$i.':E'.$i);
            for($j = 1;$j<=13;$j++){
                $hi = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            }
            $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

            // password
            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan per pegawai');
            Utils::setFileNameExcel(trans('all.perpegawai'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function EksporPerpegawaiTipeDuaExcel($tanggalawal, $tanggalakhir, $idpegawai){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $redText = array(
                'font'  => array(
                    'color' => array('rgb' => 'FF0000'),
                )
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $sql = 'SELECT gunakanpwd,pwd,logokiri FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

            $objPHPExcel->createSheet();
            $objPHPExcel->setActiveSheetIndex(0);

            $hh1 = 'A'; //huruf header
            $hh2 = 'B';

            // data atribut variable pegawai
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $aa = 5; // angka akhir
            $aa2 = 6;
            $aa3 = 7;
            $sql1 = 'SELECT
                        av.atribut,
                        pa.variable
                    FROM
                        atributvariable av,
                        pegawaiatributvariable pa
                    WHERE
                        pa.idatributvariable=av.id AND
                        av.penting = "y" AND
                        pa.idpegawai = :idpegawai';
            $stmt1 = $pdo->prepare($sql1);
            $stmt1->bindValue(':idpegawai', $idpegawai);
            $stmt1->execute();
            if ($stmt1->rowCount() > 0) {
                while ($row1 = $stmt1->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue($hh1 . $aa, $row1['atribut']);
                    $objPHPExcel->getActiveSheet()->setCellValue($hh2 . $aa, ': '.$row1['variable']);
                    $aa++;
                    $aa2++;
                    $aa3++;
                }
            }
            $aa = $aa+1;
            $aa2 = $aa2+1;
            $aa3 = $aa3+1;

            //set value kolom
            $periodecantik = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));

            $objPHPExcel->getActiveSheet()
                        ->setCellValue('A1', trans('all.laporankehadiranpegawai'))
                        ->setCellValue('A2', trans('all.periode'))
                        ->setCellValue('B2', ': '.$periodecantik)
                        ->setCellValue('A3', trans('all.nama'))
                        ->setCellValue('B3', ': '.Utils::getNamaPegawai($idpegawai))
                        ->setCellValue('A4', trans('all.pin'))
                        ->setCellValue('B4', ': '.Utils::getDataWhere($pdo,'pegawai','pin','id', $idpegawai))
                        ->setCellValue('A'.$aa, trans('all.tanggal'))
                        ->setCellValue('B'.$aa, 'Jam')
                        ->setCellValue('B'.$aa2, trans('all.masuk'))
                        ->setCellValue('C'.$aa2, trans('all.keluar'))
                        ->setCellValue('D'.$aa2, trans('all.total'))
                        ->setCellValue('D'.$aa3, trans('all.jamkerja'))
                        ->setCellValue('E'.$aa2, 'Kelebihan')
                        ->setCellValue('E'.$aa3, trans('all.jamkerja'))
                        ->setCellValue('F'.$aa2, 'Datang')
                        ->setCellValue('G'.$aa2, trans('all.pulang'))
                        ->setCellValue('F'.$aa3, trans('all.telat'))
                        ->setCellValue('G'.$aa3, trans('all.cepat'))
                        ->setCellValue('H'.$aa, trans('all.sakit'))
                        ->setCellValue('I'.$aa, trans('all.ijin'))
                        ->setCellValue('J'.$aa, trans('all.alpha'))
                        ->setCellValue('K'.$aa, trans('all.cuti'))
                        ->setCellValue('L'.$aa, 'DL')
                        ->setCellValue('M'.$aa, trans('all.status'))
                        ->setCellValue('N'.$aa, 'Jam Jaga Ounsite');

            $objPHPExcel->getActiveSheet()->mergeCells('A'.$aa.':A'.$aa3);
            $objPHPExcel->getActiveSheet()->mergeCells('B'.$aa2.':B'.$aa3);
            $objPHPExcel->getActiveSheet()->mergeCells('C'.$aa2.':C'.$aa3);
            $objPHPExcel->getActiveSheet()->mergeCells('B'.$aa.':G'.$aa);
            $objPHPExcel->getActiveSheet()->mergeCells('H'.$aa.':H'.$aa3);
            $objPHPExcel->getActiveSheet()->mergeCells('I'.$aa.':I'.$aa3);
            $objPHPExcel->getActiveSheet()->mergeCells('J'.$aa.':J'.$aa3);
            $objPHPExcel->getActiveSheet()->mergeCells('K'.$aa.':K'.$aa3);
            $objPHPExcel->getActiveSheet()->mergeCells('L'.$aa.':L'.$aa3);
            $objPHPExcel->getActiveSheet()->mergeCells('M'.$aa.':M'.$aa3);
            $objPHPExcel->getActiveSheet()->mergeCells('N'.$aa.':N'.$aa3);

            $objPHPExcel->getActiveSheet()->getStyle('A'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('B'.$aa2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('C'.$aa2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('H'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('I'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('J'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('K'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('L'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('M'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('N'.$aa)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

            $objPHPExcel->getActiveSheet()->getStyle('A'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('B'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('B'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('C'.$aa2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('H'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('I'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('J'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('K'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('L'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('M'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('N'.$aa)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

            $objPHPExcel->getActiveSheet()->getStyle('N'.$aa)->getAlignment()->setWrapText(true);
//            $objPHPExcel->getActiveSheet()->getStyle('D'.$aa.':E'.$aa)->getAlignment()->setWrapText(true);
//            $objPHPExcel->getActiveSheet()->getStyle('J'.$aa.':L'.$aa)->getAlignment()->setWrapText(true);

             $arrWidth = array('', 20, 15, 15, 15, 15, 15, 15, 10, 10, 10, 10, 10, 15, 20);
            for ($j = 1; $j <= 14; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . ''.$aa)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . ''.$aa2)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . ''.$aa3)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . ''.$aa)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . ''.$aa2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . ''.$aa3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

//            $where = '';
//            if ($tanggalawal != '' && $tanggalakhir != '') {
//                $where .= ' AND rs.tanggal BETWEEN STR_TO_DATE("' . $tanggalawal . '","%d/%m/%Y") AND STR_TO_DATE("' . $tanggalakhir . '","%d/%m/%Y")';
//            }
            $where = '';
            $wheresq = ''; // sq = subquery
            if(Session::get('laprekapabsen_filtermode') == 'jangkauantanggal'){
                $where .= ' AND rs.tanggal BETWEEN STR_TO_DATE("' . $tanggalawal . '","%d/%m/%Y") AND STR_TO_DATE("' . $tanggalakhir . '","%d/%m/%Y")';
                $wheresq .= ' AND itm.tanggalawal BETWEEN STR_TO_DATE("' . $tanggalawal . '","%d/%m/%Y") AND STR_TO_DATE("' . $tanggalakhir . '","%d/%m/%Y")';
                $wheresq .= ' AND itm.tanggalakhir BETWEEN STR_TO_DATE("' . $tanggalawal . '","%d/%m/%Y") AND STR_TO_DATE("' . $tanggalakhir . '","%d/%m/%Y")';
            }else if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                $tahun = Session::get('laprekapabsen_tahun');
                $bulan = Session::get('laprekapabsen_bulan');
                $tanggal = Session::get('laprekapabsen_tanggal');
                if ($tanggal != ''){
                    $arrWherePerTanggal = array();
                    $arrWheresqPerTanggalAwal = array();
                    $arrWheresqPerTanggalAkhir = array();
                    for($i=0;$i<count($tanggal);$i++) {
                        $arrWherePerTanggal[$i] = '( rs.tanggal = "'.$tahun.'-'.$bulan.'-'.$tanggal[$i].'" )';
                        $arrWheresqPerTanggalAwal[$i] = '( itm.tanggalawal = "'.$tahun.'-'.$bulan.'-'.$tanggal[$i].'" )';
                        $arrWheresqPerTanggalAwal[$i] = '( itm.tanggalakhir = "'.$tahun.'-'.$bulan.'-'.$tanggal[$i].'" )';
                    }
                    $where .= ' AND ( '.implode(' OR ',$arrWherePerTanggal).' )';
                    $wheresq .= ' AND ( '.implode(' OR ',$arrWheresqPerTanggalAwal).' )';
                    $wheresq .= ' AND ( '.implode(' OR ',$arrWheresqPerTanggalAkhir).' )';
                } else {
                    //cari hari terakhir pada bulan terpilih
                    $firstDate = $tahun.'-'.$bulan.'-01';
                    $lastDate = date("Y-m-t", strtotime($firstDate));
                    $where .= ' AND rs.tanggal BETWEEN "'.$firstDate.'" AND "'.$lastDate.'"';
                    $wheresq .= ' AND itm.tanggalawal BETWEEN "'.$firstDate.'" AND "'.$lastDate.'"';
                    $wheresq .= ' AND itm.tanggalakhir BETWEEN "'.$firstDate.'" AND "'.$lastDate.'"';
                }
            }

            $sql = 'SELECT
                        rs.tanggal,
                        rs.waktumasuk,
                        rs.waktukeluar,
                        rs.lamakerja,
                        rs.selisihmasuk,
                        rs.selisihkeluar,
                        rs.lamakerja,
                        jks.namashift as namashift,
                        IFNULL(x.idalasantidakmasuk,"") as idalasantidakmasuk,
                        IFNULL(x.kategori,"") as kategori
                        -- IFNULL(ra.idalasantidakmasuk,"") as alasantidakmasuk
                    FROM
                        rekapshift rs
                        LEFT JOIN (
                            SELECT
                                itm.idpegawai,
                                itm.idalasantidakmasuk,
                                atm.kategori,
                                itm.tanggalawal,
                                itm.tanggalakhir
                            FROM
                                ijintidakmasuk itm,
                                alasantidakmasuk atm
                            WHERE
                                itm.idalasantidakmasuk=atm.id AND
                                ' . $wheresq . '
                                itm.idpegawai = :idpegawai1
                        ) x ON x.idpegawai=rs.idpegawai AND x.tanggalawal = rs.tanggal AND x.tanggalakhir=rs.tanggal,
                        jamkerjashift jks
                    WHERE
                        rs.idjamkerjashift=jks.id AND
                        rs.idpegawai = :idpegawai2 AND
                        ' . $where . '
                    ORDER BY
                        rs.tanggal ASC';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai1', $idpegawai);
            $stmt->bindValue(':idpegawai2', $idpegawai);
            $stmt->execute();
//            $i = $aa+2;
//
//            $total_harikerja = 0;
//            $total_jamdatang_cepat = 0;
//            $total_jamdatang_telat = 0;
//            $total_jampulang_cepat = 0;
//            $total_jampulang_telat = 0;
//            $total_terlambat = 0;
//            $total_jamefektif = 0;
//            $total_jamaktual = 0;
//
//            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
//                $jamkerja = $row['jamkerja'] != '' ? explode('-',$row['jamkerja']) : '';
////                $jamkerjaefektif = $row['jamkerjaefektif'];
//                $jamkerjaefektif = floor($row['jamkerjaefektif']/60);
//
//                // terlambataktual
//                $terlambataktual = 0;
//                $jamkerjaaktual = 0;
//
//                if($row['waktumasukdatetime'] != '' || $row['waktukeluardatetime'] != ''){
//                    $total_harikerja = $total_harikerja + 1;
////                    $pulangterlambat = $row['pulangterlambat'] > 1800 ? 1800 : $row['pulangterlambat'];
//                    $pulangterlambat = $row['pulangterlambat'] > 1800 ? floor(1800/60) : floor($row['pulangterlambat']/60);
//                    if($pulangterlambat > 0 || $row['pulanglebihawal'] != 0) {
////                        $terlambataktual = $row['terlambat'] + $row['pulanglebihawal'] - $pulangterlambat;
//                        $terlambataktual = floor($row['terlambat']/60) + floor($row['pulanglebihawal']/60) - $pulangterlambat;
//                    }
//                    if($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't'){
//                        // jika harilibur dan pegawai tsb tetap masuk, hitung jam kerja aktual dari waktu keluar di kurangi waktu masuk
//                        if($row['waktumasukdatetime'] != '' && $row['waktukeluardatetime'] != ''){
////                            $jamkerjaaktual = abs(strtotime($row['waktukeluardatetime']) - strtotime($row['waktumasukdatetime']));
//                            $jamkerjaaktual = floor(abs(strtotime($row['waktukeluardatetime']) - strtotime($row['waktumasukdatetime'])) / 60);
//                        }
//                    }else{
//                        // jika tidak harilibur, jam kerja aktual dari jamkerjaefektif
//                        $jamkerjaaktual = $jamkerjaefektif;
//                    }
//                    if ($terlambataktual>0) {
//                        $jamkerjaaktual = $jamkerjaaktual - $terlambataktual;
//                    }
//                }
//
//                //jika dispensasi jamkerjaaktual dari jam kerjaefektif
//                if($row['kategorialasantidakmasuk'] == 'd'){
//                    $jamkerjaaktual = $jamkerjaefektif;
//                }
//
//                if($row['absentidaklengkap'] != ''){
//                    $jamkerjaaktual = floor(14400/60); // 4jam (permintaan heerjan)
//                }
//
//                if($row['kategorialasantidakmasuk'] == 'i' || $row['kategorialasantidakmasuk'] == 's' || $row['kategorialasantidakmasuk'] == 'c'){
//                    $jamkerjaaktual = 0;
//                    $jamkerjaefektif = 0;
//                }
//
////                $datangawal = $row['datangawal'] != '' ? $row['datangawal'] : 0;
////                $terlambat = $row['terlambat'] != '' ? $row['terlambat'] : 0;
//                $datangawal = $row['datangawal'] != '' ? floor($row['datangawal']/60) : 0;
//                $terlambat = $row['terlambat'] != '' ? floor($row['terlambat']/60) : 0;
////                $pulanglebihawal = $row['pulanglebihawal'] != '' ? $row['pulanglebihawal'] : 0;
////                $pulangterlambat = $row['pulangterlambat'] != '' ? $row['pulangterlambat'] : 0;
//                $pulanglebihawal = $row['pulanglebihawal'] != '' ? floor($row['pulanglebihawal']/60) : 0;
//                $pulangterlambat = $row['pulangterlambat'] != '' ? floor($row['pulangterlambat']/60) : 0;
//
//                $total_jamdatang_cepat = $total_jamdatang_cepat + $datangawal ;
//                $total_jamdatang_telat = $total_jamdatang_telat + $terlambat;
//                $total_jampulang_cepat = $total_jampulang_cepat + $pulanglebihawal;
//                $total_jampulang_telat = $total_jampulang_telat + $pulangterlambat;
//                $total_terlambat = $total_terlambat + $terlambataktual;
//                $total_jamefektif = $total_jamefektif + $jamkerjaefektif;
//                $total_jamaktual = $total_jamaktual + $jamkerjaaktual;
//
//                //keterangan
//                $keterangan = '';
//                if($terlambat > 0){
//                    $keterangan .= trans('all.terlambat').', ';
//                }
//                if($pulanglebihawal > 0){
//                    $keterangan .= trans('all.pulangawal').', ';
//                }
//                if($row['absentidaklengkap'] == 'm'){
//                    $keterangan .= trans('all.kurangabsenmasuk').', ';
//                }
//                if($row['absentidaklengkap'] == 'k'){
//                    $keterangan .= trans('all.kurangabsenkeluar').', ';
//                }
//                if($row['alasantidakmasuk'] != ''){
//                    $keterangan .= $row['alasantidakmasuk'].', ';
//                }
//                if($row['keteranganharilibur'] != ''){
//                    $keterangan .= $row['keteranganharilibur'].', ';
//                }
//                if($row['jadwalmasukkerja'] == 't'){
//                    $keterangan = trans('all.libur').', ';
//                }
//
//                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, Utils::tanggalCantik($row['tanggal']));
//                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['jamkerja'] != '' ? $jamkerja[0] : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['jamkerja'] != '' ? $jamkerja[1] : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['waktumasuk'] != '' ? substr($row['waktumasuk'], 0, -3) : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['waktukeluar'] != '' ? substr($row['waktukeluar'], 0, -3) : '-');
////                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $datangawal > 59 ? Utils::sec2hhmm($datangawal) : '-'); //kenapa 59 ? untuk menghindari return 00:00
//                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $datangawal > 0 ? Utils::min2hhmm($datangawal) : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $terlambat > 0 ? Utils::min2hhmm($terlambat) : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $pulanglebihawal> 0  ? Utils::min2hhmm($pulanglebihawal) : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $pulangterlambat > 0 ? Utils::min2hhmm($pulangterlambat) : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('J' . $i, $terlambataktual > 0 ? Utils::min2hhmm($terlambataktual) : '-');//$terlambataktual > 59 ? Utils::sec2hhmm($terlambataktual) : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('K' . $i, $jamkerjaefektif > 0 ? Utils::min2hhmm($jamkerjaefektif) : '-');//$jamkerjaefektif > 59 ? Utils::sec2hhmm($jamkerjaefektif) : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('L' . $i, $jamkerjaaktual > 0 ? Utils::min2hhmm($jamkerjaaktual) : '-');///$jamkerjaaktual > 59 ? Utils::sec2hhmm($jamkerjaaktual) : '-');
//                $objPHPExcel->getActiveSheet()->setCellValue('M' . $i, $keterangan != '' ? substr($keterangan, 0, -2) : ($row['masukkerja'] == 'y' ? '' : trans('all.tanpaketerangan')));
//
//                //jika libur
//                if($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't'){
//                    $objPHPExcel->getActiveSheet()->getStyle('A'.$i)->applyFromArray($redText);
//                }
//
//                for($j = 1; $j<= 13; $j++){
//                    $hi = Utils::angkaToHuruf($j);
//                    $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->applyFromArray($styleArray);
//                    $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//                }
//
//                $i++;
//            }
//
//            $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, trans('all.total').' '.$total_harikerja.' '.trans('all.harikerja')); // 13 dari jumlah dia masuk
//            $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $total_jamdatang_cepat > 0 ? Utils::min2hhmm($total_jamdatang_cepat) : '-');
//            $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $total_jamdatang_telat > 0 ? Utils::min2hhmm($total_jamdatang_telat) : '-');
//            $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $total_jampulang_cepat > 0 ? Utils::min2hhmm($total_jampulang_cepat) : '-');
//            $objPHPExcel->getActiveSheet()->setCellValue('I' . $i, $total_jampulang_telat > 0 ? Utils::min2hhmm($total_jampulang_telat) : '-');
//            $objPHPExcel->getActiveSheet()->setCellValue('J' . $i, $total_terlambat > 0 ? Utils::min2hhmm($total_terlambat) : '-');
//            $objPHPExcel->getActiveSheet()->setCellValue('K' . $i, $total_jamefektif > 0 ? Utils::min2hhmm($total_jamefektif) : '-');
//            $objPHPExcel->getActiveSheet()->setCellValue('L' . $i, $total_jamaktual > 0 ? Utils::min2hhmm($total_jamaktual) : '-');
//            $objPHPExcel->getActiveSheet()->mergeCells('A'.$i.':E'.$i);
//            for($j = 1;$j<=13;$j++){
//                $hi = Utils::angkaToHuruf($j);
//                $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->applyFromArray($styleArray);
//                $objPHPExcel->getActiveSheet()->getStyle($hi . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            }
//            $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

            // password
            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan absen jahga ounsite');
            Utils::setFileNameExcel('absen_jaga_ounsite');
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function EksporPerpegawaiTipeDuaPDF($tanggalawal, $tanggalakhir, $idpegawai){
        // bentuk layout lihat https://docs.google.com/spreadsheets/d/1cYFMP9ERalLO53DOH_5jbWEDj1yr0KuiqtAfi_O5Gfw/edit?ts=5f3cce91#gid=1274625615 atau file di folder download absen per Pegawai.xlsx
        if(Utils::cekHakakses('laporanekspor','l')){
            require(public_path() .'/fpdf/fpdf.php');
            Utils::insertLogUser('Ekspor laporan rekapabsen per pegawai PDF');

            $pdf = new FPDF();
            $pdf->AddPage('L');
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $tanggalawal = Utils::convertDmy2Ymd($tanggalawal);
            $tanggalakhir = Utils::convertDmy2Ymd($tanggalakhir);

            $width_cell=array(20,15,12,10);
            $hc=array(9,6,3,4); // hc = height cell
            $pdf->SetFont('Arial','B',7);

            //Background color of header//
//            $pdf->SetFillColor(193,229,252);

            // dapatkan nip pegawai
            $sql = 'SELECT variable FROM pegawaiatributvariable WHERE idatributvariable=1 AND idpegawai = :idpegawai';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai', $idpegawai);
            $stmt->execute();
            $nip = '';
            if($stmt->rowCount() > 0){
                $row = $stmt->fetch(PDO::FETCH_ASSOC);
                $nip = $row['variable'];
            }

            /// header gambar ///
            $urlimage = url('fotonormal/perusahaan').'/'.Session::get('conf_webperusahaan');
//            $urlimage = 'https://dash.smartpresence.id/fotonormal/perusahaan/10950';
//            $urlimage = 'https://dash.smartpresence.id/fotonormal/perusahaan/'.Session::get('conf_webperusahaan');
            if(exif_imagetype($urlimage) == 2){
                // JPEG bernilai 2
                $format = 'JPEG';
            }else{
                // PNG bernilai 3
                $format = 'PNG';
            }
            $pdf->Cell( 20, 20, $pdf->Image($urlimage, $pdf->GetX(), $pdf->GetY(), 20, 20, $format));
            $pdf->Cell(0,10,'',0,1); // enter
            /// header gambar end ///
            //// header ///////
            $pdf->Cell(300,$hc[0],'LAPORAN DAFTAR HADIR HARIAN PER PEGAWAI',0,0,'C');
            $pdf->Cell(0,$hc[2],'',0,1); // enter
            $pdf->Cell(300,$hc[0],'Tanggal: '.Utils::tanggalCantikDariSampai($tanggalawal,$tanggalakhir),0,0,'C');
            $pdf->Cell(0,$hc[0],'',0,1); // enter
            $pdf->Cell(20,$hc[0],'Nama',0,0);
            $pdf->Cell(320,$hc[0],': '.Utils::getNamaPegawai($idpegawai),0,0);
            $pdf->Cell(0,$hc[2],'',0,1); // enter
            $pdf->Cell(20,$hc[0],'NIP',0,0);
            $pdf->Cell(320,$hc[0],': '.$nip,0,0);
            $pdf->Ln();
            //// header ends ///////

            //// header table ///////
            $pdf->Cell($width_cell[0],$hc[0],'Tanggal',1,0,'C');
            $pdf->Cell($width_cell[0],$hc[0],'Hari',1,0,'C');
            $pdf->Cell(90,$hc[2],'JAM',1,0,'C');
            $pdf->Cell($width_cell[2],$hc[0],'Sakit',1,0,'C');
            $pdf->Cell($width_cell[3],$hc[0],'Ijin',1,0,'C');
            $pdf->Cell($width_cell[2],$hc[0],'Alpha',1,0,'C');
            $pdf->Cell($width_cell[3],$hc[0],'Cuti',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[0],'DL SPPD',1,0,'C');
            $pdf->Cell($width_cell[2],$hc[0],'WFH',1,0,'C');
            $pdf->Cell($width_cell[0],$hc[0],'Status',1,0,'C');
            $pdf->Cell($width_cell[0],$hc[0],'Jaga Onsite',1,0,'C');
            $pdf->Cell($width_cell[0],$hc[0],'Jaga Piket',1,0,'C');
            $pdf->Cell($width_cell[0],$hc[0],'Jam Lembur',1,0,'C');
            $pdf->Cell(0,$hc[2],'',0,1); // enter
            $pdf->Cell(40,$hc[1],'',0,0); // row kosong
            $pdf->Cell($width_cell[1],$hc[1],'Masuk',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[1],'Keluar',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],'Total',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],'Kelebihan',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],'Datang',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],'Pulang',1,0,'C');
            $pdf->Cell(0,$hc[2],'',0,1); // enter
            $pdf->Cell(70,$hc[1],'',0,0); // row kosong
            $pdf->Cell($width_cell[1],$hc[2],'Jam Kerja',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],'Jam Kerja',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],'Telat',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],'Cepat',1,0,'C');
            $pdf->Ln();
            //// header table ends ///////
            $pdf->SetFont('Arial','',8);
            //Background color of header//
//            $pdf->SetFillColor(235,236,236);
            //to give alternate background fill color to rows//
//            $fill=false;
            /// each record is one row  ///

            // query sql for data
            $sql = 'SELECT
                        ra.tanggal,
                        IFNULL(rs.idjamkerjashift,\'\') as idjamkerjashift,
                        IFNULL(ra.idalasantidakmasuk,\'\') as idalasantidakmasuk,
                        ra.jadwalmasukkerja,
                        ra.alasantidakmasukkategori,
                        ra.idjamkerja,
                        ra.masukkerja,
                        IFNULL(ra.waktumasuk,\'\') as waktumasuk,
                        IFNULL(ra.waktukeluar,\'\') as waktukeluar,
                        ra.selisihmasuk,
                        ra.selisihkeluar,
                        -- IF(ra.jenisjamkerja=\'full\' OR IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                        --     IF(ra.selisihkeluar>0 and ra.selisihmasuk<0,
                        --         IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                        --             ra.jadwallamakerja,
                        --             IF(ra.selisihkeluar+ra.selisihmasuk>0,ra.jadwallamakerja,ra.selisihkeluar+ra.lamakerja)
                        --             -- ra.lamakerja
                        --         ),
                        --         ra.lamakerja
                        --     ),
                        --     0
                        -- ) as lamakerja,
                        IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                            IF(ra.jadwalmasukkerja=\'y\',
                                IF(ra.jumlahsesi=1,
                                    IF(ra.selisihkeluar>0 and ra.selisihmasuk<0,
                                        IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                                            ra.jadwallamakerja,
                                            IF(ra.selisihkeluar+ra.selisihmasuk>0,ra.jadwallamakerja,ra.selisihkeluar+ra.lamakerja)
                                            -- ra.lamakerja
                                        ),
                                        ra.lamakerja
                                    ),
                                    -- shift
                                    IF(IFNULL(rs.selisihkeluar,\'\')>0 and IFNULL(rs.selisihmasuk,\'\')<0,
                                        IF(rs.selisihkeluar+rs.selisihmasuk>0,rs.lamakerja,IF(rs.selisihkeluar>0,rs.selisihkeluar+rs.lamakerja,rs.lamakerja)),
                                        rs.lamakerja
                                    )
                                ),
                                0
                            ),
                            0
                        ) as totaljamkerja,
                        IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                            IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',
                                IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                                    IF(ra.selisihmasuk<0,ra.selisihkeluar+ra.selisihmasuk,ra.selisihkeluar),
                                    0
                                    -- IF(ra.selisihkeluar+ra.selisihmasuk>0,ra.jadwallamakerja,ra.selisihkeluar+ra.lamakerja)
                                ),
                                0
                            ),
                            0
                        ) as kelebihanjamkerja,
                        IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                            IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',
                                IF(rs.selisihkeluar+rs.lamakerja>TIME_TO_SEC(TIMEDIFF(rs.jadwal_waktu_keluar,rs.jadwal_waktu_masuk)),
                                    IF(rs.selisihmasuk<0,rs.selisihkeluar+rs.selisihmasuk,rs.selisihkeluar),
                                    0
                                ),
                                0
                            ),
                            0
                        ) as kelebihanjamkerjashift,
                        IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihmasuk<0,-1*ra.selisihmasuk,0) as datangtelat,
                        IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihkeluar<0,-1*ra.selisihkeluar,0) as pulangcepat,
                        -- ra.lamakerja,
                        ra.jenisjamkerja,
                        ra.absentidaklengkap,
                        IFNULL(rs.lamakerja,0) as lamakerjashift, -- untuk jaga onsite dan jaga piket
                        -- IF(IFNULL(rs.sambungan_sebelum,\'t\')=\'t\',IFNULL(rs.waktumasuk,\'\'),\'\') as waktumasukshift,
                        -- IF(IFNULL(rs.sambungan_sebelum,\'t\')=\'t\',IFNULL(rs.waktukeluar,\'\'),\'\') as waktukeluarshift,
                        IFNULL(rs.waktumasuk,\'\') as waktumasukshift,
                        IFNULL(rs.waktukeluar,\'\') as waktukeluarshift,
                        IFNULL(rs.sambungan_sebelum,\'t\') as sambungan_sebelum,
                        IF(IFNULL(rs.selisihmasuk,0)<0,IFNULL(-1*rs.selisihmasuk,0),0) as datangtelatshift,
                        -- IF(IFNULL(rs.selisihkeluar,0)<0,IFNULL(-1*rs.selisihkeluar,0),0) as pulangcepatshift,
                        -- IF(IFNULL(rs.sambungan_sebelum,\'t\')=\'y\',IF(SEC_TO_TIME(TIMEDIFF(rs.jadwal_waktu_keluar,ra.waktukeluar))<0,0,SEC_TO_TIME(TIMEDIFF(rs.jadwal_waktu_keluar,ra.waktukeluar))),IF(IFNULL(rs.selisihkeluar,0)<0,IFNULL(-1*rs.selisihkeluar,0),0)) as pulangcepatshift,
                        IF(IFNULL(rs.sambungan_sebelum,\'t\')=\'y\',
                            IF(TIME_TO_SEC(TIMEDIFF(rs.jadwal_waktu_keluar,ra.waktukeluar))<0,0,TIME_TO_SEC(TIMEDIFF(rs.jadwal_waktu_keluar,ra.waktukeluar))),
                            IF(IFNULL(rs.selisihkeluar,0)<0,IFNULL(-1*rs.selisihkeluar,0),0)
                        ) as pulangcepatshift,
                        IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,rs.selisihmasuk,0) as selisihmasukshift,
                        IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,rs.selisihkeluar,0) as selisihkeluarshift,
                        IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',ra.jadwallamakerja,0) as jadwallamakerja,
                        IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',ra.lamakerja,0) as lebih1, -- jadikan format hh:mm
                        IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihmasuk<0,ra.selisihmasuk,0) as lebih2, -- jadikan format hh:mm
                        IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',ra.selisihkeluar,0) as lebih3,
                        IF(ra.idalasantidakmasuk=4,1,0) as cuti, -- cuti tahunan
                        IF(ra.idalasantidakmasuk=1,1,0) as sakit,
                        IF(ra.idalasantidakmasuk=8,1,0) as ijin,
                        IF(ra.idalasantidakmasuk=9,1,0) as alpha,
                        IF(ra.idalasantidakmasuk=3,1,0) as dlsppd,
                        IF(ra.idalasantidakmasuk=10,1,0) as wfh,
                        IF(ra.jenisjamkerja=\'full\' AND ra.jadwalmasukkerja=\'t\' AND ra.masukkerja=\'y\' AND ISNULL(ra.waktumasuk)=false AND ISNULL(ra.selisihkeluar)=false AND ra.lamakerja>7200,ra.lamakerja,0) as lembur,
                        IF(IFNULL(rs.idjamkerjashift,\'\')=17 or IFNULL(rs.idjamkerjashift,\'\')=18 or IFNULL(rs.idjamkerjashift,\'\')=30,IFNULL(rs.lamakerja,0),0) as jagaonsite,
                        IF(IFNULL(rs.idjamkerjashift,\'\')=27 or IFNULL(rs.idjamkerjashift,\'\')=28 or IFNULL(rs.idjamkerjashift,\'\')=29,IFNULL(rs.lamakerja,0),0) as jagapiket,
                        IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ra.masukkerja=\'t\' AND ISNULL(ra.waktumasuk)=true AND ISNULL(ra.waktukeluar)=true,1,0) as tj1,
                        IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ra.masukkerja=\'t\' AND ISNULL(rs.waktumasuk)=true AND ISNULL(rs.waktukeluar)=true,1,0) as tj1shift,
                        IF(:tanggalakhir1=CURRENT_DATE(),0,CONCAT(DATEDIFF(:tanggalakhir2,CURRENT_DATE())+1)) as tj2,
                        getjumlahliburpegawaifull(ra.idpegawai,:tanggalawal0,:tanggalakhir0,true) as L3,
                        IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ((ISNULL(ra.waktumasuk)=true AND ISNULL(ra.waktukeluar)=false) || (ISNULL(ra.waktumasuk)=false AND ISNULL(ra.waktukeluar)=true)),1,0) as kr,
                        IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ((ISNULL(rs.waktumasuk)=true AND ISNULL(rs.waktukeluar)=false) || (ISNULL(rs.waktumasuk)=false AND ISNULL(rs.waktukeluar)=true)),1,0) as kr_shift
                        -- IFNULL(rs.selisihmasuk,0) as selisihmasukshift,
                        -- IFNULL(rs.selisihkeluar,0) as selisihkeluarshift
                    FROM
                        rekapabsen ra
                        -- LEFT JOIN rekapshift rs ON ra.idpegawai=rs.idpegawai AND rs.tanggal=ra.tanggal AND rs.idjamkerjashift NOT IN(17,18,30,27,28,29),
                        LEFT JOIN rekapshift rs ON ra.idpegawai=rs.idpegawai AND rs.tanggal=ra.tanggal,
                        pegawai p
                    WHERE
                        ra.idpegawai=p.id AND
                        ra.tanggal BETWEEN :tanggalawal AND :tanggalakhir AND
                        ra.idpegawai = :idpegawai
                    ORDER BY
                        ra.tanggal';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalakhir1', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir2', $tanggalakhir);
            $stmt->bindValue(':tanggalawal0', $tanggalawal);
            $stmt->bindValue(':tanggalakhir0', $tanggalakhir);
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            $stmt->bindValue(':idpegawai', $idpegawai);
            $stmt->execute();

            // variabel buat jumlah
            $totallamakerja = 0;
            $totalkelebihanjamkerja = 0;
            $totaldatangtelat = 0;
            $totalpulangcepat = 0;
            $totalsakit = 0;
            $totalizin = 0;
            $totalalpha = 0;
            $totalcuti = 0;
            $totaldlsppd = 0;
            $totalwfh = 0;
            $totaljagaonsite = 0;
            $totaljagapiket = 0;
            $totaljamlembur = 0;
            $totalpagi = 0;
            $totalsore = 0;
            $totalmalam = 0;
            $totalkr = 0;
            $totaltj = 0;
            $tj1=0;
            $tj2 = 0;
            $L3 = 0;
            $tanggalpembanding = '';
            while($row = $stmt->fetch(PDO::FETCH_ASSOC)){
                $waktumasuk = $row['jenisjamkerja'] == 'full' ? $row['waktumasuk'] : $row['waktumasukshift'];
                $waktukeluar = $row['jenisjamkerja'] == 'full' ? $row['waktukeluar'] : $row['waktukeluarshift'];
                $kr = $row['jenisjamkerja'] == 'full' ? $row['kr'] : $row['kr_shift'];
                $tj = $row['jenisjamkerja'] == 'full' ? $row['tj1'] : $row['tj1shift'];
                $totaljamkerja = $row['totaljamkerja'];
                $kelebihanjamkerja = $row['jenisjamkerja'] == 'full' ? $row['kelebihanjamkerja'] : $row['kelebihanjamkerjashift'];
                $generate = true;

                if($row['jenisjamkerja'] == 'shift' AND $row['sambungan_sebelum'] == 'y' AND $row['waktumasukshift'] != '' AND $row['waktukeluarshift'] != ''){
                    $waktumasuk = $row['waktumasukshift'];
                    $waktukeluar = $row['waktukeluarshift'];
                }else if($row['jenisjamkerja'] == 'shift' AND $tanggalpembanding == $row['tanggal'] AND $row['sambungan_sebelum'] == 'y' AND ($row['waktumasukshift'] == '' OR $row['waktukeluarshift'] == '')){
                    $generate = false;
                }

                // jika hari beda dan ada cuman absen masuk/absen keluar, maka hanya isikan status saja isinya TJ
                if($row['jenisjamkerja'] == 'shift' AND $tanggalpembanding != $row['tanggal'] AND $row['sambungan_sebelum'] == 'y' AND ($row['waktumasukshift'] == '' OR $row['waktukeluarshift'] == '')){
                    $waktumasuk = '';
                    $waktukeluar = '';
                    $totaljamkerja = '';
                    $kelebihanjamkerja = 0;
                    $tj = 1;
                }

                // jika dia masuk di waktu hari libur
                if($row['jadwalmasukkerja'] == 't'){
                    // cari waktu masuk di logabsen
                     $sql1 = 'SELECT waktu FROM logabsen WHERE idpegawai = :idpegawai AND waktu BETWEEN :tanggalawal AND :tanggalakhir AND masukkeluar = \'m\' ORDER BY waktu LIMIT 1';
                     $stmt1 = $pdo->prepare($sql1);
                     $stmt1->bindValue(':idpegawai',$idpegawai);
                     $stmt1->bindValue(':tanggalawal',$row['tanggal'].' 00:00:00');
                     $stmt1->bindValue(':tanggalakhir',$row['tanggal'].' 23:59:59');
                     $stmt1->execute();
                     if($stmt1->rowCount() > 0){
                         $row1 = $stmt1->fetch(PDO::FETCH_ASSOC);
                         $waktumasuk = $row1['waktu'];
                         // cari waktu keluar di logabsen
                         $sql2 = 'SELECT waktu FROM logabsen WHERE idpegawai = :idpegawai AND waktu BETWEEN :tanggalawal AND :tanggalakhir AND masukkeluar = \'k\' ORDER BY waktu LIMIT 1';
                         $stmt2 = $pdo->prepare($sql2);
                         $stmt2->bindValue(':idpegawai',$idpegawai);
                         $stmt2->bindValue(':tanggalawal',$waktumasuk);
                         $stmt2->bindValue(':tanggalakhir',$row['tanggal'].' 23:59:59');
                         $stmt2->execute();
                         if($stmt2->rowCount() > 0){
                             $row2 = $stmt2->fetch(PDO::FETCH_ASSOC);
                             $waktukeluar = $row2['waktu'];
                         }
                     }

                }

                $tanggalpembanding = $row['tanggal'];
                if($generate){
                    $arrwaktumasuk = $waktumasuk != '' ? explode(' ', $waktumasuk) : '';
                    $arrwaktukeluar = $waktukeluar != '' ? explode(' ', $waktukeluar) : '';

                    $fill = false;

                    $datangtelat = 0;
                    $pulangcepat = 0;

                    // kl
                    $totalkr = $totalkr+$kr;
//                if($row['absentidaklengkap'] != ''){
//                    $totalkr = $totalkr+1;
//                }

                    // tj(tidak jelas)
                    $tj1 = $tj1+$tj;
                    $tj2 = $row['tj2'];
                    $L3 = $row['L3'];
//                if($row['jadwalmasukkerja'] == 't' && $row['masukkerja'] == 'y'){
//                    $totaltj = $totaltj+1;
//                }

                    // hari
                    $tgl = $row['tanggal'];
                    $dow = date('w', strtotime($tgl)); // day of week (0 minggu, 6 sabtu)

                    // status(jenis jamkerja)
                    $status = '';
                    // pagi full
                    if($row['jenisjamkerja'] == 'full' && $row['idalasantidakmasuk'] == '' && $row['jadwalmasukkerja'] == 'y' && ($row['idjamkerja'] == 1 || $row['idjamkerja'] == 5 || $row['idjamkerja'] == 8)){
                        $status = 'Pagi';
                        if($row['waktumasuk'] != '' && $row['waktukeluar'] != '' && $kr == 0){
                            $totalpagi = $totalpagi+1;
                        }
                    }
                    // pagi shift
                    if($row['jenisjamkerja'] == 'shift' && $row['idalasantidakmasuk'] == '' && $row['jadwalmasukkerja'] == 'y' && ($row['idjamkerjashift'] == 25 || $row['idjamkerjashift'] == 26 || $row['idjamkerjashift'] == 31 || $row['idjamkerjashift'] == 32 || $row['idjamkerjashift'] == 33 || $row['idjamkerjashift'] == 23 || $row['idjamkerjashift'] == 15 || $row['idjamkerjashift'] == 16 || $row['idjamkerjashift'] == 4 || $row['idjamkerjashift'] == 6 || $row['idjamkerjashift'] == 13 || $row['idjamkerjashift'] == 11 || $row['idjamkerjashift'] == 38 || $row['idjamkerjashift'] == 39 || $row['idjamkerjashift'] == 19 || $row['idjamkerjashift'] == 20 || $row['idjamkerjashift'] == 21 || $row['idjamkerjashift'] == 42 || $row['idjamkerjashift'] == 43 || $row['idjamkerjashift'] == 36 || $row['idjamkerjashift'] == 22 || $row['idjamkerjashift'] == 44 || $row['idjamkerjashift'] == 46 || $row['idjamkerjashift'] == 47 || $row['idjamkerjashift'] == 48 || $row['idjamkerjashift'] == 49)){
                        $status = 'Pagi';
                        if($kr == 0) {
                            $totalpagi = $totalpagi + 1;
                        }
                    }
                    // sore shift
                    if($row['jenisjamkerja'] == 'shift' && $row['idalasantidakmasuk'] == '' && $row['jadwalmasukkerja'] == 'y' && ($row['idjamkerjashift'] == 34 || $row['idjamkerjashift'] == 5 || $row['idjamkerjashift'] == 7 || $row['idjamkerjashift'] == 14 || $row['idjamkerjashift'] == 12 || $row['idjamkerjashift'] == 41 || $row['idjamkerjashift'] == 37)){
                        $status = 'Sore';
                        if($row['waktumasukshift'] != '' && $row['waktukeluarshift'] != '' && $kr == 0){
                            $totalsore = $totalsore + 1;
                        }
                    }
                    // malam shift
                    if($row['jenisjamkerja'] == 'shift' && $row['idalasantidakmasuk'] == '' && $row['jadwalmasukkerja'] == 'y' && ($row['idjamkerjashift'] == 24 || $row['idjamkerjashift'] == 8 || $row['idjamkerjashift'] == 10 || $row['idjamkerjashift'] == 45)){
                        $status = 'Malam';
                        if($kr == 0) {
                            $totalmalam = $totalmalam + 1;
                        }
                    }
                    if($row['jadwalmasukkerja'] == 't'){
                        $status = 'Libur';
                        $pdf->setFillColor(255,192,203);
                        $fill=true;
                    }
                    if($row['idjamkerjashift'] != 17 && $row['idjamkerjashift'] != 18 && $row['idjamkerjashift'] != 30 && $row['idjamkerjashift'] != 27 && $row['idjamkerjashift'] != 28 && $row['idjamkerjashift'] != 29){
                        $totallamakerja = $totallamakerja + $totaljamkerja;
                        $totalkelebihanjamkerja = $totalkelebihanjamkerja + $kelebihanjamkerja;
                        $datangtelat = $row['jenisjamkerja'] == 'full' ? $row['datangtelat'] : $row['datangtelatshift'];
                        $pulangcepat = $row['jenisjamkerja'] == 'full' ? $row['pulangcepat'] : $row['pulangcepatshift'];
                    }
                    $totaldatangtelat = $totaldatangtelat + $datangtelat;
                    $totalpulangcepat = $totalpulangcepat + $pulangcepat;
                    if($row['sakit'] != ''){
                        $status = 'Sakit';
                        $totalsakit = $totalsakit+1;
                    }
                    if($row['ijin'] != ''){
                        $status = 'Ijin';
                        $totalizin = $totalizin+1;
                    }
                    if($row['alpha'] != ''){
                        $status = 'Alpha';
                        $totalalpha = $totalalpha+1;
                    }
                    if($row['cuti'] != ''){
                        $status = 'Cuti';
                        $totalcuti = $totalcuti+1;
                    }
                    if($row['idalasantidakmasuk'] == 5 || $row['idalasantidakmasuk'] == 6 || $row['idalasantidakmasuk'] == 7){ // request 20201001
                        $status = 'Cuti';
                        $totalcuti = $totalcuti+1;
                    }
                    if($row['dlsppd'] != ''){
                        $status = 'DL SPPD';
                        $totaldlsppd = $totaldlsppd+1;
                    }
                    if($row['wfh'] != ''){
                        $status = 'WFH';
                        $totalwfh = $totalwfh+1;
                    }
                    if($row['jagaonsite'] > 0){
                        $totaljagaonsite = $totaljagaonsite + 1;
                    }
                    if($row['jagapiket'] > 0){
                        $totaljagapiket = $totaljagapiket + 1;
                    }
                    if($row['lembur'] > 0){
                        $totaljamlembur = $totaljamlembur + 1;
                    }
                    if($kr == 1){
                        $status = 'KR';
                    }
                    if($tj == 1){
                        $status = 'TJ';
                        $totalpagi = $totalpagi == 0 ? 0 : $totalpagi-1;
                    }
                    if($row['idalasantidakmasuk'] == '2'){
                        $status = 'DL NON SPPD';
                    }

                    $lembur = $row['lembur'];
                    if($row['jenisjamkerja'] == 'full' && $kelebihanjamkerja > 7200){
                        $lembur = $row['lembur'] + $kelebihanjamkerja;
                        $totaljamlembur = $totaljamlembur + 1;
                        $totalkelebihanjamkerja = $totalkelebihanjamkerja - $kelebihanjamkerja;
                    }

                    $pdf->Cell($width_cell[0],$hc[2],Utils::convertYmd2Dmy($tgl),1,0,'C', $fill);
                    $pdf->Cell($width_cell[0],$hc[2],Utils::getHari($dow+1),1,0,'C', $fill);
                    $pdf->Cell($width_cell[1],$hc[2],$waktumasuk != '' ? $arrwaktumasuk[1] : '',1,0,'C', $fill);
                    $pdf->Cell($width_cell[1],$hc[2],$waktukeluar != '' ? $arrwaktukeluar[1] : '',1,0,'C', $fill);
                    $pdf->Cell($width_cell[1],$hc[2],Utils::sec2hhmm($totaljamkerja),1,0,'C', $fill);
                    $pdf->Cell($width_cell[1],$hc[2],Utils::sec2hhmm($kelebihanjamkerja),1,0,'C', $fill);
                    $pdf->Cell($width_cell[1],$hc[2],Utils::sec2hhmm($datangtelat),1,0,'C', $fill);
                    $pdf->Cell($width_cell[1],$hc[2],Utils::sec2hhmm($pulangcepat),1,0,'C', $fill);
                    $pdf->Cell($width_cell[2],$hc[2],$row['sakit'] > 0 ? 1 : '',1,0,'C', $fill);
                    $pdf->Cell($width_cell[3],$hc[2],$row['ijin'] > 0 ? 1 : '',1,0,'C', $fill);
                    $pdf->Cell($width_cell[2],$hc[2],$row['alpha'] > 0 ? 1 : '',1,0,'C', $fill);
                    $pdf->Cell($width_cell[3],$hc[2],$row['cuti'] > 0 ? 1 : '',1,0,'C', $fill);
                    $pdf->Cell($width_cell[1],$hc[2],$row['dlsppd'] > 0 ? 1 : '',1,0,'C', $fill);
                    $pdf->Cell($width_cell[2],$hc[2],$row['wfh'] > 0 ? 1 : '',1,0,'C', $fill);
                    $pdf->Cell($width_cell[0],$hc[2],$status,1,0,'C', $fill);
                    $pdf->Cell($width_cell[0],$hc[2],Utils::sec2hhmm($row['jagaonsite']),1,0,'C', $fill);
                    $pdf->Cell($width_cell[0],$hc[2],Utils::sec2hhmm($row['jagapiket']),1,0,'C', $fill);
                    $pdf->Cell($width_cell[0],$hc[2],Utils::sec2hhmm($lembur),1,0,'C', $fill);
                    $pdf->Ln();
                }
            }
            // jumlah/total
            $pdf->Cell($width_cell[0],$hc[2],'Jumlah',1,0);
            $pdf->Cell($width_cell[0],$hc[2],'',1,0);
            $pdf->Cell($width_cell[1],$hc[2],'',1,0);
            $pdf->Cell($width_cell[1],$hc[2],'',1,0);
            $pdf->Cell($width_cell[1],$hc[2],$totallamakerja > 0 ? Utils::sec2hhmm($totallamakerja) : '00:00',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],$totalkelebihanjamkerja > 0 ? Utils::sec2hhmm($totalkelebihanjamkerja) : '00:00',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],$totaldatangtelat > 0 ? Utils::sec2hhmm($totaldatangtelat) : '00:00',1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],$totalpulangcepat > 0 ? Utils::sec2hhmm($totalpulangcepat) : '00:00',1,0,'C');
            $pdf->Cell($width_cell[2],$hc[2],$totalsakit,1,0,'C');
            $pdf->Cell($width_cell[3],$hc[2],$totalizin,1,0,'C');
            $pdf->Cell($width_cell[2],$hc[2],$totalalpha,1,0,'C');
            $pdf->Cell($width_cell[3],$hc[2],$totalcuti,1,0,'C');
            $pdf->Cell($width_cell[1],$hc[2],$totaldlsppd,1,0,'C');
            $pdf->Cell($width_cell[2],$hc[2],$totalwfh,1,0,'C');
            $pdf->Cell($width_cell[0],$hc[2],'',1,0,'C');
            $pdf->Cell($width_cell[0],$hc[2],$totaljagaonsite,1,0,'C');
            $pdf->Cell($width_cell[0],$hc[2],$totaljagapiket,1,0,'C');
            $pdf->Cell($width_cell[0],$hc[2],$totaljamlembur,1,0,'C');
            $pdf->Ln();
            
            // total tj
            $tj2 = $tj2 < 0 ? 0 : $tj2;
            $totaltj = $tj1+$tj2-$L3;
            if($tj1 < 0){
                $totaltj=0;
            }

            $pdf->Cell(0,$hc[2],'',0,1); // enter
            $pdf->Cell($width_cell[1],$hc[2],'Pagi',0,0);
            $pdf->Cell($width_cell[1],$hc[2],$totalpagi,0,0);
            $pdf->Cell(0,$hc[2],'',0,1); // enter
            $pdf->Cell($width_cell[1],$hc[2],'Sore',0,0);
            $pdf->Cell($width_cell[1],$hc[2],$totalsore,0,0);
            $pdf->Cell(0,$hc[2],'',0,1); // enter
            $pdf->Cell($width_cell[1],$hc[2],'Malam',0,0);
            $pdf->Cell($width_cell[1],$hc[2],$totalmalam,0,0);
            $pdf->Cell(0,$hc[2],'',0,1); // enter
            $pdf->Cell($width_cell[1],$hc[2],'KR',0,0);
            $pdf->Cell($width_cell[1],$hc[2],$totalkr,0,0);
            $pdf->Cell(0,$hc[2],'',0,1); // enter
            $pdf->Cell($width_cell[1],$hc[2],'TJ',0,0);
            $pdf->Cell($width_cell[1],$hc[2],$totaltj,0,0);
            // total status(jamkerja)

            $pdf->Output('D', time() . '_' . trans('all.perpegawai') . 'tipe2.pdf');
        }
    }

    public function rekapAbsenPerpegawaiPDF($tanggalawal, $tanggalakhir, $idpegawai){
        if(Utils::cekHakakses('laporanekspor','l')){
            require(public_path() .'/fpdf/fpdf.php');

            //Cell(width , height , text , border , endline , [align])
            Utils::insertLogUser('Ekspor laporan rekapabsen per pegawai PDF');

            $pdo = DB::connection('perusahaan_db')->getPdo();

            $where1 = '';
            $where2 = '';
            if ($tanggalawal != '' && $tanggalakhir != '') {
                $where1 .= ' AND ra.tanggal BETWEEN STR_TO_DATE(:tanggalawal1,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir1,"%d/%m/%Y")';
                $where2 .= ' AND ra.tanggal BETWEEN STR_TO_DATE(:tanggalawal2,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir2,"%d/%m/%Y")';
            }

            $sql = 'SELECT
                        ra.tanggal,
                        IFNULL(ra.idharilibur,"") as idharilibur,
                        IFNULL(ra.waktumasuk,"") as waktumasukdatetime,
                        IFNULL(ra.waktukeluar,"") as waktukeluardatetime,
                        IFNULL(TIME(ra.waktumasuk),"") as waktumasuk,
                        IFNULL(TIME(ra.waktukeluar),"") as waktukeluar,
                        IF(ra.selisihmasuk>0,ra.selisihmasuk,"") as datangawal,
                        IF(ra.selisihmasuk<0,-1*ra.selisihmasuk,"") as terlambat,
                        IF(ra.selisihkeluar<0,-1*ra.selisihkeluar,"") as pulanglebihawal,
                        IF(ra.selisihkeluar>0,ra.selisihkeluar,"") as pulangterlambat,
                        SEC_TO_TIME(ra.lamakerja) as lamakerja,
                        SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime,
                        SEC_TO_TIME(ra.lamalembur) as lamalembur,
                        ra.jadwalmasukkerja,
                        ra.masukkerja,
                        ra.absentidaklengkap,
                        IFNULL(hl.keterangan,"") as keteranganharilibur,
                        IFNULL(atm.kategori,"") as kategorialasantidakmasuk,
                        IFNULL(atm.alasan,"") as alasantidakmasuk,
                        IFNULL(x.jamkerja,"") as jamkerja,
                        ra.jadwallamakerja as jamkerjaefektif
                    FROM
                        rekapabsen ra
                        LEFT JOIN (
                            SELECT
                                ra.id,
                                GROUP_CONCAT(DATE_FORMAT(raj.waktu,"%H:%i") ORDER BY raj.waktu SEPARATOR " - ") as jamkerja
                            FROM
                                rekapabsen ra,
                                rekapabsen_jadwal raj
                            WHERE
                                ra.id=raj.idrekapabsen AND
                                raj.checking IN ("start", "end") AND
                                ra.idpegawai = :idpegawai1
                                '.$where1.'
                            GROUP BY
                                ra.id
                        ) x ON ra.id = x.id
                        LEFT JOIN harilibur hl ON ra.idharilibur = hl.id
                        LEFT JOIN alasantidakmasuk atm ON ra.idalasantidakmasuk = atm.id
                    WHERE
                        ra.idpegawai = :idpegawai2 '.$where2.'
                    ORDER BY
                        ra.tanggal ASC';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idpegawai1', $idpegawai);
            $stmt->bindValue(':idpegawai2', $idpegawai);
            if ($tanggalawal != '' && $tanggalakhir != '') {
                $stmt->bindValue(':tanggalawal1', $tanggalawal);
                $stmt->bindValue(':tanggalakhir1', $tanggalakhir);
                $stmt->bindValue(':tanggalawal2', $tanggalawal);
                $stmt->bindValue(':tanggalakhir2', $tanggalakhir);
            }
            $stmt->execute();

            $pdf = new FPDF();
            $pdf->AddPage('L');

            $width_cell=array(20,15,15,15,15,15,15,15,15,20,25,25,65);
            $pdf->SetFont('Arial','B',6);

            //Background color of header//
            $pdf->SetFillColor(193,229,252);

            //Cell(width , height , text , border , endline , [align])

            $periodecantik = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));

            $pdop = DB::getPdo();
            $sql1 = 'SELECT folderroot FROM perusahaan_route WHERE idperusahaan = :idperusahaan';
            $stmt1 = $pdop->prepare($sql1);
            $stmt1->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
            $stmt1->execute();
            $rowp = $stmt1->fetch(PDO::FETCH_ASSOC);
            $path = $rowp['folderroot'].'/logo_perusahaan';
            if (file_exists($path)) {
//                $urlimage = str_replace('https','http',url('foto/perusahaan')).'/'.Session::get('conf_webperusahaan');
                $urlimage = url('fotonormal/perusahaan').'/'.Session::get('conf_webperusahaan');
//                $urlimage = 'http://localhost:55555/foto/perusahaan/'.Session::get('conf_webperusahaan');
                if(exif_imagetype($urlimage) == 2){
                    // JPEG bernilai 2
                    $format = 'JPEG';
                }else{
                    // PNG bernilai 3
                    $format = 'PNG';
                }
                $pdf->Cell( 20, 20, $pdf->Image($urlimage, $pdf->GetX(), $pdf->GetY(), 20, 20, $format));
                $pdf->Cell(5);
                $pdf->Cell(50,3,trans('all.laporankehadiranpegawai'));
                $pdf->Ln();
                $pdf->Cell(25);
                $pdf->Cell(50,3,trans('all.periode').' : '.$periodecantik);
                $pdf->Ln();
                $pdf->Cell(25);
                $pdf->Cell(50,3,trans('all.nama').' : '.Utils::getNamaPegawai($idpegawai));
                $pdf->Ln();
                $pdf->Cell(25);
                $pdf->Cell(50,3,trans('all.pin').' : '.Utils::getDataWhere($pdo,'pegawai','pin','id', $idpegawai));
                $pdf->Ln();
                $sql2 = 'SELECT
                            av.atribut,
                            pa.variable
                        FROM
                            atributvariable av,
                            pegawaiatributvariable pa
                        WHERE
                            pa.idatributvariable=av.id AND
                            av.penting = "y" AND
                            pa.idpegawai = :idpegawai';
                $stmt2 = $pdo->prepare($sql2);
                $stmt2->bindValue(':idpegawai', $idpegawai);
                $stmt2->execute();
                if ($stmt2->rowCount() > 0) {
                    while ($row2 = $stmt2->fetch(PDO::FETCH_ASSOC)) {
                        $pdf->Cell(25);
                        $pdf->Cell(50,3,$row2['atribut'].' : '.$row2['variable']);
                        $pdf->Ln();
                    }
                }
                $pdf->Ln();
                $pdf->Ln(7);
            }else{
                $pdf->Cell(50,3,trans('all.laporankehadiranpegawai'));
                $pdf->Ln();
                $pdf->Cell(50,3,trans('all.periode').' : '.$periodecantik);
                $pdf->Ln();
                $pdf->Cell(50,3,trans('all.nama').' : '.Utils::getNamaPegawai($idpegawai));
                $pdf->Ln();
                $pdf->Cell(50,3,trans('all.pin').' : '.Utils::getDataWhere($pdo,'pegawai','pin','id', $idpegawai));
                $pdf->Ln();
                $sql1 = 'SELECT
                            av.atribut,
                            pa.variable
                        FROM
                            atributvariable av,
                            pegawaiatributvariable pa
                        WHERE
                            pa.idatributvariable=av.id AND
                            av.penting = "y" AND
                            pa.idpegawai = :idpegawai';
                $stmt1 = $pdo->prepare($sql1);
                $stmt1->bindValue(':idpegawai', $idpegawai);
                $stmt1->execute();
                if ($stmt1->rowCount() > 0) {
                    while ($row1 = $stmt1->fetch(PDO::FETCH_ASSOC)) {
                        $pdf->Cell(50,3,$row1['atribut'].' : '.$row1['variable']);
                        $pdf->Ln();
                    }
                }
                $pdf->Ln();
            }

            $pdf->Cell($width_cell[0],6,trans('all.tanggal'),1,0,'C');
            $pdf->Cell(30,3,trans('all.jamkerja'),1,0,'C');
            $pdf->Cell($width_cell[3],6,trans('all.jammasuk'),1,0,'C');
            $pdf->Cell($width_cell[4],6,trans('all.jampulang'),1,0,'C');
            $pdf->Cell(30,3,trans('all.jamdatang'),1,0,'C');
            $pdf->Cell(30,3,trans('all.jumlahjampulang'),1,0,'C');
            $pdf->Cell($width_cell[9],6,trans('all.terlambataktual'),1,0,'C');
            $pdf->Cell($width_cell[10],6,trans('all.jumlahjamefektif'),1,0,'C');
            $pdf->Cell($width_cell[11],6,trans('all.jumlahjamaktual'),1,0,'C');
            $pdf->Cell($width_cell[12],6,trans('all.keterangan'),1,0,'C');
            $pdf->Cell(0,3,'',0,1); // enter
            $pdf->Cell(20,3,'',0,0); // row kosong
            $pdf->Cell($width_cell[1],3,trans('all.masuk'),1,0,'C');
            $pdf->Cell($width_cell[2],3,trans('all.pulang'),1,0,'C');
            $pdf->Cell(15,3,'',0,0); // row kosong
            $pdf->Cell(15,3,'',0,0); // row kosong
            $pdf->Cell($width_cell[5],3,trans('all.cepat'),1,0,'C');
            $pdf->Cell($width_cell[6],3,trans('all.telat'),1,0,'C');
            $pdf->Cell($width_cell[7],3,trans('all.cepat'),1,0,'C');
            $pdf->Cell($width_cell[8],3,trans('all.telat'),1,0,'C');
            $pdf->Cell($width_cell[0],3,'',0,0); // row kosong
            $pdf->Cell($width_cell[10],3,'',0,0); // row kosong
            $pdf->Cell($width_cell[11],3,'',0,0); // row kosong
            $pdf->Cell($width_cell[12],3,'',0,0); // row kosong
            $pdf->Ln();
            //// header ends ///////
            $pdf->SetFont('Arial','',6);
            //Background color of header//
            $pdf->SetFillColor(235,236,236);
            //to give alternate background fill color to rows//
            $fill=false;
            /// each record is one row  ///

            $total_harikerja = 0;
            $total_jamdatang_cepat = 0;
            $total_jamdatang_telat = 0;
            $total_jampulang_cepat = 0;
            $total_jampulang_telat = 0;
            $total_terlambat = 0;
            $total_jamefektif = 0;
            $total_jamaktual = 0;

            while ($row =  $stmt->fetch(PDO::FETCH_ASSOC)) {
                $jamkerja = explode('-',$row['jamkerja']);
                $jamkerjaefektif = floor($row['jamkerjaefektif']/60);

                // terlambataktual
                $terlambataktual = 0;
                $jamkerjaaktual = 0;

                if($row['waktumasukdatetime'] != '' || $row['waktukeluardatetime'] != ''){
                    $total_harikerja = $total_harikerja + 1;
                    $pulangterlambat = $row['pulangterlambat'] > 1800 ? floor(1800/60) : floor($row['pulangterlambat']/60);
                    if($pulangterlambat > 0 || $row['pulanglebihawal'] != 0) {
                        $terlambataktual = floor($row['terlambat']/60) + floor($row['pulanglebihawal']/60) - $pulangterlambat;
                    }
                    if($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't'){
                        // jika harilibur dan pegawai tsb tetap masuk, hitung jam kerja aktual dari waktu keluar di kurangi waktu masuk
                        if($row['waktumasukdatetime'] != '' && $row['waktukeluardatetime'] != ''){
                            $jamkerjaaktual = floor(abs(strtotime($row['waktukeluardatetime']) - strtotime($row['waktumasukdatetime'])) / 60);
                        }
                    }else{
                        // jika tidak harilibur, jam kerja aktual dari jamkerjaefektif
                        $jamkerjaaktual = $jamkerjaefektif;
                    }
                    if ($terlambataktual>0) {
                        $jamkerjaaktual = $jamkerjaaktual - $terlambataktual;
                    }
                }

                //jika dispensasi jamkerjaaktual dari jam kerjaefektif
                if($row['kategorialasantidakmasuk'] == 'd'){
                    $jamkerjaaktual = $jamkerjaefektif;
                }

                if($row['absentidaklengkap'] != ''){
                    $jamkerjaaktual = floor(14400/60); // 4jam (permintaan heerjan)
                }

                if($row['kategorialasantidakmasuk'] == 'i' || $row['kategorialasantidakmasuk'] == 's' || $row['kategorialasantidakmasuk'] == 'c'){
                    $jamkerjaaktual = 0;
                    $jamkerjaefektif = 0;
                }

                $datangawal = $row['datangawal'] != '' ? floor($row['datangawal']/60) : 0;
                $terlambat = $row['terlambat'] != '' ? floor($row['terlambat']/60) : 0;
                $pulanglebihawal = $row['pulanglebihawal'] != '' ? floor($row['pulanglebihawal']/60) : 0;
                $pulangterlambat = $row['pulangterlambat'] != '' ? floor($row['pulangterlambat']/60) : 0;

                $total_jamdatang_cepat = $total_jamdatang_cepat + $datangawal ;
                $total_jamdatang_telat = $total_jamdatang_telat + $terlambat;
                $total_jampulang_cepat = $total_jampulang_cepat + $pulanglebihawal;
                $total_jampulang_telat = $total_jampulang_telat + $pulangterlambat;
                $total_terlambat = $total_terlambat + $terlambataktual;
                $total_jamefektif = $total_jamefektif + $jamkerjaefektif;
                $total_jamaktual = $total_jamaktual + $jamkerjaaktual;

                //keterangan
                $keterangan = '';
                if($terlambat > 0){
                    $keterangan .= trans('all.terlambat').', ';
                }
                if($pulanglebihawal > 0){
                    $keterangan .= trans('all.pulangawal').', ';
                }
                if($row['absentidaklengkap'] == 'm'){
                    $keterangan .= trans('all.kurangabsenmasuk').', ';
                }
                if($row['absentidaklengkap'] == 'k'){
                    $keterangan .= trans('all.kurangabsenkeluar').', ';
                }
                if($row['alasantidakmasuk'] != ''){
                    $keterangan .= $row['alasantidakmasuk'].', ';
                }
                if($row['keteranganharilibur'] != ''){
                    $keterangan .= $row['keteranganharilibur'].', ';
                }
                if($row['jadwalmasukkerja'] == 't'){
                    $keterangan = trans('all.libur').', ';
                }

                if($row['idharilibur'] != '' || $row['jadwalmasukkerja'] == 't'){
                    //Setting the text color to red
                    $pdf->SetTextColor(194,8,8);
                    $pdf->Cell($width_cell[0],3,Utils::tanggalCantik($row['tanggal']),1,0,'C');
                    //Setting the text color to black
                    $pdf->SetTextColor(0,0,0);
                }else{
                    $pdf->Cell($width_cell[0],3,Utils::tanggalCantik($row['tanggal']),1,0,'C');
                }
                $pdf->Cell($width_cell[1],3,$row['jamkerja'] != '' ? $jamkerja[0] : '-',1,0,'C');
                $pdf->Cell($width_cell[2],3,$row['jamkerja'] != '' ? $jamkerja[1] : '-',1,0,'C');
                $pdf->Cell($width_cell[3],3,$row['waktumasuk'] != '' ? substr($row['waktumasuk'], 0, -3) : '-',1,0,'C');
                $pdf->Cell($width_cell[4],3,$row['waktukeluar'] != '' ? substr($row['waktukeluar'], 0, -3) : '-',1,0,'C');
                $pdf->Cell($width_cell[5],3,$datangawal > 0 ? Utils::min2hhmm($datangawal) : '-',1,0,'C');
                $pdf->Cell($width_cell[6],3,$terlambat > 0 ? Utils::min2hhmm($terlambat) : '-',1,0,'C');
                $pdf->Cell($width_cell[7],3,$pulanglebihawal > 0 ? Utils::min2hhmm($pulanglebihawal) : '-',1,0,'C');
                $pdf->Cell($width_cell[8],3,$pulangterlambat > 0 ? Utils::min2hhmm($pulangterlambat) : '-',1,0,'C');
                $pdf->Cell($width_cell[9],3,$terlambataktual > 0 ? Utils::min2hhmm($terlambataktual) : '-',1,0,'C');
                $pdf->Cell($width_cell[10],3,$jamkerjaefektif > 0 ? Utils::min2hhmm($jamkerjaefektif) : '-',1,0,'C');
                $pdf->Cell($width_cell[11],3,$jamkerjaaktual > 0 ? Utils::min2hhmm($jamkerjaaktual) : '-',1,0,'C');
                $pdf->Cell($width_cell[12],3,$keterangan != '' ? substr($keterangan, 0, -2) : ($row['masukkerja'] == 'y' ? '' : trans('all.tanpaketerangan')),1,0,'C');
                $pdf->Ln();
                //to give alternate background fill  color to rows//
                $fill = !$fill;
            }

            $pdf->Cell(80,3,trans('all.total').' '.$total_harikerja.' '.trans('all.harikerja'),1,0,'R');
            $pdf->Cell($width_cell[5],3,$total_jamdatang_cepat > 0 ? Utils::min2hhmm($total_jamdatang_cepat) : '-',1,0,'C');
            $pdf->Cell($width_cell[6],3,$total_jamdatang_telat > 0 ? Utils::min2hhmm($total_jamdatang_telat) : '-',1,0,'C');
            $pdf->Cell($width_cell[7],3,$total_jampulang_cepat > 0 ? Utils::min2hhmm($total_jampulang_cepat) : '-',1,0,'C');
            $pdf->Cell($width_cell[8],3,$total_jampulang_telat > 0 ? Utils::min2hhmm($total_jampulang_telat) : '-',1,0,'C');
            $pdf->Cell($width_cell[9],3,$total_terlambat > 0 ? Utils::min2hhmm($total_terlambat) : '-',1,0,'C');
            $pdf->Cell($width_cell[10],3,$total_jamefektif > 0 ? Utils::min2hhmm($total_jamefektif) : '-',1,0,'C');
            $pdf->Cell($width_cell[11],3,$total_jamaktual > 0 ? Utils::min2hhmm($total_jamaktual) : '-',1,0,'C');
            $pdf->Cell($width_cell[12],3,'',1,0,'C');

            /// end of records ///
            $pdf->Output('D', time() . '_' . trans('all.perpegawai') . '.pdf');
        }
    }

    public function EksporLainnyaTipe1($tanggalawal,$tanggalakhir,$atribut,$jamkerjafull,$jamkerjashift){
        if(Utils::cekHakakses('laporanekspor','l')){
            $objPHPExcel = new PHPExcel();
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );
            $tanggalawal = Utils::convertDmy2Ymd($tanggalawal);
            $tanggalakhir = Utils::convertDmy2Ymd($tanggalakhir);
            $aht1 = 3;// angkaheadertable
            $aht2 = $aht1+1;// angkaheadertable

            Utils::setPropertiesExcel($objPHPExcel,'format rekap pegawai');
            $objPHPExcel->setActiveSheetIndex(0);
            // header
            $objPHPExcel->getActiveSheet()->setCellValue('A1', 'REKAP KEHADIRAN RSUP FATMAWATI');
            $objPHPExcel->getActiveSheet()->setCellValue('A2', 'PERIODE TANGGAL '.Utils::tanggalCantikDariSampai($tanggalawal,$tanggalakhir));
            //header bold
            $objPHPExcel->getActiveSheet()->getStyle('A1')->getFont()->setBold(true);
            // header table
            $objPHPExcel->getActiveSheet()->setCellValue('A'.$aht1, 'NO');
            $objPHPExcel->getActiveSheet()->setCellValue('B'.$aht1, 'NAMA');
            $objPHPExcel->getActiveSheet()->setCellValue('C'.$aht1, 'NIP');
            $objPHPExcel->getActiveSheet()->setCellValue('D'.$aht1, 'GOL');
            $objPHPExcel->getActiveSheet()->setCellValue('E'.$aht1, 'PAGI');
            $objPHPExcel->getActiveSheet()->setCellValue('F'.$aht1, 'SORE');
            $objPHPExcel->getActiveSheet()->setCellValue('G'.$aht1, 'MALAM');
            $objPHPExcel->getActiveSheet()->setCellValue('H'.$aht1, 'TOTAL');
            $objPHPExcel->getActiveSheet()->setCellValue('H'.$aht2, 'HADIR');
            $objPHPExcel->getActiveSheet()->setCellValue('I'.$aht1, 'L');
            $objPHPExcel->getActiveSheet()->setCellValue('J'.$aht1, 'Cuti Tahunan');
            $objPHPExcel->getActiveSheet()->setCellValue('K'.$aht1, 'Cuti Bersalin');
            $objPHPExcel->getActiveSheet()->setCellValue('L'.$aht1, 'Cuti Alasan Penting');
            $objPHPExcel->getActiveSheet()->setCellValue('M'.$aht1, 'Cuti Besar');
            $objPHPExcel->getActiveSheet()->setCellValue('N'.$aht1, 'Sakit');
            $objPHPExcel->getActiveSheet()->setCellValue('O'.$aht1, 'Ijin');
            $objPHPExcel->getActiveSheet()->setCellValue('P'.$aht1, 'Alpa');
            $objPHPExcel->getActiveSheet()->setCellValue('Q'.$aht1, 'Dinas');
            $objPHPExcel->getActiveSheet()->setCellValue('R'.$aht1, 'WFH'); // request 20200921
            $objPHPExcel->getActiveSheet()->setCellValue('S'.$aht2, 'Luar');
            $objPHPExcel->getActiveSheet()->setCellValue('S'.$aht1, 'TJ');
            $objPHPExcel->getActiveSheet()->setCellValue('T'.$aht1, 'KR');
            $objPHPExcel->getActiveSheet()->setCellValue('U'.$aht1, 'TSJ');
            $objPHPExcel->getActiveSheet()->setCellValue('V'.$aht1, 'TOTAL');
            $objPHPExcel->getActiveSheet()->setCellValue('V'.$aht2, 'Hari');
            $objPHPExcel->getActiveSheet()->setCellValue('W'.$aht1, 'TOTAL');
            $objPHPExcel->getActiveSheet()->setCellValue('W'.$aht2, 'Jadwal Shift');
            $objPHPExcel->getActiveSheet()->setCellValue('X'.$aht1, 'Total');
            $objPHPExcel->getActiveSheet()->setCellValue('X'.$aht2, 'Jam Kerja');
            $objPHPExcel->getActiveSheet()->setCellValue('Y'.$aht1, 'LEBIH');
            $objPHPExcel->getActiveSheet()->setCellValue('Z'.$aht1, 'TELAT');
            $objPHPExcel->getActiveSheet()->setCellValue('Z'.$aht2, 'Hari');
            $objPHPExcel->getActiveSheet()->setCellValue('AA'.$aht2, 'Jam');
            $objPHPExcel->getActiveSheet()->setCellValue('AB'.$aht1, 'P.CEPAT');
            $objPHPExcel->getActiveSheet()->setCellValue('AB'.$aht2, 'Hari');
            $objPHPExcel->getActiveSheet()->setCellValue('AC'.$aht2, 'Jam');
            $objPHPExcel->getActiveSheet()->setCellValue('AD'.$aht1, 'LEMBUR');
            $objPHPExcel->getActiveSheet()->setCellValue('AD'.$aht2, 'Hari');
            $objPHPExcel->getActiveSheet()->setCellValue('AE'.$aht2, 'Jam');
            $objPHPExcel->getActiveSheet()->setCellValue('AF'.$aht1, 'SATKER');

            // format cell
            for($i=1;$i<=32;$i++){
                $h = Utils::angkaToHuruf($i); // $h = huruf
                // garis border
                $objPHPExcel->getActiveSheet()->getStyle($h.$aht1)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h.$aht2)->applyFromArray($styleArray);
                // merge header
                if($i<3) {
                    $objPHPExcel->getActiveSheet()->mergeCells('A'.$i.':AC'.$i);
                    $objPHPExcel->getActiveSheet()->getStyle('A'.$i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                }
                // merge header table
                if($i<8 || ($i>8 && $i<19) || ($i>17 && $i<22) || $i==25 || $i==32) {
                    $objPHPExcel->getActiveSheet()->mergeCells($h.$aht1.':'.$h.$aht2);
                    $objPHPExcel->getActiveSheet()->getStyle($h.$aht1)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                }
                if($i==8 || $i==17 || $i==22 || $i==23 || ($i>24 && $i<32)){
                    $objPHPExcel->getActiveSheet()->getStyle($h.$aht2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                }
                $objPHPExcel->getActiveSheet()->getStyle($h.$aht1)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            }
            $objPHPExcel->getActiveSheet()->mergeCells('Z'.$aht1.':AA'.$aht1);
            $objPHPExcel->getActiveSheet()->mergeCells('AB'.$aht1.':AC'.$aht1);
            $objPHPExcel->getActiveSheet()->mergeCells('AD'.$aht1.':AE'.$aht1);
            $objPHPExcel->getActiveSheet()->getStyle('A'.$aht1.':AF'.$aht2)->getAlignment()->setWrapText(true);

            // width cell
            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(8);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(50);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(25);
            $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension('W')->setWidth(14);
            $objPHPExcel->getActiveSheet()->getColumnDimension('AF')->setWidth(35);

            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where = ' AND p.id IN ' . $batasan;
            }

            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $where .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $where .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            if($jamkerjashift != ''){
                $jamkerjashiftdetail = Utils::jamKerja($jamkerjashift);
                $where .= ' AND p.id IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN "' . $tanggalawal . '" AND "' . $tanggalakhir . '" AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
            }

            // query
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $sql = 'SELECT
                        p.nama,
                        p.id as idpegawai,
                        IFNULL(nip.variable,"") as nip,
                        IFNULL(gol.nilai,"") as gol,
                        -- perubahan data nutuk pagi sore dan malam
                        -- SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=25 and IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false,1,0)) as ps1,
                        -- SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=25 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps1,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=25 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps1,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=26 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps2,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=31 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps3,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=32 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps4,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=33 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps5,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=23 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps6,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=15 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps7,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=16 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps8,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=4 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps9,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=6 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps10,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=13 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps11,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=11 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps12,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=38 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps13,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=39 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps14,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=19 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps15,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=20 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps16,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=21 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps17,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=42 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps18,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=43 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps19,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=36 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps20,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=22 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps21,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=44 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps22,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=46 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps23,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=47 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps24,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=48 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps25,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=49 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ps26,
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.idjamkerja=1 AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false,1,0)) as pf1,
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.idjamkerja=5 AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false,1,0)) as pf2,
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.idjamkerja=8 AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false,1,0)) as pf3,
                        -- SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=26 and IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false,1,0)) as ss1,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=34 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ss2,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=5 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ss3,
                        -- SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=7 and IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false,1,0)) as ss4,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=7 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ss4,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=14 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ss5,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=12 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ss6,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=41 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ss7,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=37 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ss8,
                        -- sore = soreshift1+.....+soreshift10
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=24 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ms1,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=8 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ms2,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=10 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ms3,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=45 and ((IFNULL(rs.masukkerja,\'t\')=\'y\' and ISNULL(rs.waktumasuk)=false and ISNULL(rs.waktukeluar)=false) OR (cekijintidakmasukpegawai(ra.idpegawai,ra.tanggal)=\'y\' AND ra.masukkerja=\'y\' and ISNULL(ra.waktumasuk)=false and ISNULL(ra.waktukeluar)=false)),1,0)) as ms4,
                        -- untuk total jamkerjashift
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=25,1,0)) as pagishift1,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=26,1,0)) as pagishift2,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=31,1,0)) as pagishift3,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=32,1,0)) as pagishift4,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=33,1,0)) as pagishift5,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=23,1,0)) as pagishift6,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=15,1,0)) as pagishift7,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=16,1,0)) as pagishift8,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=4,1,0)) as pagishift9,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=6,1,0)) as pagishift10,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=13,1,0)) as pagishift11,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=11,1,0)) as pagishift12,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=38,1,0)) as pagishift13,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=39,1,0)) as pagishift14,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=19,1,0)) as pagishift15,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=20,1,0)) as pagishift16,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=21,1,0)) as pagishift17,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=42,1,0)) as pagishift18,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=43,1,0)) as pagishift19,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=36,1,0)) as pagishift20,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=22,1,0)) as pagishift21,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=44,1,0)) as pagishift22,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=46,1,0)) as pagishift23,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=47,1,0)) as pagishift24,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=48,1,0)) as pagishift25,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=49,1,0)) as pagishift26,
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.idjamkerja=1,1,0)) as pagifull1,
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.idjamkerja=5,1,0)) as pagifull2,
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.idjamkerja=8,1,0)) as pagifull3,
                        -- pagi = pagishift1+.....+pagishift22+pagifull1+pagifull2+pagifull3
                        -- SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=26,1,0)) as soreshift1,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=34,1,0)) as soreshift2,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=5,1,0)) as soreshift3,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=7,1,0)) as soreshift4,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=14,1,0)) as soreshift5,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=12,1,0)) as soreshift6,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=41,1,0)) as soreshift7,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=37,1,0)) as soreshift8,
                        -- sore = soreshift1+.....+soreshift10
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=24,1,0)) as malamshift1,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=8,1,0)) as malamshift2,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=10,1,0)) as malamshift3,
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=45,1,0)) as malamshift4,
                        -- malam = malamshift1+.....+malamshift5
                        -- SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ISNULL(ra.waktumasuk)=false AND ISNULL(ra.waktukeluar)=false,1,0)) as totalhadir,
                        -- SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',1,0)) as totalhadir1,
                        -- SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.idalasantidakmasuk=3,1,0)) as totalhadir2,
                        -- SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ISNULL(ra.waktumasuk)=false AND ISNULL(ra.waktukeluar)=true,1,0)) as totalhadir3,
                        -- totalhadir = totalhadir1-totalhadir2-totalhadir3
                        -- SUM(IF(ra.jadwalmasukkerja="t" AND ISNULL(ra.waktumasuk)=true AND ISNULL(ra.waktukeluar)=true,1,0)) as L1, -- libur
                        -- SUM(IF(ra.jadwalmasukkerja="t" AND ((ISNULL(ra.waktumasuk)=true AND ISNULL(ra.waktukeluar)=false) || (ISNULL(ra.waktumasuk)=false AND ISNULL(ra.waktukeluar)=true)),1,0)) as L2, -- libur
                        -- SUM(IF(ra.jadwalmasukkerja="t" AND ISNULL(ra.idalasantidakmasuk)=true,1,0)) as L1, -- libur
                        SUM(IF(ra.jadwalmasukkerja="t",1,0)) as L1, -- libur
                        getjumlahliburpegawaifull(ra.idpegawai,:tanggalawal0,:tanggalakhir0,true) as L3,
                        -- SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja=\'t\' AND ra.alasantidakmasukkategori=\'c\',1,0)) as cuti,
                        -- SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja=\'t\' AND ra.alasantidakmasukkategori=\'s\',1,0)) as sakit,
                        -- SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja=\'t\' AND ra.alasantidakmasukkategori=\'i\',1,0)) as ijin,
                        -- SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja=\'t\' AND ra.alasantidakmasukkategori=\'a\',1,0)) as alpha,
                        -- SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja=\'y\' AND ra.idalasantidakmasuk=3,1,0)) as dinasluar,
                        -- SUM(IF(ra.idalasantidakmasuk=4,1,0)) as cutitahunan,
                        -- SUM(IF(ra.idalasantidakmasuk=5,1,0)) as cutibersalin,
                        -- SUM(IF(ra.idalasantidakmasuk=6,1,0)) as cutialasanpenting,
                        -- SUM(IF(ra.idalasantidakmasuk=7,1,0)) as cutibesar,
                        -- SUM(IF(ra.idalasantidakmasuk=1,1,0)) as sakit,
                        -- SUM(IF(ra.idalasantidakmasuk=8,1,0)) as ijin,
                        -- SUM(IF(ra.idalasantidakmasuk=9,1,0)) as alpha,
                        -- SUM(IF(ra.idalasantidakmasuk=3,1,0)) as dinasluar,
                        -- SUM(IF(ra.idalasantidakmasuk=2,1,0)) as dlnonsppd, -- hasilnya di tambahkan ke dinasluar
                        -- SUM(IF(ra.idalasantidakmasuk=10,1,0)) as wfh,
                        getjumlahijintidakmasuk(ra.idpegawai, 4, :tanggalawal_cutitahunan, :tanggalakhir_cutitahunan, false, true) as cutitahunan,
                        getjumlahijintidakmasuk(ra.idpegawai, 5, :tanggalawal_cutibersalin, :tanggalakhir_cutibersalin, false, true) as cutibersalin,
                        getjumlahijintidakmasuk(ra.idpegawai, 6, :tanggalawal_cutialasanpenting, :tanggalakhir_cutialasanpenting, false, true) as cutialasanpenting,
                        getjumlahijintidakmasuk(ra.idpegawai, 7, :tanggalawal_cutibesar, :tanggalakhir_cutibesar, false, true) as cutibesar,
                        getjumlahijintidakmasuk(ra.idpegawai, 1, :tanggalawal_sakit, :tanggalakhir_sakit, false, true) as sakit,
                        getjumlahijintidakmasuk(ra.idpegawai, 8, :tanggalawal_ijin, :tanggalakhir_ijin, false, true) as ijin,
                        getjumlahijintidakmasuk(ra.idpegawai, 9, :tanggalawal_alpha, :tanggalakhir_alpha, false, true) as alpha,
                        getjumlahijintidakmasuk(ra.idpegawai, 3, :tanggalawal_dinasluar, :tanggalakhir_dinasluar, false, true) as dinasluar,
                        getjumlahijintidakmasuk(ra.idpegawai, 2, :tanggalawal_dlnonsppd, :tanggalakhir_dlnonsppd, false, true) as dlnonsppd,
                        getjumlahijintidakmasuk(ra.idpegawai, 10, :tanggalawal_wfh, :tanggalakhir_wfh, false, true) as wfh,
                        -- SUM(IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ra.masukkerja=\'t\' AND ISNULL(ra.waktumasuk)=true AND ISNULL(ra.waktukeluar)=true,1,0)) as tj1,
                        SUM(
                            IF(ra.jenisjamkerja = \'full\',
                                IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ra.masukkerja=\'t\' AND ISNULL(ra.waktumasuk)=true AND ISNULL(ra.waktukeluar)=true,1,0),
                                IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                    IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ra.masukkerja=\'t\' AND ISNULL(rs.waktumasuk)=true AND ISNULL(rs.waktukeluar)=true,1,0),
                                    0
                                )
                            )
                        ) as tj1,
                        -- IF(:tanggalakhir3=CURRENT_DATE(),0,IF(CONCAT(DATEDIFF(:tanggalakhir4,CURRENT_DATE())+1 < 0,0,CONCAT(DATEDIFF(:tanggalakhir4,CURRENT_DATE())+1))) as tj2, -- masuk ke tj jika hari belum berlalu diantara tgl update nya
                        IF(:tanggalakhir3=CURRENT_DATE(),0,IF(CONCAT(DATEDIFF(:tanggalakhir4,CURRENT_DATE())+1) < 0,0,CONCAT(DATEDIFF(:tanggalakhir5,CURRENT_DATE())+1))) as tj2,
                        -- CONCAT(DATEDIFF(:tanggalakhir3,CURRENT_DATE())+1) as tj2, -- masuk ke tj jika hari belum berlalu diantara tgl update nya dasn dikurangi harilibur (L3)
                        -- SUM(IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ((ISNULL(ra.waktumasuk)=true AND ISNULL(ra.waktukeluar)=false) || (ISNULL(ra.waktumasuk)=false AND ISNULL(ra.waktukeluar)=true)),1,0)) as kr,
                        -- SUM(IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ((ISNULL(rs.waktumasuk)=true AND ISNULL(rs.waktukeluar)=false) || (ISNULL(rs.waktumasuk)=false AND ISNULL(rs.waktukeluar)=true)),1,0)) as kr_shift
                        SUM(
                            IF(ra.jenisjamkerja = \'full\',
                                IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ((ISNULL(ra.waktumasuk)=true AND ISNULL(ra.waktukeluar)=false) || (ISNULL(ra.waktumasuk)=false AND ISNULL(ra.waktukeluar)=true)),1,0),
                                IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                    IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true  AND ((ISNULL(rs.waktumasuk)=true AND ISNULL(rs.waktukeluar)=false) || (ISNULL(rs.waktumasuk)=false AND ISNULL(rs.waktukeluar)=true)),1,0),
                                    0
                                )
                            )
                        ) as kr,
                        SUM(IF((ra.jadwalmasukkerja="t" AND ISNULL(ra.idalasantidakmasuk)=true AND ra.masukkerja="y"),1,0)) as tidaksesuaijadwal, -- tambahan baru
                        DATEDIFF(:tanggalakhir2,:tanggalawal2) as totalhari,
                        -- SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ISNULL(ra.waktumasuk)=false AND ISNULL(ra.waktukeluar)=false,ra.lamakerja,0)) as totaljamkerja, -- jadikan format hh:mm
                        -- SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ISNULL(ra.waktumasuk)=false AND ISNULL(ra.waktukeluar)=false AND ra.selisihmasuk<0,ra.selisihmasuk,0)) as totaljamkerja1, -- selisih masuk(terlambat)
                        -- SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ISNULL(ra.waktumasuk)=false AND ISNULL(ra.waktukeluar)=false AND ra.selisihkeluar>0,ra.lamakerja,0)) as totaljamkerja2, -- selisih keluar (lembur)
                        SUM(
                            IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                IF(ra.jadwalmasukkerja=\'y\',
                                    IF(ra.jumlahsesi=1,
                                        IF(ra.selisihkeluar>0 and ra.selisihmasuk<0,
                                            IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                                                ra.jadwallamakerja,
                                                IF(ra.selisihkeluar+ra.selisihmasuk>0,ra.jadwallamakerja,ra.selisihkeluar+ra.lamakerja)
                                                -- ra.lamakerja
                                            ),
                                            ra.lamakerja
                                        ),
                                        -- shift
                                        IF(IFNULL(rs.selisihkeluar,\'\')>0 and IFNULL(rs.selisihmasuk,\'\')<0,
                                            IF(rs.selisihkeluar+rs.selisihmasuk>0,rs.lamakerja,IF(rs.selisihkeluar>0,rs.selisihkeluar+rs.lamakerja,rs.lamakerja)),
                                            rs.lamakerja
                                        )
                                    ),
                                    0
                                ),
                                0
                            )
                        ) as totaljamkerja,
                        SUM(
                            IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                IF(ra.jadwalmasukkerja=\'y\',IFNULL(rs.lamakerja,0),0),0
                            )
                        ) as totaljamkerja_shift,
                        SUM(
                            IF(IFNULL(rs.idjamkerjashift,\'\')=17 or IFNULL(rs.idjamkerjashift,\'\')=18 or IFNULL(rs.idjamkerjashift,\'\')=30 or IFNULL(rs.idjamkerjashift,\'\')=27 or IFNULL(rs.idjamkerjashift,\'\')=28 or IFNULL(rs.idjamkerjashift,\'\')=29,
                                IF(ra.jadwalmasukkerja=\'y\',IFNULL(rs.lamakerja,0),0),
                                0
                            )
                        ) as totaljamkerja_onsite_or_piket,
                        SUM(
                            IF(IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                    IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',
                                        IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                                            IF(ra.selisihmasuk<0,ra.selisihkeluar+ra.selisihmasuk,ra.selisihkeluar),
                                            0
                                        ),
                                        0
                                    ),
                                    0
                                ) > 7200 AND ra.jenisjamkerja=\'full\',
                                0,
                                IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                    IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',
                                        IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                                            IF(ra.selisihmasuk<0,ra.selisihkeluar+ra.selisihmasuk,ra.selisihkeluar),
                                            0
                                        ),
                                        0
                                    ),
                                    0
                                )
                            )
                        ) as lebih,
                        SUM(
                            IF(IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                    IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',
                                        IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                                            IF(ra.selisihmasuk<0,ra.selisihkeluar+ra.selisihmasuk,ra.selisihkeluar),
                                            0
                                        ),
                                        0
                                    ),
                                    0
                                ) > 7200 AND ra.jenisjamkerja=\'full\',
                                IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                    IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',
                                        IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                                            IF(ra.selisihmasuk<0,ra.selisihkeluar+ra.selisihmasuk,ra.selisihkeluar),
                                            0
                                        ),
                                        0
                                    ),
                                    0
                                ),
                                0
                            )
                        ) as lembur_full_jam1,
                        SUM(
                            IF(IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                    IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',
                                        IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                                            IF(ra.selisihmasuk<0,ra.selisihkeluar+ra.selisihmasuk,ra.selisihkeluar),
                                            0
                                        ),
                                        0
                                    ),
                                    0
                                ) > 7200 AND ra.jenisjamkerja=\'full\',
                                1,
                                0
                            )
                        ) as lembur_full_hari1,
                        -- SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',ra.lamalembur,0)) as lebih, -- jadikan format hh:mm
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',ra.lamakerja,0)) as lebih1, -- jadikan format hh:mm
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihmasuk<0,ra.selisihmasuk,0)) as lebih2, -- jadikan format hh:mm
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',ra.selisihkeluar,0)) as lebih3, -- jadikan format hh:mm
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',ra.jadwallamakerja,0)) as jadwallamakerja, -- jadikan format hh:mm
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihmasuk<0,1,0)) as telathari,
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihmasuk<0,-1*ra.selisihmasuk,0)) as telatjam, -- jadikan format hh:mm
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihkeluar<0,1,0)) as pcepathari,
                        SUM(IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihkeluar<0,-1*ra.selisihkeluar,0)) as pcepatjam, -- jadikan format hh:mm
                        -- SUM(IF(ra.jadwalmasukkerja=\'t\' AND ra.masukkerja=\'y\' AND ISNULL(ra.waktumasuk)=false AND ISNULL(ra.selisihkeluar)=false,ra.lamakerja,0)) as lembur_full_jam,  -- jadikan format hh:mm
                        SUM(IF(ra.jenisjamkerja=\'full\' AND ra.jadwalmasukkerja=\'t\' AND ra.masukkerja=\'y\' AND ISNULL(ra.waktumasuk)=false AND ISNULL(ra.selisihkeluar)=false AND ra.lamakerja>7200,ra.lamakerja,0)) as lembur_full_jam,  -- jadikan format hh:mm
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=27 or IFNULL(rs.idjamkerjashift,\'\')=28 or IFNULL(rs.idjamkerjashift,\'\')=29 or IFNULL(rs.idjamkerjashift,\'\')=17 or IFNULL(rs.idjamkerjashift,\'\')=18 or IFNULL(rs.idjamkerjashift,\'\')=30,IFNULL(rs.lamakerja,0),0)) as lembur_shift_jam, -- jadikan format hh:mm
                        SUM(IF(ra.jenisjamkerja=\'full\' AND ra.jadwalmasukkerja=\'t\' AND ra.masukkerja=\'y\' AND ISNULL(ra.waktumasuk)=false AND ISNULL(ra.selisihkeluar)=false AND ra.lamakerja>7200,1,0)) as lembur_full_hari, -- jadikan format hh:mm
                        SUM(IF(IFNULL(rs.idjamkerjashift,\'\')=27 or IFNULL(rs.idjamkerjashift,\'\')=28 or IFNULL(rs.idjamkerjashift,\'\')=29 or IFNULL(rs.idjamkerjashift,\'\')=17 or IFNULL(rs.idjamkerjashift,\'\')=18 or IFNULL(rs.idjamkerjashift,\'\')=30,1,0)) as lembur_shift_hari, -- jadikan format hh:mm
                        -- SUM(IF((IFNULL(rs.idjamkerjashift,\'\')=27 or IFNULL(rs.idjamkerjashift,\'\')=28 or IFNULL(rs.idjamkerjashift,\'\')=29 or IFNULL(rs.idjamkerjashift,\'\')=17 or IFNULL(rs.idjamkerjashift,\'\')=18 or IFNULL(rs.idjamkerjashift,\'\')=30),1,0)) as tj_lembur, -- tj untuk jadwal onsite,duty,lembur
                        -- tambahkan seperti lembur_shift_hari tetapi hanya untuk hari yang idjamkerjashift = 27,28,29,17,18,30 dan jika hari tsb ada jamkerjaselain id yg dimaksud, maka tidak menghitung 
                        IFNULL(satker.nilai,"") as satker
                    FROM
                        rekapabsen ra
                        -- LEFT JOIN rekapshift rs ON ra.idpegawai=rs.idpegawai,
                        -- LEFT JOIN rekapshift rs ON ra.idpegawai=rs.idpegawai AND rs.tanggal=ra.tanggal,
                        LEFT JOIN (
                            SELECT
                                *
                            FROM
                                rekapshift
                            WHERE
                                tanggal between :tanggalawal_shift and :tanggalakhir_shift
                            GROUP BY
                                tanggal,
                                idpegawai
                        ) rs ON ra.idpegawai=rs.idpegawai AND rs.tanggal=ra.tanggal,
                        pegawai p
                        LEFT JOIN pegawaiatributvariable nip ON nip.idpegawai=p.id AND nip.idatributvariable=1
                        LEFT JOIN pegawaiatribut pagol ON pagol.idpegawai=p.id AND pagol.idatributnilai IN(SELECT id FROM atributnilai WHERE idatribut = 4)
                        LEFT JOIN atributnilai gol ON pagol.idatributnilai=gol.id
                        LEFT JOIN pegawaiatribut pasatker ON pasatker.idpegawai=p.id AND pasatker.idatributnilai IN(SELECT id FROM atributnilai WHERE idatribut = 1)
                        LEFT JOIN atributnilai satker ON pasatker.idatributnilai=satker.id
                    WHERE
                        ra.idpegawai=p.id AND
                        p.del=\'t\' AND
                        p.status=\'a\' AND
                        ra.tanggal BETWEEN :tanggalawal AND :tanggalakhir
                        ' . $where . '
                    GROUP BY
                        ra.idpegawai
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            $stmt->bindValue(':tanggalawal_shift', $tanggalawal);
            $stmt->bindValue(':tanggalakhir_shift', $tanggalakhir);
            $stmt->bindValue(':tanggalawal0', $tanggalawal);
            $stmt->bindValue(':tanggalakhir0', $tanggalakhir);
            $stmt->bindValue(':tanggalawal2', $tanggalawal);
            $stmt->bindValue(':tanggalakhir2', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir3', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir4', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir5', $tanggalakhir);
            $stmt->bindValue(':tanggalawal_cutitahunan', $tanggalawal);
            $stmt->bindValue(':tanggalawal_cutibersalin', $tanggalawal);
            $stmt->bindValue(':tanggalawal_cutialasanpenting', $tanggalawal);
            $stmt->bindValue(':tanggalawal_cutibesar', $tanggalawal);
            $stmt->bindValue(':tanggalawal_sakit', $tanggalawal);
            $stmt->bindValue(':tanggalawal_ijin', $tanggalawal);
            $stmt->bindValue(':tanggalawal_alpha', $tanggalawal);
            $stmt->bindValue(':tanggalawal_dinasluar', $tanggalawal);
            $stmt->bindValue(':tanggalawal_dlnonsppd', $tanggalawal);
            $stmt->bindValue(':tanggalawal_wfh', $tanggalawal);
            $stmt->bindValue(':tanggalakhir_cutitahunan', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir_cutibersalin', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir_cutialasanpenting', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir_cutibesar', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir_sakit', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir_ijin', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir_alpha', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir_dinasluar', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir_dlnonsppd', $tanggalakhir);
            $stmt->bindValue(':tanggalakhir_wfh', $tanggalakhir);
            $stmt->execute();

            $b = $aht2+1; // $b = baris(baris setelah header table)
            $no = 1;
//            set_time_limit(300); // hanya untuk local
            while($row = $stmt->fetch(PDO::FETCH_ASSOC)){
                $pagi = $row['ps1'] + $row['ps2'] + $row['ps3'] + $row['ps4'] + $row['ps5'] + $row['ps6'] + $row['ps7'] + $row['ps8'] + $row['ps9'] + $row['ps10'] + $row['ps11'] + $row['ps12'] + $row['ps13'] + $row['ps14'] + $row['ps15'] + $row['ps16'] + $row['ps17'] + $row['ps18'] + $row['ps19'] + $row['ps20'] + $row['ps21'] + $row['ps22'] + $row['ps23'] + $row['ps24'] + $row['ps25'] + $row['ps26'] + $row['pf1'] + $row['pf2'] + $row['pf3'];
                $sore = $row['ss2']+$row['ss3']+$row['ss4']+$row['ss5']+$row['ss6']+$row['ss7']+$row['ss8'];
                $malam = $row['ms1']+$row['ms2']+$row['ms3']+$row['ms4'];
                $totalhadir = $pagi+$sore+$malam;
                // total shift
                $pagishift = $row['pagishift1'] + $row['pagishift2'] + $row['pagishift3'] + $row['pagishift4'] + $row['pagishift5'] + $row['pagishift6'] + $row['pagishift7'] + $row['pagishift8'] + $row['pagishift9'] + $row['pagishift10'] + $row['pagishift11'] + $row['pagishift12'] + $row['pagishift13'] + $row['pagishift14'] + $row['pagishift15'] + $row['pagishift16'] + $row['pagishift17'] + $row['pagishift18'] + $row['pagishift19'] + $row['pagishift20'] + $row['pagishift21'] + $row['pagishift22'] + $row['pagishift23'] + $row['pagishift24'] + $row['pagishift25'] + $row['pagishift26'];
                $soreshift = $row['soreshift2']+$row['soreshift3']+$row['soreshift4']+$row['soreshift5']+$row['soreshift6']+$row['soreshift7']+$row['soreshift8'];
                $malamshift = $row['malamshift1']+$row['malamshift2']+$row['malamshift3']+$row['malamshift4'];
                $totaljadwalshift = $pagishift+$soreshift+$malamshift;

                // lebih
                $lebihtotal = $row['lebih1'] + $row['lebih2'] + $row['lebih3'];
                $lebih = $lebihtotal > $row['jadwallamakerja'] ? $lebihtotal-$row['jadwallamakerja'] : 0;

                // lembur
//                $lemburjam = $row['lembur_all_jam'] + $row['lembur_full_jam'] + $row['lembur_shift_jam'];
//                $lemburhari = $row['lembur_all_hari'] + $row['lembur_full_hari'] + $row['lembur_shift_hari'];
                $lemburjam = $row['lembur_full_jam'] + $row['lembur_full_jam1'] + $row['lembur_shift_jam'];
                $lemburhari = $row['lembur_full_hari'] + $row['lembur_full_hari1'] + $row['lembur_shift_hari'];

                // tj(tidak jelas)
                $tot_ijintidakmasuk = $row['cutitahunan']+$row['cutibersalin']+$row['cutialasanpenting']+$row['cutibesar']+$row['sakit']+$row['ijin']+$row['alpha']+$row['dinasluar']+$row['dlnonsppd']+$row['wfh'];
                $tj2 = $row['tj2'] < 0 ? 0 : $row['tj2'];
//                $tj = $row['tj1']+$tj2-$row['L3']-$tot_ijintidakmasuk;
                // hitung tj untuk jamkerja lembur(onsite,duty)
                $sqlTJL = '
                    SELECT
                        IFNULL(SUM(jumlah),0) as tj_lembur
                    FROM
                        (SELECT
                            IF(count(idjamkerjashift) = 1 AND
                            IFNULL(idjamkerjashift,\'\')=27 or
                            IFNULL(idjamkerjashift,\'\')=28 or
                            IFNULL(idjamkerjashift,\'\')=29 or
                            IFNULL(idjamkerjashift,\'\')=17 or
                            IFNULL(idjamkerjashift,\'\')=18 or
                            IFNULL(idjamkerjashift,\'\')=30,
                                1,
                                0
                            ) as jumlah
                        FROM
                            rekapshift 
                        WHERE
                            tanggal between :tanggalawal and :tanggalakhir
                            and idpegawai = :idpegawai
                        GROUP BY
                            tanggal
                        ) x
                ';
                $stmtTJL = $pdo->prepare($sqlTJL);
                $stmtTJL->bindValue(':tanggalawal', $tanggalawal);
                $stmtTJL->bindValue(':tanggalakhir', $tanggalakhir);
                $stmtTJL->bindValue(':idpegawai', $row['idpegawai']);
                $stmtTJL->execute();
                $tj_lembur = 0;
                if($stmtTJL->rowCount() > 0){
                    $rowTJL = $stmtTJL->fetch(PDO::FETCH_ASSOC);
                    $tj_lembur = $rowTJL['tj_lembur'];
                }
                // tj di kurangi sama ijintidakmasuk
//                $tj = $row['tj1']+$tj_lembur+$tj2-$row['L3']-$tot_ijintidakmasuk;
                $tj = $row['tj1']+$tj_lembur+$tj2-$row['L3'];
                if($tj < 0){
                    $tj=0;
                }

                // total jam kerja
//                $totaljamkerja = $row['totaljamkerja'];
//                // cek dulu apakah jamkerja sudah sesual jadwallamakerja ?
//                if($row['totaljamkerja']+$row['totaljamkerja1']+$row['totaljamkerja2'] > $row['jadwallamakerja']){
//                    $totaljamkerja = $row['jadwallamakerja'];
//                }

//                $lembur = $row['lembur'];
//                $kelebihanjamkerja = $row['kelebihanjamkerja'];
//                if($row['jenisjamkerja'] == 'full' && $row['kelebihanjamkerja'] > 7200){
//                    $lembur = $row['lembur'] + $row['kelebihanjamkerja'];
//                    $totaljamlembur = $totaljamlembur + 1;
//                    $kelebihanjamkerja = '';
//                    $totalkelebihanjamkerja = $totalkelebihanjamkerja - $row['kelebihanjamkerja'];
//                }

                $objPHPExcel->getActiveSheet()->setCellValue('A'.$b, $no);
                $objPHPExcel->getActiveSheet()->setCellValue('B'.$b, $row['nama']);
                $objPHPExcel->getActiveSheet()->setCellValue('C'.$b, "'".$row['nip']);
                $objPHPExcel->getActiveSheet()->setCellValue('D'.$b, $row['gol']);
                $objPHPExcel->getActiveSheet()->setCellValue('E'.$b, $pagi);
                $objPHPExcel->getActiveSheet()->setCellValue('F'.$b, $sore);
                $objPHPExcel->getActiveSheet()->setCellValue('G'.$b, $malam);
                $objPHPExcel->getActiveSheet()->setCellValue('H'.$b, $totalhadir);
                $objPHPExcel->getActiveSheet()->setCellValue('I'.$b, $row['L1']+$row['L3']);
                $objPHPExcel->getActiveSheet()->setCellValue('J'.$b, $row['cutitahunan']);
                $objPHPExcel->getActiveSheet()->setCellValue('K'.$b, $row['cutibersalin']);
                $objPHPExcel->getActiveSheet()->setCellValue('L'.$b, $row['cutialasanpenting']);
                $objPHPExcel->getActiveSheet()->setCellValue('M'.$b, $row['cutibesar']);
                $objPHPExcel->getActiveSheet()->setCellValue('N'.$b, $row['sakit']);
                $objPHPExcel->getActiveSheet()->setCellValue('O'.$b, $row['ijin']);
                $objPHPExcel->getActiveSheet()->setCellValue('P'.$b, $row['alpha']);
                $objPHPExcel->getActiveSheet()->setCellValue('Q'.$b, $row['dinasluar']+$row['dlnonsppd']); // dinas luar adalah dlsppd
                $objPHPExcel->getActiveSheet()->setCellValue('R'.$b, $row['wfh']);
                $objPHPExcel->getActiveSheet()->setCellValue('S'.$b, $tj);
                $objPHPExcel->getActiveSheet()->setCellValue('T'.$b, $row['kr']);
                $objPHPExcel->getActiveSheet()->setCellValue('U'.$b, $row['tidaksesuaijadwal']);
                $objPHPExcel->getActiveSheet()->setCellValue('V'.$b, $row['totalhari']+1);
                $objPHPExcel->getActiveSheet()->setCellValue('W'.$b, $totaljadwalshift);
                $objPHPExcel->getActiveSheet()->setCellValue('X'.$b, Utils::sec2hhmm($row['totaljamkerja']));
                $objPHPExcel->getActiveSheet()->setCellValue('Y'.$b, Utils::sec2hhmm($row['lebih']));
                $objPHPExcel->getActiveSheet()->setCellValue('Z'.$b, $row['telathari']);
                $objPHPExcel->getActiveSheet()->setCellValue('AA'.$b, Utils::sec2hhmm($row['telatjam']));
                $objPHPExcel->getActiveSheet()->setCellValue('AB'.$b, $row['pcepathari']);
                $objPHPExcel->getActiveSheet()->setCellValue('AC'.$b, Utils::sec2hhmm($row['pcepatjam']));
                $objPHPExcel->getActiveSheet()->setCellValue('AD'.$b, $lemburhari);
                $objPHPExcel->getActiveSheet()->setCellValue('AE'.$b, Utils::sec2hhmm($lemburjam));
                $objPHPExcel->getActiveSheet()->setCellValue('AF'.$b, $row['satker']);

                // format cell
                for($i=1;$i<=32;$i++) {
                    $h = Utils::angkaToHuruf($i); // $h = huruf
                    $objPHPExcel->getActiveSheet()->getStyle($h.$b)->applyFromArray($styleArray);
                    if(($i>3 && $i<22) || $i==25 || $i==27 || $i==29 || $i==31){
                        $objPHPExcel->getActiveSheet()->getStyle($h.$b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    }
                }

                $b++;
                $no++;
            }

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan format rekap pegawai');
            Utils::setFileNameExcel('Format_rekap_pegawai');
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }

    }
    public function EksporLainnyaTipe2($tanggalawal,$tanggalakhir,$atribut,$jamkerjafull,$jamkerjashift)
    {
        if (Utils::cekHakakses('laporanekspor', 'l')) {
            require(public_path() .'/fpdf/fpdf.php');
//            Utils::insertLogUser('Ekspor laporan rekapabsen per pegawai PDF');
//            set_time_limit(300); // hanya untuk local
            $pdf = new FPDF();
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $tanggalawal = Utils::convertDmy2Ymd($tanggalawal);
            $tanggalakhir = Utils::convertDmy2Ymd($tanggalakhir);

            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where = ' AND id IN ' . $batasan;
            }

            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $where .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $where .= ' AND id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            if($jamkerjashift != ''){
                $jamkerjashiftdetail = Utils::jamKerja($jamkerjashift);
                $where .= ' AND id IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN "' . $tanggalawal . '" AND "' . $tanggalakhir . '" AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
            }
            $sqlp = 'SELECT id FROM pegawai WHERE del=\'t\' AND status=\'a\' '.$where.' ORDER BY nama';
            $stmtp = $pdo->prepare($sqlp);
            $stmtp->execute();
            while($rowp = $stmtp->fetch(PDO::FETCH_ASSOC)){
                $idpegawai = $rowp['id'];

                $pdf->AddPage('L');
                $width_cell=array(20,15,12,10);
                $hc=array(9,6,3,4); // hc = height cell
                $pdf->SetFont('Arial','',7);
                //Background color of header//
//                $pdf->SetFillColor(193,229,252);

                // dapatkan nip pegawai
                $sql = 'SELECT variable FROM pegawaiatributvariable WHERE idatributvariable=1 AND idpegawai = :idpegawai';
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':idpegawai', $idpegawai);
                $stmt->execute();
                $nip = '';
                if($stmt->rowCount() > 0){
                    $row = $stmt->fetch(PDO::FETCH_ASSOC);
                    $nip = $row['variable'];
                }

                /// header gambar ///
                $urlimage = url('fotonormal/perusahaan').'/'.Session::get('conf_webperusahaan');
//            $urlimage = 'https://dash.smartpresence.id/fotonormal/perusahaan/10950';
//            $urlimage = 'https://dash.smartpresence.id/fotonormal/perusahaan/'.Session::get('conf_webperusahaan');
                if(exif_imagetype($urlimage) == 2){
                    // JPEG bernilai 2
                    $format = 'JPEG';
                }else{
                    // PNG bernilai 3
                    $format = 'PNG';
                }
                $pdf->Cell( 20, 20, $pdf->Image($urlimage, $pdf->GetX(), $pdf->GetY(), 20, 20, $format));
                $pdf->Cell(0,10,'',0,1); // enter
                /// header gambar end ///
                //// header ///////
                $pdf->Cell(300,$hc[0],'LAPORAN DAFTAR HADIR HARIAN PER PEGAWAI',0,0,'C');
                $pdf->Cell(0,$hc[2],'',0,1); // enter
                $pdf->Cell(300,$hc[0],'Tanggal: '.Utils::tanggalCantikDariSampai($tanggalawal,$tanggalakhir),0,0,'C');
                $pdf->Cell(0,$hc[0],'',0,1); // enter
                $pdf->Cell(20,$hc[0],'Nama',0,0);
                $pdf->Cell(320,$hc[0],': '.Utils::getNamaPegawai($idpegawai),0,0);
                $pdf->Cell(0,$hc[2],'',0,1); // enter
                $pdf->Cell(20,$hc[0],'NIP',0,0);
                $pdf->Cell(320,$hc[0],': '.$nip,0,0);
                $pdf->Ln();
                //// header ends ///////

                //// header table ///////
                $pdf->Cell($width_cell[0],$hc[0],'Tanggal',1,0,'C');
                $pdf->Cell($width_cell[0],$hc[0],'Hari',1,0,'C');
                $pdf->Cell(90,$hc[2],'JAM',1,0,'C');
                $pdf->Cell($width_cell[2],$hc[0],'Sakit',1,0,'C');
                $pdf->Cell($width_cell[3],$hc[0],'Ijin',1,0,'C');
                $pdf->Cell($width_cell[2],$hc[0],'Alpha',1,0,'C');
                $pdf->Cell($width_cell[3],$hc[0],'Cuti',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[0],'DL SPPD',1,0,'C');
                $pdf->Cell($width_cell[2],$hc[0],'WFH',1,0,'C');
                $pdf->Cell($width_cell[0],$hc[0],'Status',1,0,'C');
                $pdf->Cell($width_cell[0],$hc[0],'Jaga Onsite',1,0,'C');
                $pdf->Cell($width_cell[0],$hc[0],'Jaga Piket',1,0,'C');
                $pdf->Cell($width_cell[0],$hc[0],'Jam Lembur',1,0,'C');
                $pdf->Cell(0,$hc[2],'',0,1); // enter
                $pdf->Cell(40,$hc[1],'',0,0); // row kosong
                $pdf->Cell($width_cell[1],$hc[1],'Masuk',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[1],'Keluar',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],'Total',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],'Kelebihan',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],'Datang',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],'Pulang',1,0,'C');
                $pdf->Cell(0,$hc[2],'',0,1); // enter
                $pdf->Cell(70,$hc[1],'',0,0); // row kosong
                $pdf->Cell($width_cell[1],$hc[2],'Jam Kerja',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],'Jam Kerja',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],'Telat',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],'Cepat',1,0,'C');
                $pdf->Ln();
                //// header table ends ///////

                //Background color of header//
//                $pdf->SetFillColor(235,236,236);
                //to give alternate background fill color to rows//
//            $fill=false;
                /// each record is one row  ///

                // query sql for data
                $sql = 'SELECT
                            ra.tanggal,
                            IFNULL(rs.idjamkerjashift,\'\') as idjamkerjashift,
                            IFNULL(ra.idalasantidakmasuk,\'\') as idalasantidakmasuk,
                            ra.jadwalmasukkerja,
                            ra.alasantidakmasukkategori,
                            ra.idjamkerja,
                            ra.masukkerja,
                            IFNULL(ra.waktumasuk,\'\') as waktumasuk,
                            IFNULL(ra.waktukeluar,\'\') as waktukeluar,
                            ra.selisihmasuk,
                            ra.selisihkeluar,
                            -- IF(ra.jenisjamkerja=\'full\' OR IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                            --     IF(ra.selisihkeluar>0 and ra.selisihmasuk<0,
                            --         IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                            --             ra.jadwallamakerja,
                            --             IF(ra.selisihkeluar+ra.selisihmasuk>0,ra.jadwallamakerja,ra.selisihkeluar+ra.lamakerja)
                            --             -- ra.lamakerja
                            --         ),
                            --         ra.lamakerja
                            --     ),
                            --     0
                            -- ) as lamakerja,
                            IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                IF(ra.jadwalmasukkerja=\'y\',
                                    IF(ra.jumlahsesi=1,
                                        IF(ra.selisihkeluar>0 and ra.selisihmasuk<0,
                                            IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                                                ra.jadwallamakerja,
                                                IF(ra.selisihkeluar+ra.selisihmasuk>0,ra.jadwallamakerja,ra.selisihkeluar+ra.lamakerja)
                                                -- ra.lamakerja
                                            ),
                                            ra.lamakerja
                                        ),
                                        -- shift
                                        IF(IFNULL(rs.selisihkeluar,\'\')>0 and IFNULL(rs.selisihmasuk,\'\')<0,
                                            IF(rs.selisihkeluar+rs.selisihmasuk>0,rs.lamakerja,IF(rs.selisihkeluar>0,rs.selisihkeluar+rs.lamakerja,rs.lamakerja)),
                                            rs.lamakerja
                                        )
                                    ),
                                    0
                                ),
                                0
                            ) as totaljamkerja,
                            IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',
                                    IF(ra.selisihkeluar+ra.lamakerja>ra.jadwallamakerja,
                                        IF(ra.selisihmasuk<0,ra.selisihkeluar+ra.selisihmasuk,ra.selisihkeluar),
                                        0
                                        -- IF(ra.selisihkeluar+ra.selisihmasuk>0,ra.jadwallamakerja,ra.selisihkeluar+ra.lamakerja)
                                    ),
                                    0
                                ),
                                0
                            ) as kelebihanjamkerja,
                            IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,
                                IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',
                                    IF(rs.selisihkeluar+rs.lamakerja>TIME_TO_SEC(TIMEDIFF(rs.jadwal_waktu_keluar,rs.jadwal_waktu_masuk)),
                                        IF(rs.selisihmasuk<0,rs.selisihkeluar+rs.selisihmasuk,rs.selisihkeluar),
                                        0
                                    ),
                                    0
                                ),
                                0
                            ) as kelebihanjamkerjashift,
                            IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihmasuk<0,-1*ra.selisihmasuk,0) as datangtelat,
                            IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihkeluar<0,-1*ra.selisihkeluar,0) as pulangcepat,
                            -- ra.lamakerja,
                            ra.jenisjamkerja,
                            ra.absentidaklengkap,
                            IFNULL(rs.lamakerja,0) as lamakerjashift, -- untuk jaga onsite dan jaga piket
                            -- IF(IFNULL(rs.sambungan_sebelum,\'t\')=\'t\',IFNULL(rs.waktumasuk,\'\'),\'\') as waktumasukshift,
                            -- IF(IFNULL(rs.sambungan_sebelum,\'t\')=\'t\',IFNULL(rs.waktukeluar,\'\'),\'\') as waktukeluarshift,
                            IFNULL(rs.waktumasuk,\'\') as waktumasukshift,
                            IFNULL(rs.waktukeluar,\'\') as waktukeluarshift,
                            IFNULL(rs.sambungan_sebelum,\'t\') as sambungan_sebelum,
                            IF(IFNULL(rs.selisihmasuk,0)<0,IFNULL(-1*rs.selisihmasuk,0),0) as datangtelatshift,
                            -- IF(IFNULL(rs.selisihkeluar,0)<0,IFNULL(-1*rs.selisihkeluar,0),0) as pulangcepatshift,
                            -- IF(IFNULL(rs.sambungan_sebelum,\'t\')=\'y\',IF(SEC_TO_TIME(TIMEDIFF(rs.jadwal_waktu_keluar,ra.waktukeluar))<0,0,SEC_TO_TIME(TIMEDIFF(rs.jadwal_waktu_keluar,ra.waktukeluar))),IF(IFNULL(rs.selisihkeluar,0)<0,IFNULL(-1*rs.selisihkeluar,0),0)) as pulangcepatshift,
                            IF(IFNULL(rs.sambungan_sebelum,\'t\')=\'y\',
                                IF(TIME_TO_SEC(TIMEDIFF(rs.jadwal_waktu_keluar,ra.waktukeluar))<0,0,TIME_TO_SEC(TIMEDIFF(rs.jadwal_waktu_keluar,ra.waktukeluar))),
                                IF(IFNULL(rs.selisihkeluar,0)<0,IFNULL(-1*rs.selisihkeluar,0),0)
                            ) as pulangcepatshift,
                            IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,rs.selisihmasuk,0) as selisihmasukshift,
                            IF(IFNULL(rs.idjamkerjashift,\'\')!=17 and IFNULL(rs.idjamkerjashift,\'\')!=18 and IFNULL(rs.idjamkerjashift,\'\')!=30 and IFNULL(rs.idjamkerjashift,\'\')!=27 and IFNULL(rs.idjamkerjashift,\'\')!=28 and IFNULL(rs.idjamkerjashift,\'\')!=29,rs.selisihkeluar,0) as selisihkeluarshift,
                            IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',ra.jadwallamakerja,0) as jadwallamakerja,
                            IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',ra.lamakerja,0) as lebih1, -- jadikan format hh:mm
                            IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\' AND ra.selisihmasuk<0,ra.selisihmasuk,0) as lebih2, -- jadikan format hh:mm
                            IF(ra.jadwalmasukkerja=\'y\' AND ra.masukkerja=\'y\',ra.selisihkeluar,0) as lebih3,
                            IF(ra.idalasantidakmasuk=4,1,0) as cuti, -- cuti tahunan
                            IF(ra.idalasantidakmasuk=1,1,0) as sakit,
                            IF(ra.idalasantidakmasuk=8,1,0) as ijin,
                            IF(ra.idalasantidakmasuk=9,1,0) as alpha,
                            IF(ra.idalasantidakmasuk=3,1,0) as dlsppd,
                            IF(ra.idalasantidakmasuk=10,1,0) as wfh,
                            IF(ra.jenisjamkerja=\'full\' AND ra.jadwalmasukkerja=\'t\' AND ra.masukkerja=\'y\' AND ISNULL(ra.waktumasuk)=false AND ISNULL(ra.selisihkeluar)=false AND ra.lamakerja>7200,ra.lamakerja,0) as lembur,
                            IF(IFNULL(rs.idjamkerjashift,\'\')=17 or IFNULL(rs.idjamkerjashift,\'\')=18 or IFNULL(rs.idjamkerjashift,\'\')=30,IFNULL(rs.lamakerja,0),0) as jagaonsite,
                            IF(IFNULL(rs.idjamkerjashift,\'\')=27 or IFNULL(rs.idjamkerjashift,\'\')=28 or IFNULL(rs.idjamkerjashift,\'\')=29,IFNULL(rs.lamakerja,0),0) as jagapiket,
                            IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ra.masukkerja=\'t\' AND ISNULL(ra.waktumasuk)=true AND ISNULL(ra.waktukeluar)=true,1,0) as tj1,
                            IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ra.masukkerja=\'t\' AND ISNULL(rs.waktumasuk)=true AND ISNULL(rs.waktukeluar)=true,1,0) as tj1shift,
                            IF(:tanggalakhir1=CURRENT_DATE(),0,CONCAT(DATEDIFF(:tanggalakhir2,CURRENT_DATE())+1)) as tj2,
                            getjumlahliburpegawaifull(ra.idpegawai,:tanggalawal0,:tanggalakhir0,true) as L3,
                            IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ((ISNULL(ra.waktumasuk)=true AND ISNULL(ra.waktukeluar)=false) || (ISNULL(ra.waktumasuk)=false AND ISNULL(ra.waktukeluar)=true)),1,0) as kr,
                            IF(ra.jadwalmasukkerja="y" AND ISNULL(ra.idalasantidakmasuk)=true AND ((ISNULL(rs.waktumasuk)=true AND ISNULL(rs.waktukeluar)=false) || (ISNULL(rs.waktumasuk)=false AND ISNULL(rs.waktukeluar)=true)),1,0) as kr_shift
                            -- IFNULL(rs.selisihmasuk,0) as selisihmasukshift,
                            -- IFNULL(rs.selisihkeluar,0) as selisihkeluarshift
                        FROM
                            rekapabsen ra
                            -- LEFT JOIN rekapshift rs ON ra.idpegawai=rs.idpegawai AND rs.tanggal=ra.tanggal AND rs.idjamkerjashift NOT IN(17,18,30,27,28,29),
                            LEFT JOIN rekapshift rs ON ra.idpegawai=rs.idpegawai AND rs.tanggal=ra.tanggal,
                            pegawai p
                        WHERE
                            ra.idpegawai=p.id AND
                            ra.tanggal BETWEEN :tanggalawal AND :tanggalakhir AND
                            ra.idpegawai = :idpegawai
                        ORDER BY
                            ra.tanggal';
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':tanggalakhir1', $tanggalakhir);
                $stmt->bindValue(':tanggalakhir2', $tanggalakhir);
                $stmt->bindValue(':tanggalawal0', $tanggalawal);
                $stmt->bindValue(':tanggalakhir0', $tanggalakhir);
                $stmt->bindValue(':tanggalawal', $tanggalawal);
                $stmt->bindValue(':tanggalakhir', $tanggalakhir);
                $stmt->bindValue(':idpegawai', $idpegawai);
                $stmt->execute();

                // variabel buat jumlah
                $totallamakerja = 0;
                $totalkelebihanjamkerja = 0;
                $totaldatangtelat = 0;
                $totalpulangcepat = 0;
                $totalsakit = 0;
                $totalizin = 0;
                $totalalpha = 0;
                $totalcuti = 0;
                $totaldlsppd = 0;
                $totalwfh = 0;
                $totaljagaonsite = 0;
                $totaljagapiket = 0;
                $totaljamlembur = 0;
                $totalpagi = 0;
                $totalsore = 0;
                $totalmalam = 0;
                $totalkr = 0;
                $totaltj = 0;
                $tj1=0;
                $tj2 = 0;
                $L3 = 0;
                $tanggalpembanding = '';
                while($row = $stmt->fetch(PDO::FETCH_ASSOC)){
                    $waktumasuk = $row['jenisjamkerja'] == 'full' ? $row['waktumasuk'] : $row['waktumasukshift'];
                    $waktukeluar = $row['jenisjamkerja'] == 'full' ? $row['waktukeluar'] : $row['waktukeluarshift'];
                    $kr = $row['jenisjamkerja'] == 'full' ? $row['kr'] : $row['kr_shift'];
                    $tj = $row['jenisjamkerja'] == 'full' ? $row['tj1'] : $row['tj1shift'];
                    $totaljamkerja = $row['totaljamkerja'];
                    $kelebihanjamkerja = $row['jenisjamkerja'] == 'full' ? $row['kelebihanjamkerja'] : $row['kelebihanjamkerjashift'];
                    $generate = true;

                    if($row['jenisjamkerja'] == 'shift' AND $row['sambungan_sebelum'] == 'y' AND $row['waktumasukshift'] != '' AND $row['waktukeluarshift'] != ''){
                        $waktumasuk = $row['waktumasukshift'];
                        $waktukeluar = $row['waktukeluarshift'];
                    }else if($row['jenisjamkerja'] == 'shift' AND $tanggalpembanding == $row['tanggal'] AND $row['sambungan_sebelum'] == 'y' AND ($row['waktumasukshift'] == '' OR $row['waktukeluarshift'] == '')){
                        $generate = false;
                    }

                    // jika hari beda dan ada cuman absen masuk/absen keluar, maka hanya isikan status saja isinya TJ
                    if($row['jenisjamkerja'] == 'shift' AND $tanggalpembanding != $row['tanggal'] AND $row['sambungan_sebelum'] == 'y' AND ($row['waktumasukshift'] == '' OR $row['waktukeluarshift'] == '')){
                        $waktumasuk = '';
                        $waktukeluar = '';
                        $totaljamkerja = '';
                        $kelebihanjamkerja = 0;
                        $tj = 1;
                    }

                    // jika dia masuk di waktu hari libur
                    if($row['jadwalmasukkerja'] == 't'){
                        // cari waktu masuk di logabsen
                        $sql1 = 'SELECT waktu FROM logabsen WHERE idpegawai = :idpegawai AND waktu BETWEEN :tanggalawal AND :tanggalakhir AND masukkeluar = \'m\' ORDER BY waktu LIMIT 1';
                        $stmt1 = $pdo->prepare($sql1);
                        $stmt1->bindValue(':idpegawai',$idpegawai);
                        $stmt1->bindValue(':tanggalawal',$row['tanggal'].' 00:00:00');
                        $stmt1->bindValue(':tanggalakhir',$row['tanggal'].' 23:59:59');
                        $stmt1->execute();
                        if($stmt1->rowCount() > 0){
                            $row1 = $stmt1->fetch(PDO::FETCH_ASSOC);
                            $waktumasuk = $row1['waktu'];
                            // cari waktu keluar di logabsen
                            $sql2 = 'SELECT waktu FROM logabsen WHERE idpegawai = :idpegawai AND waktu BETWEEN :tanggalawal AND :tanggalakhir AND masukkeluar = \'k\' ORDER BY waktu LIMIT 1';
                            $stmt2 = $pdo->prepare($sql2);
                            $stmt2->bindValue(':idpegawai',$idpegawai);
                            $stmt2->bindValue(':tanggalawal',$waktumasuk);
                            $stmt2->bindValue(':tanggalakhir',$row['tanggal'].' 23:59:59');
                            $stmt2->execute();
                            if($stmt2->rowCount() > 0){
                                $row2 = $stmt2->fetch(PDO::FETCH_ASSOC);
                                $waktukeluar = $row2['waktu'];
                            }
                        }

                    }

                    $tanggalpembanding = $row['tanggal'];
                    if($generate){
                        $arrwaktumasuk = $waktumasuk != '' ? explode(' ', $waktumasuk) : '';
                        $arrwaktukeluar = $waktukeluar != '' ? explode(' ', $waktukeluar) : '';

                        $fill = false;

                        $datangtelat = 0;
                        $pulangcepat = 0;

                        // kl
                        $totalkr = $totalkr+$kr;
//                if($row['absentidaklengkap'] != ''){
//                    $totalkr = $totalkr+1;
//                }

                        // tj(tidak jelas)
                        $tj1 = $tj1+$tj;
                        $tj2 = $row['tj2'];
                        $L3 = $row['L3'];
//                if($row['jadwalmasukkerja'] == 't' && $row['masukkerja'] == 'y'){
//                    $totaltj = $totaltj+1;
//                }

                        // hari
                        $tgl = $row['tanggal'];
                        $dow = date('w', strtotime($tgl)); // day of week (0 minggu, 6 sabtu)

                        // status(jenis jamkerja)
                        $status = '';
                        // pagi full
                        if($row['jenisjamkerja'] == 'full' && $row['idalasantidakmasuk'] == '' && $row['jadwalmasukkerja'] == 'y' && ($row['idjamkerja'] == 1 || $row['idjamkerja'] == 5 || $row['idjamkerja'] == 8)){
                            $status = 'Pagi';
                            if($row['waktumasuk'] != '' && $row['waktukeluar'] != '' && $kr == 0){
                                $totalpagi = $totalpagi+1;
                            }
                        }
                        // pagi shift
                        if($row['jenisjamkerja'] == 'shift' && $row['idalasantidakmasuk'] == '' && $row['jadwalmasukkerja'] == 'y' && ($row['idjamkerjashift'] == 25 || $row['idjamkerjashift'] == 26 || $row['idjamkerjashift'] == 31 || $row['idjamkerjashift'] == 32 || $row['idjamkerjashift'] == 33 || $row['idjamkerjashift'] == 23 || $row['idjamkerjashift'] == 15 || $row['idjamkerjashift'] == 16 || $row['idjamkerjashift'] == 4 || $row['idjamkerjashift'] == 6 || $row['idjamkerjashift'] == 13 || $row['idjamkerjashift'] == 11 || $row['idjamkerjashift'] == 38 || $row['idjamkerjashift'] == 39 || $row['idjamkerjashift'] == 19 || $row['idjamkerjashift'] == 20 || $row['idjamkerjashift'] == 21 || $row['idjamkerjashift'] == 42 || $row['idjamkerjashift'] == 43 || $row['idjamkerjashift'] == 36 || $row['idjamkerjashift'] == 22 || $row['idjamkerjashift'] == 44 || $row['idjamkerjashift'] == 46 || $row['idjamkerjashift'] == 47 || $row['idjamkerjashift'] == 48 || $row['idjamkerjashift'] == 49)){
                            $status = 'Pagi';
                            if($kr == 0) {
                                $totalpagi = $totalpagi + 1;
                            }
                        }
                        // sore shift
                        if($row['jenisjamkerja'] == 'shift' && $row['idalasantidakmasuk'] == '' && $row['jadwalmasukkerja'] == 'y' && ($row['idjamkerjashift'] == 34 || $row['idjamkerjashift'] == 5 || $row['idjamkerjashift'] == 7 || $row['idjamkerjashift'] == 14 || $row['idjamkerjashift'] == 12 || $row['idjamkerjashift'] == 41 || $row['idjamkerjashift'] == 37)){
                            $status = 'Sore';
                            if($row['waktumasukshift'] != '' && $row['waktukeluarshift'] != '' && $kr == 0){
                                $totalsore = $totalsore + 1;
                            }
                        }
                        // malam shift
                        if($row['jenisjamkerja'] == 'shift' && $row['idalasantidakmasuk'] == '' && $row['jadwalmasukkerja'] == 'y' && ($row['idjamkerjashift'] == 24 || $row['idjamkerjashift'] == 8 || $row['idjamkerjashift'] == 10 || $row['idjamkerjashift'] == 45)){
                            $status = 'Malam';
                            if($kr == 0) {
                                $totalmalam = $totalmalam + 1;
                            }
                        }
                        if($row['jadwalmasukkerja'] == 't'){
                            $status = 'Libur';
                            $pdf->setFillColor(255,192,203);
                            $fill=true;
                        }
                        if($row['idjamkerjashift'] != 17 && $row['idjamkerjashift'] != 18 && $row['idjamkerjashift'] != 30 && $row['idjamkerjashift'] != 27 && $row['idjamkerjashift'] != 28 && $row['idjamkerjashift'] != 29){
                            $totallamakerja = $totallamakerja + $totaljamkerja;
                            $totalkelebihanjamkerja = $totalkelebihanjamkerja + $kelebihanjamkerja;
                            $datangtelat = $row['jenisjamkerja'] == 'full' ? $row['datangtelat'] : $row['datangtelatshift'];
                            $pulangcepat = $row['jenisjamkerja'] == 'full' ? $row['pulangcepat'] : $row['pulangcepatshift'];
                        }
                        $totaldatangtelat = $totaldatangtelat + $datangtelat;
                        $totalpulangcepat = $totalpulangcepat + $pulangcepat;
                        if($row['sakit'] != ''){
                            $status = 'Sakit';
                            $totalsakit = $totalsakit+1;
                        }
                        if($row['ijin'] != ''){
                            $status = 'Ijin';
                            $totalizin = $totalizin+1;
                        }
                        if($row['alpha'] != ''){
                            $status = 'Alpha';
                            $totalalpha = $totalalpha+1;
                        }
                        if($row['cuti'] != ''){
                            $status = 'Cuti';
                            $totalcuti = $totalcuti+1;
                        }
                        if($row['idalasantidakmasuk'] == 5 || $row['idalasantidakmasuk'] == 6 || $row['idalasantidakmasuk'] == 7){ // request 20201001
                            $status = 'Cuti';
                            $totalcuti = $totalcuti+1;
                        }
                        if($row['dlsppd'] != ''){
                            $status = 'DL SPPD';
                            $totaldlsppd = $totaldlsppd+1;
                        }
                        if($row['wfh'] != ''){
                            $status = 'WFH';
                            $totalwfh = $totalwfh+1;
                        }
                        if($row['jagaonsite'] > 0){
                            $totaljagaonsite = $totaljagaonsite + 1;
                        }
                        if($row['jagapiket'] > 0){
                            $totaljagapiket = $totaljagapiket + 1;
                        }
                        if($row['lembur'] > 0){
                            $totaljamlembur = $totaljamlembur + 1;
                        }
                        if($kr == 1){
                            $status = 'KR';
                        }
                        if($tj == 1){
                            $status = 'TJ';
                        }
                        if($row['idalasantidakmasuk'] == '2'){
                            $status = 'DL NON SPPD';
                        }

                        $lembur = $row['lembur'];
                        if($row['jenisjamkerja'] == 'full' && $kelebihanjamkerja > 7200){
                            $lembur = $row['lembur'] + $kelebihanjamkerja;
                            $totaljamlembur = $totaljamlembur + 1;
                            $totalkelebihanjamkerja = $totalkelebihanjamkerja - $kelebihanjamkerja;
                        }

                        $pdf->Cell($width_cell[0],$hc[2],Utils::convertYmd2Dmy($tgl),1,0,'C', $fill);
                        $pdf->Cell($width_cell[0],$hc[2],Utils::getHari($dow+1),1,0,'C', $fill);
                        $pdf->Cell($width_cell[1],$hc[2],$waktumasuk != '' ? $arrwaktumasuk[1] : '',1,0,'C', $fill);
                        $pdf->Cell($width_cell[1],$hc[2],$waktukeluar != '' ? $arrwaktukeluar[1] : '',1,0,'C', $fill);
                        $pdf->Cell($width_cell[1],$hc[2],Utils::sec2hhmm($totaljamkerja),1,0,'C', $fill);
                        $pdf->Cell($width_cell[1],$hc[2],Utils::sec2hhmm($kelebihanjamkerja),1,0,'C', $fill);
                        $pdf->Cell($width_cell[1],$hc[2],Utils::sec2hhmm($datangtelat),1,0,'C', $fill);
                        $pdf->Cell($width_cell[1],$hc[2],Utils::sec2hhmm($pulangcepat),1,0,'C', $fill);
                        $pdf->Cell($width_cell[2],$hc[2],$row['sakit'] > 0 ? 1 : '',1,0,'C', $fill);
                        $pdf->Cell($width_cell[3],$hc[2],$row['ijin'] > 0 ? 1 : '',1,0,'C', $fill);
                        $pdf->Cell($width_cell[2],$hc[2],$row['alpha'] > 0 ? 1 : '',1,0,'C', $fill);
                        $pdf->Cell($width_cell[3],$hc[2],$row['cuti'] > 0 ? 1 : '',1,0,'C', $fill);
                        $pdf->Cell($width_cell[1],$hc[2],$row['dlsppd'] > 0 ? 1 : '',1,0,'C', $fill);
                        $pdf->Cell($width_cell[2],$hc[2],$row['wfh'] > 0 ? 1 : '',1,0,'C', $fill);
                        $pdf->Cell($width_cell[0],$hc[2],$status,1,0,'C', $fill);
                        $pdf->Cell($width_cell[0],$hc[2],Utils::sec2hhmm($row['jagaonsite']),1,0,'C', $fill);
                        $pdf->Cell($width_cell[0],$hc[2],Utils::sec2hhmm($row['jagapiket']),1,0,'C', $fill);
                        $pdf->Cell($width_cell[0],$hc[2],Utils::sec2hhmm($lembur),1,0,'C', $fill);
                        $pdf->Ln();
                    }
                }
                // jumlah/total
                $pdf->Cell($width_cell[0],$hc[2],'Jumlah',1,0);
                $pdf->Cell($width_cell[0],$hc[2],'',1,0);
                $pdf->Cell($width_cell[1],$hc[2],'',1,0);
                $pdf->Cell($width_cell[1],$hc[2],'',1,0);
                $pdf->Cell($width_cell[1],$hc[2],$totallamakerja > 0 ? Utils::sec2hhmm($totallamakerja) : '00:00',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],$totalkelebihanjamkerja > 0 ? Utils::sec2hhmm($totalkelebihanjamkerja) : '00:00',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],$totaldatangtelat > 0 ? Utils::sec2hhmm($totaldatangtelat) : '00:00',1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],$totalpulangcepat > 0 ? Utils::sec2hhmm($totalpulangcepat) : '00:00',1,0,'C');
                $pdf->Cell($width_cell[2],$hc[2],$totalsakit,1,0,'C');
                $pdf->Cell($width_cell[3],$hc[2],$totalizin,1,0,'C');
                $pdf->Cell($width_cell[2],$hc[2],$totalalpha,1,0,'C');
                $pdf->Cell($width_cell[3],$hc[2],$totalcuti,1,0,'C');
                $pdf->Cell($width_cell[1],$hc[2],$totaldlsppd,1,0,'C');
                $pdf->Cell($width_cell[2],$hc[2],$totalwfh,1,0,'C');
                $pdf->Cell($width_cell[0],$hc[2],'',1,0,'C');
                $pdf->Cell($width_cell[0],$hc[2],$totaljagaonsite,1,0,'C');
                $pdf->Cell($width_cell[0],$hc[2],$totaljagapiket,1,0,'C');
                $pdf->Cell($width_cell[0],$hc[2],$totaljamlembur,1,0,'C');
                $pdf->Ln();

                // total tj
                $tj2 = $tj2 < 0 ? 0 : $tj2;
                $totaltj = $tj1+$tj2-$L3;
                if($tj1 < 0){
                    $totaltj=0;
                }

                $pdf->Cell(0,$hc[2],'',0,1); // enter
                $pdf->Cell($width_cell[1],$hc[2],'Pagi',0,0);
                $pdf->Cell($width_cell[1],$hc[2],$totalpagi,0,0);
                $pdf->Cell(0,$hc[2],'',0,1); // enter
                $pdf->Cell($width_cell[1],$hc[2],'Sore',0,0);
                $pdf->Cell($width_cell[1],$hc[2],$totalsore,0,0);
                $pdf->Cell(0,$hc[2],'',0,1); // enter
                $pdf->Cell($width_cell[1],$hc[2],'Malam',0,0);
                $pdf->Cell($width_cell[1],$hc[2],$totalmalam,0,0);
                $pdf->Cell(0,$hc[2],'',0,1); // enter
                $pdf->Cell($width_cell[1],$hc[2],'KR',0,0);
                $pdf->Cell($width_cell[1],$hc[2],$totalkr,0,0);
                $pdf->Cell(0,$hc[2],'',0,1); // enter
                $pdf->Cell($width_cell[1],$hc[2],'TJ',0,0);
                $pdf->Cell($width_cell[1],$hc[2],$totaltj,0,0);

            }
            $pdf->Output('D', time() . '_Format_rekap_pegawai_tipe2.pdf');
//            $pdf->AddPage('L');
//            $pdf->SetFont('Arial','B',6);
//            $pdf->Cell(50,10,'tester',1,0,'C');
//
//            $pdf->AddPage('L');
//            $pdf->SetFont('Arial','B',6);
//            $pdf->Cell(50,10,'tester 2',1,0,'C');
//            $pdf->Output('D', time() . '_' . trans('all.perpegawai') . 'tipe2.pdf');
        }
    }

    public function EksporLainnyaTipe3($tanggalawal,$tanggalakhir,$atribut,$jamkerjafull,$jamkerjashift){
        if(Utils::cekHakakses('laporanekspor','l')){

            $tanggalawal = Utils::convertDmy2Ymd($tanggalawal);
            $tanggalakhir = Utils::convertDmy2Ymd($tanggalakhir);
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );
            Utils::setPropertiesExcel($objPHPExcel,'Rekap Ketidakhadiran Pegawai');

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A2', 'REKAP KETIDAK HADIRAN PEGAWAI RSUP FATMAWATI')
                        ->setCellValue('A3', 'PERIODE TANGGAL '.Utils::tanggalCantikDariSampai($tanggalawal,$tanggalakhir))
                        ->setCellValue('A5', 'NO')
                        ->setCellValue('B5', 'NAMA')
                        ->setCellValue('C5', 'NIP')
                        ->setCellValue('D5', 'GOL')
                        ->setCellValue('E5', 'JUMLAH')
                        ->setCellValue('F5', 'TANGGAL')
                        ->setCellValue('G5', 'SATKER');

            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where = ' AND p.id IN ' . $batasan;
            }

            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $where .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $where .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            if($jamkerjashift != ''){
                $jamkerjashiftdetail = Utils::jamKerja($jamkerjashift);
                $where .= ' AND p.id IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN "' . $tanggalawal . '" AND "' . $tanggalakhir . '" AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
            }

            $sql = 'SELECT
                        ra.idpegawai,
                        p.nama,
                        getatributvariablepegawai(p.id, 1) as nip,
                        getatributpegawai(p.id, 4) as gol,
                        COUNT(ra.tanggal) as jumlah,
                        -- GROUP_CONCAT(DATE_FORMAT(ra.tanggal, \'%e\') ORDER BY ra.tanggal ASC separator \',\') as tgl,
                        GROUP_CONCAT(ra.tanggal ORDER BY ra.tanggal ASC) as tanggal,
                        getatributpegawai(p.id, 1) as satker
                    FROM
                        pegawai p,
                        rekapabsen ra
                    WHERE
                        ra.idpegawai=p.id AND
                        ra.jadwalmasukkerja = \'y\' AND
                        ra.masukkerja = \'t\' AND
                        ra.tanggal between :tanggalawal AND :tanggalakhir AND
                        -- (ISNULL(ra.idalasantidakmasuk)=true OR ra.idalasantidakmasuk NOT IN(SELECT id FROM alasantidakmasuk WHERE kategori IN(\'s\',\'i\',\'c\')))
                        ISNULL(ra.idalasantidakmasuk)=true
                        '.$where.'
                    GROUP BY
                        p.id
                    ORDER BY
                        jumlah DESC, p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            $stmt->execute();
            $i=6;
            $no = 1;
            while($row = $stmt->fetch(PDO::FETCH_ASSOC)){

                $objPHPExcel->getActiveSheet()->setCellValue('A'.$i, $no);
                $objPHPExcel->getActiveSheet()->setCellValue('B'.$i, $row['nama']);
                $objPHPExcel->getActiveSheet()->setCellValue('C'.$i, '`'.$row['nip']);
                $objPHPExcel->getActiveSheet()->setCellValue('D'.$i, $row['gol']);
                $objPHPExcel->getActiveSheet()->setCellValue('E'.$i, $row['jumlah']);
                $objPHPExcel->getActiveSheet()->setCellValue('F'.$i, Utils::KumpulanTanggal($row['tanggal']));
                $objPHPExcel->getActiveSheet()->setCellValue('G'.$i, $row['satker']);

                for($j=1;$j<8;$j++){
                    $hb = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($hb.$i)->applyFromArray($styleArray);
                }

                $i++;
                $no++;
            }

            // style header A4 dan A5
            $objPHPExcel->getActiveSheet()->mergeCells('A2:G2');
            $objPHPExcel->getActiveSheet()->mergeCells('A3:G3');
            $objPHPExcel->getActiveSheet()->getStyle('A2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('A3')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

            for($j=1;$j<8;$j++){
                $hb = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($hb.'5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($hb.'5')->applyFromArray($styleArray);
            }

            $arrWidth = array(5, 50, 25, 5, 10, 75, 45);
            Utils::setHeaderStyleExcel($objPHPExcel,$arrWidth);
            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan rekap ketidakhadiran pegawai');
            Utils::setFileNameExcel('RekapKetidakhadiranpegawai');
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function ijinTidakMasukExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift){
        if(Utils::cekHakakses('laporanekspor','l')){
            $objPHPExcel = new PHPExcel();
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.ijintidakmasuk'));

            $pdo = DB::connection('perusahaan_db')->getPdo();
            //select atrbut variable
            $sql = 'SELECT id, md5(CONCAT(atribut,"_atributvariable",id)) as nama,atribut FROM atributvariable WHERE penting = "y" ORDER BY atribut';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $totalatributvariable = $stmt->rowCount();

            $i = 2;
            $a = 0;
            $arratirbutvariable = array();
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $hh = Utils::angkaToHuruf($i);
                $arratirbutvariableheader[$a] = $row['atribut'];
                $arratirbutvariable[$a] = $row['nama'];

                //lebar kolom
                $objPHPExcel->getActiveSheet()->setCellValue($hh . '1', $row['atribut']);
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                $i++;
                $a++;
            }

            //select atrbut penting
            $sql = 'SELECT id, md5(CONCAT(atribut,"_atributpenting",id)) as nama,atribut FROM atribut WHERE penting="y" ORDER BY atribut';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $totalatributpenting = $stmt->rowCount();

            $a = 0;
            $arratirbutpenting = array();
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $hh = Utils::angkaToHuruf($i);
                $arratirbutpentingheader[$a] = $row['atribut'];
                $arratirbutpenting[$a] = $row['nama'];

                //lebar kolom
                $objPHPExcel->getActiveSheet()->setCellValue($hh . '1', $row['atribut']);
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                $i++;
                $a++;
            }

            // hh huruf header
            $hh1 = Utils::angkaToHuruf($i);
            $hh2 = Utils::angkaToHuruf($i+1);
            $hh3 = Utils::angkaToHuruf($i+2);
            $hh4 = Utils::angkaToHuruf($i+3);
            $hh5 = Utils::angkaToHuruf($i+4);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.pegawai'))
                        ->setCellValue($hh1.'1', trans('all.tanggal'))
                        ->setCellValue($hh2.'1', trans('all.alasan'))
                        ->setCellValue($hh3.'1', trans('all.keteranganpengajuan'))
                        ->setCellValue($hh4.'1', trans('all.keterangankonfirmasi'))
                        ->setCellValue($hh5.'1', trans('all.status'));

            $objPHPExcel->getActiveSheet()->getColumnDimension($hh1)->setWidth(25);
            $objPHPExcel->getActiveSheet()->getColumnDimension($hh2)->setWidth(25);
            $objPHPExcel->getActiveSheet()->getColumnDimension($hh3)->setWidth(70);
            $objPHPExcel->getActiveSheet()->getColumnDimension($hh4)->setWidth(70);
            $objPHPExcel->getActiveSheet()->getColumnDimension($hh5)->setWidth(12);

            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where .= ' AND i.idpegawai IN '.$batasan;
            }

            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $where .= ' AND i.idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $where .= ' AND i.idpegawai IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            if($jamkerjashift != ''){
                $jamkerjashiftdetail = Utils::jamKerja($jamkerjashift);
                $where .= ' AND i.idpegawai IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y") AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
            }

            $tanggalawal_str = Utils::convertDmy2Ymd($tanggalawal); //berformat yyyy-mm-dd
            $tanggalakhir_str = Utils::convertDmy2Ymd($tanggalakhir); //berformat yyyy-mm-dd

            if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                //dengan tanggal
                if(Session::has('laprekapabsen_bulan') && Session::has('laprekapabsen_tahun') && Session::has('laprekapabsen_tanggal')){
                    // $tanggal = implode(",", Session::get('laprekapabsen_tanggal'));
                    $tanggal = Session::get('laprekapabsen_tanggal');
                    $where .= ' AND (';
                    for($i=0;$i<count($tanggal);$i++){
                        $tanggal_i = Session::get('laprekapabsen_tahun').'-'.Session::get('laprekapabsen_bulan').'-'.str_pad($tanggal[$i],2,0,STR_PAD_LEFT);
                        if($i == count($tanggal)-1){
                            $where .= ' ( "'.$tanggal_i.'"  BETWEEN i.tanggalawal AND i.tanggalakhir ) ';
                        }else{
                            $where .= ' ( "'.$tanggal_i.'"  BETWEEN i.tanggalawal AND i.tanggalakhir ) OR';
                        }
                    }
                    $where .= ')';
                }else if(Session::has('laprekapabsen_bulan') && Session::has('laprekapabsen_tahun')){
                    //tanpa tanggal(perbulan)
                    $where .= ' AND DATE_FORMAT(i.tanggalakhir,"%Y%m") >=  "'.Session::get('laprekapabsen_tahun').Session::get('laprekapabsen_bulan').'" AND DATE_FORMAT(i.tanggalawal,"%Y%m") <= "'.Session::get('laprekapabsen_tahun').Session::get('laprekapabsen_bulan').'"';
                }
            }else{
                $where .= ' AND ( i.tanggalakhir >=  "'.$tanggalawal_str.'" AND i.tanggalawal <= "'.$tanggalakhir_str.'" )';
            }

            //get atributvariable query
            $atributvariable = Utils::getAtributVariableQuery('i.idpegawai');

            //get atributpenting query
            $atributpenting = Utils::getAtributPentingQuery('i.idpegawai');

            $sql = 'SELECT
                        p.nama as pegawai,
                        ' . $atributvariable . '
                        ' . $atributpenting . '
                        i.tanggalawal as tanggalawal,
                        i.tanggalakhir as tanggalakhir,
                        a.alasan,
                        i.keterangan,
                        i.keterangankonfirmasi,
                        IF(i.status="a","' . trans("all.diterima") . '",IF(i.status="c","' . trans("all.confirm") . '","' . trans("all.ditolak") . '")) as status
                    FROM
                        ijintidakmasuk i
                        LEFT JOIN pegawai p ON i.idpegawai=p.id
                        LEFT JOIN alasantidakmasuk a ON i.idalasantidakmasuk=a.id
                    WHERE
                        1=1
                        ' . $where . '
                    ORDER BY
                        p.nama';
            // return $sql;
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pegawai']);
                $objPHPExcel->getActiveSheet()->setCellValue($hh1 . $i, Utils::tanggalCantikDariSampai($row['tanggalawal'],$row['tanggalakhir']));
                $objPHPExcel->getActiveSheet()->setCellValue($hh2 . $i, $row['alasan']);
                $objPHPExcel->getActiveSheet()->setCellValue($hh3 . $i, $row['keterangan']);
                $objPHPExcel->getActiveSheet()->setCellValue($hh4 . $i, $row['keterangankonfirmasi']);
                $objPHPExcel->getActiveSheet()->setCellValue($hh5 . $i, $row['status']);

                //atributvariable
                $z = 2;
                $a = 0;
                for ($j = 0; $j < $totalatributvariable; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    //$objPHPExcel->getActiveSheet()->setCellValue($hh.$i, $row[$arratirbutvariable[$a]]);
                    $objPHPExcel->getActiveSheet()->setCellValueExplicit($hh . $i, $row[$arratirbutvariable[$a]], PHPExcel_Cell_DataType::TYPE_STRING);

                    $z++;
                    $a++;
                }

                //atributpenting
                $a = 0;
                for ($j = 0; $j < $totalatributpenting; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $i, $row[$arratirbutpenting[$a]]);

                    $z++;
                    $a++;
                }

                // center text
                $objPHPExcel->getActiveSheet()->getStyle($hh4 . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                for ($j = 1; $j <= 6+$totalatributvariable+$totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                }
                $i++;
            }

            $objPHPExcel->getActiveSheet()->getStyle($hh4.'1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

            // $arrWidth = array('', 40, 25, 25, 70, 12);
            for ($j = 1; $j <= 6+$totalatributvariable+$totalatributpenting; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->applyFromArray($styleArray);
                // $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan ijin tidak masuk');
            Utils::setFileNameExcel(trans('all.ijintidakmasuk'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function timesheetSudahTerisi($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $keteranganheader = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));

            if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                $tanggal_bt = Session::get('laprekapabsen_tanggal');
                $bulan_bt = str_pad(Session::get('laprekapabsen_bulan'),2,"0",STR_PAD_LEFT); //_bt = berdasarkan tanggal
                $tahun_bt = Session::get('laprekapabsen_tahun');
                $keteranganheader = Session::get('laprekapabsen_keterangan');
                // return implode($tanggal).'<br>'.$tanggal[9].'<br>'.str_pad($tanggal[9],2,"0",STR_PAD_LEFT).' '.$bulan_bt.' '.$tahun_bt;
                // return $bulan.' '.$tahun;
                $deom = date('t', strtotime(date('Ymd',strtotime($tahun_bt.$bulan_bt.'01')))); //deom = date end of the month
                $tanggalawal = '01/'.$bulan_bt.'/'.$tahun_bt;
                $tanggalakhir = $deom.'/'.$bulan_bt.'/'.$tahun_bt;
            }

            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where = ' AND p.id IN ' . $batasan;
            }

            $tanggalawal_str = strtotime(Utils::convertDmy2Ymd($tanggalawal));
            $tanggalakhir_str = strtotime(Utils::convertDmy2Ymd($tanggalakhir));
            $jumlahhari_diff = $tanggalakhir_str - $tanggalawal_str;
            $selisihhari = round($jumlahhari_diff / (60 * 60 * 24)) + 1;

            if($selisihhari > 31){
                return redirect('laporan/rekapabsen')->with('message', trans('all.selisihharimaksimal31'));
            }

            $objPHPExcel = new PHPExcel();
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.timesheetsudahterisi'));

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.nomor_singkat'))
                        ->setCellValue('B1', trans('all.pin'))
                        ->setCellValue('C1', trans('all.nama'))
                        ->setCellValue('D1', trans('all.jenis'))
                        ->setCellValue('E1', $keteranganheader);

            $objPHPExcel->getActiveSheet()->mergeCells('A1:A2');
            $objPHPExcel->getActiveSheet()->mergeCells('B1:B2');
            $objPHPExcel->getActiveSheet()->mergeCells('C1:C2');
            $objPHPExcel->getActiveSheet()->mergeCells('D1:D2');

            $objPHPExcel->getActiveSheet()->getStyle('E1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('E1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

            //hari
            $ah = 5; // karena dari E (huruf ke 5)
            if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                for($i = 0;$i<$selisihhari;$i++){
                    $hh = Utils::angkaToHuruf($ah);
                    $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$i.' day'));
                    $tgltanpa0 = date('j', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$i.' day')); // taggal yang tidak memakai 0 didepan jika kurang dari 10
                    if(in_array($tgltanpa0, $tanggal_bt)){
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . '2', $tgl);
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(5);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                        $ah++;
                    }
                }
            }else{
                for($i = 0;$i<$selisihhari;$i++){
                    $hh = Utils::angkaToHuruf($ah);
                    $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$i.' day'));
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . '2', $tgl);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(5);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $ah++;
                }
            }
            $objPHPExcel->getActiveSheet()->mergeCells('E1:'.Utils::angkaToHuruf($ah-1).'1');
            $hh1 = Utils::angkaToHuruf($ah);
            $hh2 = Utils::angkaToHuruf($ah+1);
            $hh3 = Utils::angkaToHuruf($ah+2);
            $objPHPExcel->getActiveSheet()->mergeCells($hh1.'1:'.$hh3.'1');
            $objPHPExcel->getActiveSheet()->setCellValue($hh1 . '1', 'Total');
            $objPHPExcel->getActiveSheet()->setCellValue($hh1 . '2', 'ST');
            $objPHPExcel->getActiveSheet()->setCellValue($hh2 . '2', 'OT');
            $objPHPExcel->getActiveSheet()->setCellValue($hh3 . '2', 'ALW');
            $objPHPExcel->getActiveSheet()->getColumnDimension($hh1)->setWidth(5);
            $objPHPExcel->getActiveSheet()->getColumnDimension($hh2)->setWidth(5);
            $objPHPExcel->getActiveSheet()->getColumnDimension($hh3)->setWidth(5);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh2 . '1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh3 . '1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '2')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh2 . '2')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh3 . '2')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh2 . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh2 . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh3 . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh3 . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

            $arrWidth = array('', 5, 15, 30, 5);
            for($i = 1;$i<5;$i++){
                $hh = Utils::angkaToHuruf($i);
                $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth($arrWidth[$i]);
                $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            }

            $atributnilai = '';
            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                // $whereAtribut .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $where .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            $sql = 'CALL laporanabsenpertanggal(:tanggalawal,:tanggalakhir,:atribut,:bahasa)';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
            $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
            $stmt->bindValue(':atribut', $atributnilai);
            $stmt->bindValue(':bahasa', Session::get('conf_bahasaperusahaan'));
            $stmt->execute();

            $querysql = 'p.pin as pin';
//            if(Session::get('conf_webperusahaan') == '12009'){ // virtus local
            if(Session::get('conf_webperusahaan') == '12035'){ // virtus online
                $querysql = 'getatributvariablepegawai(p.id, 8) as pin';
            }

            $sql = 'SELECT
                        t.*,
                        '.$querysql.'
                    FROM
                        temp_laporanabsenpertanggal t,
                        pegawai p
                    WHERE
                        t.idpegawai = p.id AND
                        p.del = "t" AND
                        p.status = "a"
                        '.$where.'
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 3;
            $no = 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $ib = $i++;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $ib, $no);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $ib, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $ib, $row['nama']);

                $it = $ib+1;
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $ib, 'ST');
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $it, 'OT');
                $objPHPExcel->getActiveSheet()->getStyle('D' . $it)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('D' . $it)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                $objPHPExcel->getActiveSheet()->mergeCells('A'.$ib.':A'.$it);
                $objPHPExcel->getActiveSheet()->mergeCells('B'.$ib.':B'.$it);
                $objPHPExcel->getActiveSheet()->mergeCells('C'.$ib.':C'.$it);

                for ($j = 1; $j <= 4; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $ib)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $it)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $ib)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $ib)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                }

                // cek apakah pegawai tsb memiliki atributnilai terpilih (untuk pengecekan harilibur) // bugs tgl 202006181609
                $atributharilibur = Utils::filterAtributPegawai($row['idpegawai'],$atributnilai);

                $ah = 5;
                $total_st = 0;
                $total_ot = 0;
                if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                    for($j = 0;$j<$selisihhari;$j++){
                        $hh = Utils::angkaToHuruf($ah);
                        $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                        $hari = date('w', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day')); // 0 minggu 6 sabtu
                        $tgltanpa0 = date('j', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day')); // taggal yang tidak memakai 0 didepan jika kurang dari 10
                        if(in_array($tgltanpa0, $tanggal_bt)){
                            $date = date('Ymd', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                            $date2 = date('Y-m-d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                            $indexjamkerja = 0;
                            $cekharilibur = Utils::cekHariLibur($date2,$atributharilibur) == true ? 'y' : 't';
                            $lamakerja = 0;
                            if($row['jumlahsesi_'.$date] != 0 ){
                                $indexjamkerja = Utils::getIndexJamKerja(Utils::sec2prettyCustom($row['lamakerja_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']);
                                $lamakerja = $row['lamakerja_'.$date]/3600 > 23.55 ? round($row['lamakerja_'.$date]/3600,0) : $row['lamakerja_'.$date]/3600;
                            }
                            $total_st = $total_st + ($row['lamakerja_'.$date] != 0 ? $row['jumlahsesi_'.$date] : 0) + $indexjamkerja;
//                            $total_st = $total_st + ($row['lamakerja_'.$date] != 0 ? 1 : 0) + $indexjamkerja;
                            $total_ot = $total_ot + Utils::getIndexLembur(Utils::sec2prettyCustom($row['lamalembur_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']);
                            $objPHPExcel->getActiveSheet()->setCellValue($hh . $ib, $lamakerja);
                            $objPHPExcel->getActiveSheet()->setCellValue($hh . $it, Utils::getIndexLembur(Utils::sec2prettyCustom($row['lamalembur_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']));
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(5);
                            $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->applyFromArray($styleArray);
                            $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->applyFromArray($styleArray);
                            $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                            $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                            $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                            $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                            $ah++;
                        }
                    }
                }else{
                    for($j = 0;$j<$selisihhari;$j++){
                        $hh = Utils::angkaToHuruf($ah);
                        $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                        $hari = date('w', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day')); // 0 minggu 6 sabtu
                        $date = date('Ymd', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                        $date2 = date('Y-m-d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                        $indexjamkerja = 0;
                        $cekharilibur = Utils::cekHariLibur($date2,$atributharilibur) == true ? 'y' : 't';
                        $lamakerja = 0;
                        if($row['jumlahsesi_'.$date] != 0 ){
                            $indexjamkerja = Utils::getIndexJamKerja(Utils::sec2prettyCustom($row['lamakerja_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']);
                            $lamakerja = $row['lamakerja_'.$date]/3600 > 23.55 ? round($row['lamakerja_'.$date]/3600,0) : $row['lamakerja_'.$date]/3600;
                        }
                        $total_st  = $total_st + ($row['lamakerja_'.$date] != 0 ? $row['jumlahsesi_'.$date] : 0) + $indexjamkerja;
//                        $total_st  = $total_st + ($row['lamakerja_'.$date] != 0 ? 1 : 0) + $indexjamkerja;
                        $total_ot  = $total_ot + Utils::getIndexLembur(Utils::sec2prettyCustom($row['lamalembur_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $ib, $lamakerja);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $it, Utils::getIndexLembur(Utils::sec2prettyCustom($row['lamalembur_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']));
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(5);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                        $ah++;
                    }
                }

                $hh1 = Utils::angkaToHuruf($ah); // total st
                $hh2 = Utils::angkaToHuruf($ah+1); // total ot
                $hh3 = Utils::angkaToHuruf($ah+2); // total alw
                $objPHPExcel->getActiveSheet()->setCellValue($hh1 . $ib, $total_st); // periksa total index jam kerja
                $objPHPExcel->getActiveSheet()->setCellValue($hh2 . $ib, $total_ot);
                $objPHPExcel->getActiveSheet()->getStyle($hh1 . $ib)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($hh1 . $ib)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($hh2 . $ib)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($hh2 . $ib)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                $hh1 = Utils::angkaToHuruf($ah);
                $hh2 = Utils::angkaToHuruf($ah+1);
                $hh3 = Utils::angkaToHuruf($ah+2);
                $objPHPExcel->getActiveSheet()->getStyle($hh1 . $ib)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($hh1 . $it)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($hh2 . $ib)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($hh2 . $it)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($hh3 . $ib)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($hh3 . $it)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->mergeCells($hh1.$ib.':'.$hh1.$it);
                $objPHPExcel->getActiveSheet()->mergeCells($hh2.$ib.':'.$hh2.$it);
                $objPHPExcel->getActiveSheet()->mergeCells($hh3.$ib.':'.$hh3.$it);


                $i++;
                $no++;
            }

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan timesheet sudah terisi');
            Utils::setFileNameExcel(trans('all.timesheetsudahterisi'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function timesheetSudahTerisiZip($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull){
        if(Utils::cekHakakses('laporanekspor','l')){
//            set_time_limit(300); // hanya untuk local
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $keteranganheader = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));

            if($atribut != '' && count($atribut) > 0){
                $tanggal_bt = '';
                if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                    $tanggal_bt = Session::get('laprekapabsen_tanggal');
                    $bulan_bt = str_pad(Session::get('laprekapabsen_bulan'),2,"0",STR_PAD_LEFT); //_bt = berdasarkan tanggal
                    $tahun_bt = Session::get('laprekapabsen_tahun');
                    $keteranganheader = Session::get('laprekapabsen_keterangan');
                    // return implode($tanggal).'<br>'.$tanggal[9].'<br>'.str_pad($tanggal[9],2,"0",STR_PAD_LEFT).' '.$bulan_bt.' '.$tahun_bt;
                    // return $bulan.' '.$tahun;
                    $deom = date('t', strtotime(date('Ymd',strtotime($tahun_bt.$bulan_bt.'01')))); //deom = date end of the month
                    $tanggalawal = '01/'.$bulan_bt.'/'.$tahun_bt;
                    $tanggalakhir = $deom.'/'.$bulan_bt.'/'.$tahun_bt;
                }

                $where = '';
                $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
                if ($batasan != '') {
                    $where = ' AND p.id IN ' . $batasan;
                }

                $tanggalawal_str = strtotime(Utils::convertDmy2Ymd($tanggalawal));
                $tanggalakhir_str = strtotime(Utils::convertDmy2Ymd($tanggalakhir));
                $jumlahhari_diff = $tanggalakhir_str - $tanggalawal_str;
                $selisihhari = round($jumlahhari_diff / (60 * 60 * 24)) + 1;

                if($selisihhari > 31){
                    return redirect('laporan/rekapabsen')->with('message', trans('all.selisihharimaksimal31'));
                }
                // looping untuk buat file excel per atribut terpilih
                $arr_dir = [];
                for($a=0;$a<count($atribut);$a++) {
                    $idatribut = $atribut[$a];
                    $namaatribut = Utils::getDataWhere($pdo,'atributnilai','nilai','id',$idatribut);

                    $objPHPExcel = new PHPExcel();
                    $styleArray = array(
                        'borders' => array(
                            'outline' => array(
                                'style' => PHPExcel_Style_Border::BORDER_THIN,
                                'color' => array('argb' => '000000'),
                            ),
                        ),
                    );

                    Utils::setPropertiesExcel($objPHPExcel, trans('all.timesheetsudahterisi'));

                    $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.nomor_singkat'))
                        ->setCellValue('B1', trans('all.pin'))
                        ->setCellValue('C1', trans('all.nama'))
                        ->setCellValue('D1', trans('all.jenis'))
                        ->setCellValue('E1', $keteranganheader);

                    $objPHPExcel->getActiveSheet()->mergeCells('A1:A2');
                    $objPHPExcel->getActiveSheet()->mergeCells('B1:B2');
                    $objPHPExcel->getActiveSheet()->mergeCells('C1:C2');
                    $objPHPExcel->getActiveSheet()->mergeCells('D1:D2');

                    $objPHPExcel->getActiveSheet()->getStyle('E1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle('E1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                    //hari
                    $ah = 5; // karena dari E (huruf ke 5)
                    if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                        for($i = 0;$i<$selisihhari;$i++){
                            $hh = Utils::angkaToHuruf($ah);
                            $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$i.' day'));
                            $tgltanpa0 = date('j', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$i.' day')); // taggal yang tidak memakai 0 didepan jika kurang dari 10
                            if(in_array($tgltanpa0, $tanggal_bt)){
                                $objPHPExcel->getActiveSheet()->setCellValue($hh . '2', $tgl);
                                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(5);
                                $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->applyFromArray($styleArray);
                                $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->applyFromArray($styleArray);
                                $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                                $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                                $ah++;
                            }
                        }
                    }else{
                        for($i = 0;$i<$selisihhari;$i++){
                            $hh = Utils::angkaToHuruf($ah);
                            $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$i.' day'));
                            $objPHPExcel->getActiveSheet()->setCellValue($hh . '2', $tgl);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(5);
                            $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->applyFromArray($styleArray);
                            $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->applyFromArray($styleArray);
                            $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                            $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                            $ah++;
                        }
                    }
                    $objPHPExcel->getActiveSheet()->mergeCells('E1:'.Utils::angkaToHuruf($ah-1).'1');
                    $hh1 = Utils::angkaToHuruf($ah);
                    $hh2 = Utils::angkaToHuruf($ah+1);
                    $hh3 = Utils::angkaToHuruf($ah+2);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh1.'1:'.$hh3.'1');
                    $objPHPExcel->getActiveSheet()->setCellValue($hh1 . '1', 'Total');
                    $objPHPExcel->getActiveSheet()->setCellValue($hh1 . '2', 'ST');
                    $objPHPExcel->getActiveSheet()->setCellValue($hh2 . '2', 'OT');
                    $objPHPExcel->getActiveSheet()->setCellValue($hh3 . '2', 'ALW');
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh1)->setWidth(5);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh2)->setWidth(5);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh3)->setWidth(5);
                    $objPHPExcel->getActiveSheet()->getStyle($hh1 . '1')->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh2 . '1')->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh3 . '1')->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh1 . '2')->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh2 . '2')->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh3 . '2')->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh1 . '1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh1 . '1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh1 . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh1 . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh2 . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh2 . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh3 . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh3 . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                    $arrWidth = array('', 5, 15, 30, 5);
                    for($i = 1;$i<5;$i++){
                        $hh = Utils::angkaToHuruf($i);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth($arrWidth[$i]);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    }

//                    $atributnilai = '';
//                    if ($atribut != '') {
//                        $atributnilai = Utils::atributNilai($atribut);
//                        // $whereAtribut .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
//                    }

                    if($jamkerjafull != ''){
                        $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                        $where .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
                    }

                    $sql = 'CALL laporanabsenpertanggal(:tanggalawal,:tanggalakhir,:atribut,:bahasa)';
                    $stmt = $pdo->prepare($sql);
                    $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
                    $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
                    $stmt->bindValue(':atribut', $idatribut);
                    $stmt->bindValue(':bahasa', Session::get('conf_bahasaperusahaan'));
                    $stmt->execute();

                    $querysql = 'p.pin as pin';
                    if(Session::get('conf_webperusahaan') == '12035') {
                        $querysql = 'getatributvariablepegawai(p.id, 8) as pin';
                    }

                    $sql = 'SELECT
                        t.*,
                        '.$querysql.'
                    FROM
                        temp_laporanabsenpertanggal t,
                        pegawai p
                    WHERE
                        t.idpegawai = p.id AND
                        p.del = "t" AND
                        p.status = "a"
                        '.$where.'
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama';
                    $stmt = $pdo->prepare($sql);
                    $stmt->execute();
                    $i = 3;
                    $no = 1;
                    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                        $ib = $i++;
                        $objPHPExcel->getActiveSheet()->setCellValue('A' . $ib, $no);
                        $objPHPExcel->getActiveSheet()->setCellValue('B' . $ib, $row['pin']);
                        $objPHPExcel->getActiveSheet()->setCellValue('C' . $ib, $row['nama']);

                        $it = $ib+1;
                        $objPHPExcel->getActiveSheet()->setCellValue('D' . $ib, 'ST');
                        $objPHPExcel->getActiveSheet()->setCellValue('D' . $it, 'OT');
                        $objPHPExcel->getActiveSheet()->getStyle('D' . $it)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle('D' . $it)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                        $objPHPExcel->getActiveSheet()->mergeCells('A'.$ib.':A'.$it);
                        $objPHPExcel->getActiveSheet()->mergeCells('B'.$ib.':B'.$it);
                        $objPHPExcel->getActiveSheet()->mergeCells('C'.$ib.':C'.$it);

                        for ($j = 1; $j <= 4; $j++) {
                            $huruf = Utils::angkaToHuruf($j);
                            $objPHPExcel->getActiveSheet()->getStyle($huruf . $ib)->applyFromArray($styleArray);
                            $objPHPExcel->getActiveSheet()->getStyle($huruf . $it)->applyFromArray($styleArray);
                            $objPHPExcel->getActiveSheet()->getStyle($huruf . $ib)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                            $objPHPExcel->getActiveSheet()->getStyle($huruf . $ib)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                        }

                        // cek apakah pegawai tsb memiliki atributnilai terpilih (untuk pengecekan harilibur) // bugs tgl 202006181609
                        $atributharilibur = Utils::filterAtributPegawai($row['idpegawai'],$idatribut);

                        $ah = 5;
                        $total_st = 0;
                        $total_ot = 0;
                        if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                            for($j = 0;$j<$selisihhari;$j++){
                                $hh = Utils::angkaToHuruf($ah);
                                $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                                $hari = date('w', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day')); // 0 minggu 6 sabtu
                                $tgltanpa0 = date('j', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day')); // taggal yang tidak memakai 0 didepan jika kurang dari 10
                                if(in_array($tgltanpa0, $tanggal_bt)){
                                    $date = date('Ymd', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                                    $date2 = date('Y-m-d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                                    $indexjamkerja = 0;
                                    $cekharilibur = Utils::cekHariLibur($date2,$atributharilibur) == true ? 'y' : 't';
                                    $lamakerja = 0;
                                    if($row['jumlahsesi_'.$date] != 0 ){
                                        $indexjamkerja = Utils::getIndexJamKerja(Utils::sec2prettyCustom($row['lamakerja_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']);
                                        $lamakerja = $row['lamakerja_'.$date]/3600 > 23.55 ? round($row['lamakerja_'.$date]/3600,0) : $row['lamakerja_'.$date]/3600;
                                    }
                                    $total_st = $total_st + ($row['lamakerja_'.$date] != 0 ? $row['jumlahsesi_'.$date] : 0) + $indexjamkerja;
//                            $total_st = $total_st + ($row['lamakerja_'.$date] != 0 ? 1 : 0) + $indexjamkerja;
                                    $total_ot = $total_ot + Utils::getIndexLembur(Utils::sec2prettyCustom($row['lamalembur_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']);
                                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $ib, $lamakerja);
                                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $it, Utils::getIndexLembur(Utils::sec2prettyCustom($row['lamalembur_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']));
                                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(5);
                                    $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->applyFromArray($styleArray);
                                    $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->applyFromArray($styleArray);
                                    $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                                    $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                                    $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                                    $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                                    $ah++;
                                }
                            }
                        }else{
                            for($j = 0;$j<$selisihhari;$j++){
                                $hh = Utils::angkaToHuruf($ah);
                                $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                                $hari = date('w', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day')); // 0 minggu 6 sabtu
                                $date = date('Ymd', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                                $date2 = date('Y-m-d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                                $indexjamkerja = 0;
                                $cekharilibur = Utils::cekHariLibur($date2,$atributharilibur) == true ? 'y' : 't';
                                $lamakerja = 0;
                                if($row['jumlahsesi_'.$date] != 0 ){
                                    $indexjamkerja = Utils::getIndexJamKerja(Utils::sec2prettyCustom($row['lamakerja_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']);
                                    $lamakerja = $row['lamakerja_'.$date]/3600 > 23.55 ? round($row['lamakerja_'.$date]/3600,0) : $row['lamakerja_'.$date]/3600;
                                }
                                $total_st  = $total_st + ($row['lamakerja_'.$date] != 0 ? $row['jumlahsesi_'.$date] : 0) + $indexjamkerja;
//                        $total_st  = $total_st + ($row['lamakerja_'.$date] != 0 ? 1 : 0) + $indexjamkerja;
                                $total_ot  = $total_ot + Utils::getIndexLembur(Utils::sec2prettyCustom($row['lamalembur_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']);
                                $objPHPExcel->getActiveSheet()->setCellValue($hh . $ib, $lamakerja);
                                $objPHPExcel->getActiveSheet()->setCellValue($hh . $it, Utils::getIndexLembur(Utils::sec2prettyCustom($row['lamalembur_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']));
                                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(5);
                                $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->applyFromArray($styleArray);
                                $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->applyFromArray($styleArray);
                                $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                                $objPHPExcel->getActiveSheet()->getStyle($hh . $ib)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                                $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                                $objPHPExcel->getActiveSheet()->getStyle($hh . $it)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                                $ah++;
                            }
                        }

                        $hh1 = Utils::angkaToHuruf($ah); // total st
                        $hh2 = Utils::angkaToHuruf($ah+1); // total ot
                        $hh3 = Utils::angkaToHuruf($ah+2); // total alw
                        $objPHPExcel->getActiveSheet()->setCellValue($hh1 . $ib, $total_st); // periksa total index jam kerja
                        $objPHPExcel->getActiveSheet()->setCellValue($hh2 . $ib, $total_ot);
                        $objPHPExcel->getActiveSheet()->getStyle($hh1 . $ib)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh1 . $ib)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh2 . $ib)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh2 . $ib)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                        $hh1 = Utils::angkaToHuruf($ah);
                        $hh2 = Utils::angkaToHuruf($ah+1);
                        $hh3 = Utils::angkaToHuruf($ah+2);
                        $objPHPExcel->getActiveSheet()->getStyle($hh1 . $ib)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh1 . $it)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh2 . $ib)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh2 . $it)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh3 . $ib)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh3 . $it)->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->mergeCells($hh1.$ib.':'.$hh1.$it);
                        $objPHPExcel->getActiveSheet()->mergeCells($hh2.$ib.':'.$hh2.$it);
                        $objPHPExcel->getActiveSheet()->mergeCells($hh3.$ib.':'.$hh3.$it);


                        $i++;
                        $no++;
                    }

                    Utils::passwordExcel($objPHPExcel);
                    $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
                    $dir = '../storage/'.str_replace('/','',$namaatribut).'.xlsx';
                    $arr_dir[$a] = $dir;
                    $writer->save($dir);
                }

                //proses zip
                $zipname = time().'_'.trans('all.timesheetsudahterisi').'.zip';
                $zip = new ZipArchive;
                $zip->open($zipname, ZipArchive::CREATE);
                for($i=0;$i<count($arr_dir);$i++){
                    $zip->addFile($arr_dir[$i], substr($arr_dir[$i], 11));
                }
                $zip->close();

                Utils::insertLogUser('Ekspor laporan timesheet sudah terisi');

                header('Content-Type: application/zip');
                header('Content-disposition: attachment; filename='.$zipname);
                header('Content-Length: ' . filesize($zipname));
                readfile($zipname);
                unlink($zipname);
                for($i=0;$i<count($arr_dir);$i++){
                    unlink($arr_dir[$i]);
                }
            }else{
                return redirect('laporan/rekapabsen')->with('message', trans('all.andabelummemilihatribut'));
            }
        }
    }

    public function timesheetSudahTerisiJamKerja($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $keteranganheader = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));
            if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                $tanggal_bt = Session::get('laprekapabsen_tanggal');
                $bulan_bt = str_pad(Session::get('laprekapabsen_bulan'),2,"0",STR_PAD_LEFT); //_bt = berdasarkan tanggal
                $tahun_bt = Session::get('laprekapabsen_tahun');
                $deom = date('t', strtotime(date('Ymd',strtotime($tahun_bt.$bulan_bt.'01')))); //deom = date end of the month
                $tanggalawal = '01/'.$bulan_bt.'/'.$tahun_bt;
                $tanggalakhir = $deom.'/'.$bulan_bt.'/'.$tahun_bt;
            }

            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where = ' AND p.id IN ' . $batasan;
            }

            $tanggalawalymd = Utils::convertDmy2Ymd($tanggalawal);
            $tanggalakhirymd = Utils::convertDmy2Ymd($tanggalakhir);
            $tanggalawal_str = strtotime($tanggalawalymd);
            $tanggalakhir_str = strtotime($tanggalakhirymd);
            $jumlahhari_diff = $tanggalakhir_str - $tanggalawal_str;
            $selisihhari = round($jumlahhari_diff / (60 * 60 * 24)) + 1;
            if($selisihhari > 31){
                return redirect('laporan/rekapabsen')->with('message', trans('all.selisihharimaksimal31'));
            }

            // php excel
            $objPHPExcel = new PHPExcel();
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $redText = array(
                'font'  => array(
                    'color' => array('rgb' => 'FF0000'),
                )
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.timesheetsudahterisijamkerja'));

            // set value kolom
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.nomor_singkat'))
                        ->setCellValue('B1', trans('all.pin'))
                        ->setCellValue('C1', trans('all.nama'))
                        ->setCellValue('D1', 'Employee Position')
                        ->setCellValue('E1', trans('all.jamkerja'))
                        ->setCellValue('F1', trans('all.jenis'))
                        ->setCellValue('G1', $keteranganheader);

            $objPHPExcel->getActiveSheet()->mergeCells('A1:A2');
            $objPHPExcel->getActiveSheet()->mergeCells('B1:B2');
            $objPHPExcel->getActiveSheet()->mergeCells('C1:C2');
            $objPHPExcel->getActiveSheet()->mergeCells('D1:D2');
            $objPHPExcel->getActiveSheet()->mergeCells('E1:E2');
            $objPHPExcel->getActiveSheet()->mergeCells('F1:F2');

            $objPHPExcel->getActiveSheet()->getStyle('G1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

            //hari
            $ah = 7; // karena dari G (huruf ke 7)
            if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                for($i = 0;$i<$selisihhari;$i++){
                    $hh = Utils::angkaToHuruf($ah);
                    $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$i.' day'));
                    $tgltanpa0 = date('j', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$i.' day')); // taggal yang tidak memakai 0 didepan jika kurang dari 10
                    if(in_array($tgltanpa0, $tanggal_bt)){
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . '2', $tgl);
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(5);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->applyFromArray($styleArray);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                        $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                        $ah++;
                    }
                }
            }else{
                for($i = 0;$i<$selisihhari;$i++){
                    $hh = Utils::angkaToHuruf($ah);
                    $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$i.' day'));
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . '2', $tgl);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(5);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $ah++;
                }
            }
            $i_hurufheader = $ah;

            // style untuk header tanggal dan total
            $objPHPExcel->getActiveSheet()->mergeCells('G1:'.Utils::angkaToHuruf($ah-1).'1');
            $hh1 = Utils::angkaToHuruf($ah);
            $hh2 = Utils::angkaToHuruf($ah+1);
            $hh3 = Utils::angkaToHuruf($ah+2);
            $objPHPExcel->getActiveSheet()->mergeCells($hh1.'1:'.$hh3.'1');
            $objPHPExcel->getActiveSheet()->setCellValue($hh1 . '1', trans('all.total'));
            $objPHPExcel->getActiveSheet()->setCellValue($hh1 . '2', 'ST');
            $objPHPExcel->getActiveSheet()->setCellValue($hh2 . '2', 'OT');
            $objPHPExcel->getActiveSheet()->setCellValue($hh3 . '2', 'ALW');
            $objPHPExcel->getActiveSheet()->getColumnDimension($hh1)->setWidth(5);
            $objPHPExcel->getActiveSheet()->getColumnDimension($hh2)->setWidth(5);
            $objPHPExcel->getActiveSheet()->getColumnDimension($hh3)->setWidth(5);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh2 . '1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh3 . '1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '2')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh2 . '2')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh3 . '2')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh1 . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh2 . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh2 . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh3 . '2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle($hh3 . '2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

            // style untuk header sebelum tanggal dan total
            $arrWidth = array('', 5, 15, 30, 30, 30, 5);
            for($i = 1;$i<7;$i++){
                $hh = Utils::angkaToHuruf($i);
                $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($hh . '2')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth($arrWidth[$i]);
                $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            }

            // call procedure
            $sql = 'CALL laporanabsenpertanggalperjamkerja(:tanggalawal,:tanggalakhir,:atribut)';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', $tanggalawalymd);
            $stmt->bindValue(':tanggalakhir', $tanggalakhirymd);
            $stmt->bindValue(':atribut', Utils::atributNilai($atribut));
            $stmt->execute();

            // filter jamkerja nya
            if($jamkerjafull != ''){
                $where .= ' AND t.idjamkerja IN('.implode(',',$jamkerjafull).')';
            }

            if($jamkerjashift != ''){
                $where .= ' AND t.idjamkerja IN('.implode(',',$jamkerjashift).')';
            }

            // idatirbut 2 adalah id atirbut employee position untuk perusahaan virtus
            // select data
            $sql = 'SELECT
                        t.*,
                        p.nama,
                        p.pin,
                        j.nama as jamkerja,
                        x.nilai as employeeposition
                    FROM
                        temp_laporanabsenpertanggalperjamkerja t,
                        pegawai p
                        LEFT JOIN (
                            SELECT
                                idpegawai,
                                an.nilai
                            FROM
                                pegawaiatribut pa,
                                atributnilai an
                            WHERE
                                pa.idatributnilai=an.id AND
                                an.idatribut = 2
                        ) x ON x.idpegawai=p.id,
                        jamkerja j
                    WHERE
                        t.idpegawai=p.id AND 
                        t.idjamkerja=j.id
                        '.$where.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 3;
            $no = 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $no);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['nama']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['employeeposition']);
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['jamkerja']);

                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, 'ST');
                $objPHPExcel->getActiveSheet()->getStyle('F' . ($i+1))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->setCellValue('F' . ($i+1), 'OT');
                $objPHPExcel->getActiveSheet()->getStyle('F' . ($i+1))->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                $objPHPExcel->getActiveSheet()->mergeCells('A'.$i.':A'.($i+1));
                $objPHPExcel->getActiveSheet()->mergeCells('B'.$i.':B'.($i+1));
                $objPHPExcel->getActiveSheet()->mergeCells('C'.$i.':C'.($i+1));
                $objPHPExcel->getActiveSheet()->mergeCells('D'.$i.':D'.($i+1));
                $objPHPExcel->getActiveSheet()->mergeCells('E'.$i.':E'.($i+1));

                for ($j = 1; $j <= 6; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . ($i+1))->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                }

                $atributharilibur = Utils::filterAtributPegawai($row['idpegawai'],Utils::atributNilai($atribut));
                $j_hurufheader = 7;
                $totalst = 0;
                $totalot = 0;
//                $tglberlakumulai = '';
//                $firstmeet = false;
                for($j=0;$j<$selisihhari;$j++){
                    $hurufheader = Utils::angkaToHuruf($j_hurufheader);
                    $tglYmd = date('Ymd', strtotime(date('Y-m-d', strtotime($tanggalawalymd)) . ' +' . $j . ' day'));
                    $tglYmd_normal = date('Y-m-d', strtotime(date('Y-m-d', strtotime($tanggalawalymd)) . ' +' . $j . ' day'));
                    $hari = date('w', strtotime(date('Y-m-d', strtotime($tanggalawalymd)) . ' +' . $j . ' day'));

                    $objPHPExcel->getActiveSheet()->setCellValue($hurufheader . $i, round($row['st_'.$tglYmd]/60/60,2));
                    $objPHPExcel->getActiveSheet()->setCellValue($hurufheader . ($i+1), round($row['ot_'.$tglYmd]/60/60,2));

                    // isikan berlakumulai untuk tanggal yang pertamakali ada isinya
//                    if(!$firstmeet && ($row['st_'.$tglYmd] > 0 or $row['ot_'.$tglYmd] > 0)){
//                        $tglberlakumulai = date('Y-m-d', strtotime(date('Y-m-d', strtotime($tanggalawalymd)) . ' +' . $j . ' day'));
//                        $firstmeet = true;
//                    }

                    // style text warna merah jika isinya != 0
                    if($row['st_'.$tglYmd] > 0){
                        // tambahkan index jamkerja
                        $cekharilibur = Utils::cekHariLibur($tglYmd_normal,$atributharilibur) == true ? 'y' : 't';
                        $indexjamkerja = Utils::getIndexJamKerja(Utils::sec2prettyCustom($row['st_'.$tglYmd],false,false,'menit'),$hari,$cekharilibur,$tglYmd_normal,$row['idpegawai']);

                        $totalst++;
                        $totalst = $totalst+$indexjamkerja;
                        $objPHPExcel->getActiveSheet()->getStyle($hurufheader.$i)->applyFromArray($redText);
                    }
                    if($row['ot_'.$tglYmd] > 0){
                        $totalot++;
                        $objPHPExcel->getActiveSheet()->getStyle($hurufheader.($i+1))->applyFromArray($redText);
                    }

                    $objPHPExcel->getActiveSheet()->getStyle($hurufheader . $i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hurufheader . ($i+1))->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hurufheader.$i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hurufheader.($i+1))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $j_hurufheader++;
                }

                // total st,ot, dan alw
                $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($j_hurufheader).$i, $totalst);
                $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($j_hurufheader+1).$i, $totalot);
                $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($j_hurufheader+2).$i, '');
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader) . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader+1) . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader+2) . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader) . ($i+1))->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader+1) . ($i+1))->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader+2) . ($i+1))->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->mergeCells(Utils::angkaToHuruf($i_hurufheader).$i.':'.Utils::angkaToHuruf($i_hurufheader).($i+1));
                $objPHPExcel->getActiveSheet()->mergeCells(Utils::angkaToHuruf($i_hurufheader+1).$i.':'.Utils::angkaToHuruf($i_hurufheader+1).($i+1));
                $objPHPExcel->getActiveSheet()->mergeCells(Utils::angkaToHuruf($i_hurufheader+2).$i.':'.Utils::angkaToHuruf($i_hurufheader+2).($i+1));
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader).$i)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader).$i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+1).$i)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+1).$i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+2).$i)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+2).$i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                $i = $i+2;
                $no++;
            }


            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan timesheet sudah terisi jam kerja');
            Utils::setFileNameExcel(trans('all.timesheetsudahterisijamkerja'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
        return '';
    }

    public function timesheetSudahTerisiJamKerja20191121($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                $bulan_bt = str_pad(Session::get('laprekapabsen_bulan'),2,"0",STR_PAD_LEFT); //_bt = berdasarkan tanggal
                $tahun_bt = Session::get('laprekapabsen_tahun');
                $deom = date('t', strtotime(date('Ymd',strtotime($tahun_bt.$bulan_bt.'01')))); //deom = date end of the month
                $tanggalawal = '01/'.$bulan_bt.'/'.$tahun_bt;
                $tanggalakhir = $deom.'/'.$bulan_bt.'/'.$tahun_bt;
            }

            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where = ' AND p.id IN ' . $batasan;
            }

            $tanggalawalymd = Utils::convertDmy2Ymd($tanggalawal);
            $tanggalakhirymd = Utils::convertDmy2Ymd($tanggalakhir);
            $tanggalawal_str = strtotime($tanggalawalymd);
            $tanggalakhir_str = strtotime($tanggalakhirymd);
            $jumlahhari_diff = $tanggalakhir_str - $tanggalawal_str;
            $selisihhari = round($jumlahhari_diff / (60 * 60 * 24));

            if($selisihhari > 31){
                return redirect('laporan/rekapabsen')->with('message', trans('all.selisihharimaksimal31'));
            }

            $objPHPExcel = new PHPExcel();
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $redText = array(
                'font'  => array(
                    'color' => array('rgb' => 'FF0000'),
                )
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.timesheetsudahterisijamkerja'));

            // set value kolom
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.nomor_singkat'))
                        ->setCellValue('B1', trans('all.pin'))
                        ->setCellValue('C1', trans('all.nama'))
                        ->setCellValue('D1', trans('all.jamkerja'))
                        ->setCellValue('E1', trans('all.berlakumulai'));

            // style header a - f
            for ($j = 1; $j <= 6; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '2')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->mergeCells($huruf.'1:'.$huruf.'2');
                $objPHPExcel->getActiveSheet()->getStyle($huruf.'1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($huruf.'1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            }

            // header tanggal
            $i_hurufheader = 7; // karena dari G
            for($i=0;$i<=$selisihhari;$i++){
                $hurufheader = Utils::angkaToHuruf($i_hurufheader);
                $headertanggal = date('j', strtotime(date('Y-m-d', strtotime($tanggalawalymd)) . ' +' . $i . ' day'));
                $objPHPExcel->getActiveSheet()->setCellValue($hurufheader . '2', $headertanggal);
                $objPHPExcel->getActiveSheet()->getStyle($hurufheader . '2')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($hurufheader.'2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $i_hurufheader++;
            }
            // merge untuk header tgl nya (ex:1-31januari2019)
            $objPHPExcel->getActiveSheet()->mergeCells('G1:'.$hurufheader.'1');
            $objPHPExcel->getActiveSheet()->setCellValue('G1', Utils::tanggalCantikDariSampai($tanggalawalymd,$tanggalakhirymd));
            $objPHPExcel->getActiveSheet()->getStyle('G1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

            // kolom total header (stm,ot,alw)
            $objPHPExcel->getActiveSheet()->mergeCells(Utils::angkaToHuruf($i_hurufheader).'1:'.Utils::angkaToHuruf($i_hurufheader+2).'1');
            $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($i_hurufheader).'1', 'Total');
            $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($i_hurufheader).'2', 'ST');
            $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($i_hurufheader+1).'2', 'OT');
            $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($i_hurufheader+2).'2', 'ALW');
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader).'1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader).'2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+1).'2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+2).'2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader) . '1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader) . '2')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+1) . '1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+1) . '2')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+2) . '1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+2) . '2')->applyFromArray($styleArray);

            // call procedure
            $sql = 'CALL laporanabsenpertanggalperjamkerja(:tanggalawal,:tanggalakhir,:atribut)';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', $tanggalawalymd);
            $stmt->bindValue(':tanggalakhir', $tanggalakhirymd);
            $stmt->bindValue(':atribut', Utils::atributNilai($atribut));
            $stmt->execute();

            // select data yang mempunyai jam kerja lebih dari 1
            $sql = 'SELECT idpegawai,COUNT(idjamkerja) as jumlahjamkerja FROM temp_laporanabsenpertanggalperjamkerja GROUP BY idpegawai HAVING COUNT(idjamkerja) > 0';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $arrKembar = [];
            if($stmt->rowCount() > 0){
                $i = 0;
                while($rowkembar = $stmt->fetch(PDO::FETCH_ASSOC)){
                    $arrKembar[$i]['idpegawai'] = $rowkembar['idpegawai'];
                    $arrKembar[$i]['jumlahjamkerja'] = $rowkembar['jumlahjamkerja'];
                    $arrKembar[$i]['rowke'] = '';
                    $i++;
                }
            }

            // select data
            $sql = 'SELECT
                        t.*,
                        p.nama as pegawai,
                        p.pin,
                        jk.nama as jamkerja
                    FROM
                        temp_laporanabsenpertanggalperjamkerja t,
                        pegawai p,
                        jamkerja jk
                    WHERE
                        t.idpegawai=p.id AND
                        t.idjamkerja=jk.id
                        '.$where.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();

            $i = 3; // untuk row nya, dari 2 karena 1 untuk header nya
            $no=1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

                // merge jika pin sama dengan data sebelumnya
                $tambahnomer = false;
                for($k=0;$k<count($arrKembar);$k++){
                    if($arrKembar[$k]['idpegawai'] == $row['idpegawai'] && $arrKembar[$k]['rowke'] == ''){
                        $arrKembar[$k]['rowke'] = $i;
                        $tambahnomer = true;
                    }
                }

                // isi data
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $no);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pegawai']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['jamkerja']);

                // st dan ot
                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, 'ST');
                $objPHPExcel->getActiveSheet()->setCellValue('F' . ($i+1), 'OT');

                // merge unuk kolom isi jamkerja dan berlakumulai
                $objPHPExcel->getActiveSheet()->mergeCells('D'.$i.':D'.($i+1));
                $objPHPExcel->getActiveSheet()->mergeCells('E'.$i.':E'.($i+1));

                // style center dan border untuk kolom a - f
                for($s=1;$s<=6;$s++){
                    $s_huruf = Utils::angkaToHuruf($s);
                    // style center
                    $objPHPExcel->getActiveSheet()->getStyle($s_huruf.$i)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($s_huruf.$i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                    // style border
                    $objPHPExcel->getActiveSheet()->getStyle($s_huruf.$i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($s_huruf.($i+1))->applyFromArray($styleArray);
                }

                $j_hurufheader = 7;
                $totalst = 0;
                $totalot = 0;
                $tglberlakumulai = '';
                $firstmeet = false;
                for($j=0;$j<=$selisihhari;$j++){
                    $hurufheader = Utils::angkaToHuruf($j_hurufheader);
                    $tglYmd = date('Ymd', strtotime(date('Y-m-d', strtotime($tanggalawalymd)) . ' +' . $j . ' day'));

                    $objPHPExcel->getActiveSheet()->setCellValue($hurufheader . $i, round($row['st_'.$tglYmd]/60/60,2));
                    $objPHPExcel->getActiveSheet()->setCellValue($hurufheader . ($i+1), round($row['ot_'.$tglYmd]/60/60,2));

                    // isikan berlakumulai untuk tanggal yang pertamakali ada isinya
                    if(!$firstmeet && ($row['st_'.$tglYmd] > 0 or $row['ot_'.$tglYmd] > 0)){
                        $tglberlakumulai = date('Y-m-d', strtotime(date('Y-m-d', strtotime($tanggalawalymd)) . ' +' . $j . ' day'));
                        $firstmeet = true;
                    }

                    // style text warna merah jika isinya != 0
                    if($row['st_'.$tglYmd] > 0){
                        $totalst++;
                        $objPHPExcel->getActiveSheet()->getStyle($hurufheader.$i)->applyFromArray($redText);
                    }
                    if($row['ot_'.$tglYmd] > 0){
                        $totalot++;
                        $objPHPExcel->getActiveSheet()->getStyle($hurufheader.($i+1))->applyFromArray($redText);
                    }

                    $objPHPExcel->getActiveSheet()->getStyle($hurufheader . $i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hurufheader . ($i+1))->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hurufheader.$i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hurufheader.($i+1))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $j_hurufheader++;
                }

                // isikan berlakumulai
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, Utils::tanggalCantik($tglberlakumulai));

                // total st,ot, dan alw
                $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($j_hurufheader).$i, $totalst);
                $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($j_hurufheader+1).$i, $totalot);
                $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($j_hurufheader+2).$i, '');
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader) . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader+1) . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader+2) . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader) . ($i+1))->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader+1) . ($i+1))->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($j_hurufheader+2) . ($i+1))->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->mergeCells(Utils::angkaToHuruf($i_hurufheader).$i.':'.Utils::angkaToHuruf($i_hurufheader).($i+1));
                $objPHPExcel->getActiveSheet()->mergeCells(Utils::angkaToHuruf($i_hurufheader+1).$i.':'.Utils::angkaToHuruf($i_hurufheader+1).($i+1));
                $objPHPExcel->getActiveSheet()->mergeCells(Utils::angkaToHuruf($i_hurufheader+2).$i.':'.Utils::angkaToHuruf($i_hurufheader+2).($i+1));
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader).$i)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader).$i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+1).$i)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+1).$i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+2).$i)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($i_hurufheader+2).$i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                $i = $i+2;
                if($tambahnomer){
                    $no++;
                }
            }

            // style merge untuk kolom nomor, pin, nama
            for($k=0;$k<count($arrKembar);$k++){
                $rowke = $arrKembar[$k]['rowke'];
                $tambahrow = $arrKembar[$k]['jumlahjamkerja']*2-1; // karena 2 row di masing2 jam kerja(st dan ot)
                $objPHPExcel->getActiveSheet()->mergeCells('A'.$rowke.':A'.($rowke+$tambahrow));
                $objPHPExcel->getActiveSheet()->mergeCells('B'.$rowke.':B'.($rowke+$tambahrow));
                $objPHPExcel->getActiveSheet()->mergeCells('C'.$rowke.':C'.($rowke+$tambahrow));
            }

            // $objPHPExcel->getActiveSheet()->unmergeCells('A'.($i-2).':A'.($i-1)); // untuk unmerge cell

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(8);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(40);
            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(40);
            $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(35);
            $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(3);

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $i + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('A' . $ft)->getFont()->setItalic(true);

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan timesheet sudah terisi jam kerja');
            Utils::setFileNameExcel(trans('all.timesheetsudahterisijamkerja'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function internalMemoPotongan($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $tanggal = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));
            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where = ' AND p.id IN ' . $batasan;
            }

            $objPHPExcel = new PHPExcel();
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.internalmemopotongan'));

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'No')
                        ->setCellValue('B1', 'Nama Tidak Hadir')
                        ->setCellValue('C1', 'Pin')
                        ->setCellValue('D1', 'Keterangan')
                        ->setCellValue('D2', 'Ijin')
                        ->setCellValue('E2', 'Sakit')
                        ->setCellValue('F2', 'Dispensasi')
                        ->setCellValue('G2', 'Alpha')
                        ->setCellValue('H1', 'Jumlah Tidak Hadir')
                        ->setCellValue('I1', 'Jumlah Potongan');

            $objPHPExcel->getActiveSheet()->mergeCells('A1:A2');
            $objPHPExcel->getActiveSheet()->mergeCells('B1:B2');
            $objPHPExcel->getActiveSheet()->mergeCells('C1:C2');
            $objPHPExcel->getActiveSheet()->mergeCells('D1:G1');
            $objPHPExcel->getActiveSheet()->mergeCells('H1:H2');
            $objPHPExcel->getActiveSheet()->mergeCells('I1:I2');

            $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('D1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('D1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('D2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('D2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('E2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('E2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('F2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('F2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('G2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('G2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('H1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('H1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('I1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('I1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $where .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $where .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            $sql = 'SELECT
                        p.pin,
                        p.nama,
                        SUM(IF(ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d",1,0)) as dispensasi,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="i",1,0)) as ijin,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="s",1,0)) as sakit,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori="a"),1,0)) as alpha
                    FROM
                        pegawai p,
                        rekapabsen ra
                    WHERE
                        ra.idpegawai = p.id AND
                        p.del = "t" AND
                        p.status = "a" AND
                        ra.tanggal BETWEEN :tanggalawal AND :tanggalakhir
                        '.$where.'
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
            $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
            $stmt->execute();
            $i = 3;
            $no = 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $no);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['ijin']);
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['sakit']);
                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $row['dispensasi']);
                $objPHPExcel->getActiveSheet()->setCellValue('G' . $i, $row['alpha']);
                $objPHPExcel->getActiveSheet()->setCellValue('H' . $i, $row['ijin'] + $row['sakit'] + $row['dispensasi'] + $row['alpha']);

                for ($j = 1; $j <= 9; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                }

                $i++;
                $no++;
            }

            $arrWidth = array('', 5, 30, 15, 12, 12, 12, 12, 20, 20);
            for ($j = 1; $j <= 9; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '2')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
            }

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan internal memo potongan');
            Utils::setFileNameExcel('_Internal_Memo_Potongan');
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function internalMemoInsentif($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $tanggal = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));
            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where = ' AND p.id IN ' . $batasan;
            }

            $objPHPExcel = new PHPExcel();
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'No')
                        ->setCellValue('B1', 'Nama')
                        ->setCellValue('C1', 'Pin')
                        ->setCellValue('D1', 'Tanggal')
                        ->setCellValue('D2', 'Jam Tugas')
                        ->setCellValue('E2', 'Jumlah Jam')
                        ->setCellValue('F1', 'Nominal Rp');

            $objPHPExcel->getActiveSheet()->mergeCells('A1:A2');
            $objPHPExcel->getActiveSheet()->mergeCells('B1:B2');
            $objPHPExcel->getActiveSheet()->mergeCells('C1:C2');
            $objPHPExcel->getActiveSheet()->mergeCells('D1:E1');
            $objPHPExcel->getActiveSheet()->mergeCells('F1:F2');
            $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('D1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('D1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('D2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('D2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('E2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('E2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('F1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('F1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

            $sql = 'SELECT
                        p.pin,
                        p.nama,
                        ROUND(SUM(ra.lamakerja)/60,1) as lamakerja
                    FROM
                        pegawai p,
                        rekapabsen ra
                    WHERE
                        ra.idpegawai = p.id AND
                        p.del = "t" AND
                        p.status = "a" AND
                        ra.tanggal BETWEEN :tanggalawal AND :tanggalakhir
                        '.$where.'
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
            $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
            $stmt->execute();
            $i = 3;
            $no = 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $no);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['lamakerja']);

                for ($j = 1; $j <= 6; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                }

                $i++;
                $no++;
            }

            $arrWidth = array('', 5, 30, 15, 12, 12, 20);
            for ($j = 1; $j <= 6; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '2')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '2')->getFont()->setBold(true);
            }

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan internal memo intensif');
            Utils::setFileNameExcel('_Internal_Memo_Insentif');
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    // laporan zip
    public function sunfish($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $tanggal = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));
            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where = ' AND p.id IN ' . $batasan;
            }

            //adj jkt - FS
            $objPHPExcel = new PHPExcel();
            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'EMPNO')
                        ->setCellValue('B1', 'EMPNAME')
                        ->setCellValue('C1', 'ALADJ');

            $objPHPExcel->getActiveSheet()->getStyle('A1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->applyFromArray($styleArray);

            $atributnilai = '';
            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $where .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $where .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            $querysql = 'p.pin as pin,';
//            if(Session::get('conf_webperusahaan') == '12009'){ // virtus local
            if(Session::get('conf_webperusahaan') == '12035'){ // virtus online
                $querysql = 'getatributvariablepegawai(p.id, 8) as pin,';
            }

            $sql = 'SELECT
                        '.$querysql.'
                        p.nama
                    FROM
                        pegawai p
                    WHERE
                        p.del = "t" and
                        p.status = "a"
                        '.$where.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                $arrWidth = array('', 10, 30);
                for ($j = 1; $j <= 3; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    if($j != 3){
                        $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    }
                }

                $i++;
            }

            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $dir1 = '../storage/sunfish/' . 'adj jkt - FS.xlsx';
            $writer->save($dir1);

            //hk & ot - FS
            $objPHPExcel = new PHPExcel();
            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'EmpNo')
                        ->setCellValue('B1', 'PeriodCode')
                        ->setCellValue('C1', 'PRS')
                        ->setCellValue('D1', 'OVT')
                        ->setCellValue('E1', 'DAYUP');

            $objPHPExcel->getActiveSheet()->getStyle('A1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('D1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('E1')->applyFromArray($styleArray);

            $sql = 'CALL laporanabsenpertanggal(:tanggalawal,:tanggalakhir,:atribut,:bahasa)';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
            $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
            $stmt->bindValue(':atribut', $atributnilai);
            $stmt->bindValue(':bahasa', Session::get('conf_bahasaperusahaan'));
            $stmt->execute();

            $sql = 'SELECT
                        '.$querysql.'
                        t.*
                    FROM
                        temp_laporanabsenpertanggal t,
                        pegawai p
                    WHERE
                        t.idpegawai = p.id AND
                        p.del = "t" AND
                        p.status = "a"
                        '.$where.'
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama';

//            $sql = 'SELECT
//                        p.id,
//                        p.pin,
//                        p.nama,
//                        SUM(IF(IFNULL(ra.lamakerja,0) != 0,1,0)) as jumlah,
//                        IFNULL(SUM(ra.lamalembur),0) as lembur
//                    FROM
//                        pegawai p
//                        LEFT JOIN rekapabsen ra ON ra.idpegawai=p.id and ra.tanggal BETWEEN STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")
//                    WHERE
//                        p.del = "t" and
//                        p.status = "a"
//                        '.$where.'
//                    GROUP BY
//                        p.id
//                    ORDER BY
//                        p.nama';
            $stmt = $pdo->prepare($sql);
//            $stmt->bindValue(':tanggalawal', $tanggalawal);
//            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            $stmt->execute();
            $i = 2;
            $selisihhari = Utils::getSelisihHari($tanggalawal,$tanggalakhir);
            $tanggalawal_str = strtotime(Utils::convertDmy2Ymd($tanggalawal));
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, 'MTH_OPERATOR');
                $total_st = 0;
                $total_ovt = 0;
                $atributharilibur = Utils::filterAtributPegawai($row['idpegawai'],Utils::atributNilai($atribut));
                for($j = 0;$j<$selisihhari;$j++){
                    $hari = date('w', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day')); // 0 minggu 6 sabtu
                    $date = date('Ymd', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                    $date2 = date('Y-m-d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                    $cekharilibur = Utils::cekHariLibur($date2,$atributharilibur) == true ? 'y' : 't';
                    $total_st  = $total_st + ($row['lamakerja_'.$date] != 0 ? 1 : 0) + Utils::getIndexJamKerja(Utils::sec2prettyCustom($row['lamakerja_'.$date],false,false,'menit'),$hari,$cekharilibur,$date2,$row['idpegawai']);
                    $total_ovt  = $total_ovt + $row['lamalembur_'.$date];
                }
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $total_st);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, ROUND($total_ovt/60/60, 2));

                //Dayup
                $dayup = 0;
                if(Utils::pegawaiAtributCheck($row['idpegawai'],'26,27,4,14') == true){
                    $dayup = $total_st;
                }
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $dayup);

                $arrWidth = array('', 10, 20);
                for ($j = 1; $j <= 5; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    if($j <= 2){
                        $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    }
                }
                $i++;
            }

            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $dir2 = '../storage/sunfish/' . 'hk & ot - FS.xlsx';
            // $writer->save('php://output');
            $writer->save($dir2);

            //ins jkt - FS
            $objPHPExcel = new PHPExcel();
            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'EMPNO')
                        ->setCellValue('B1', 'EMPNAME')
                        ->setCellValue('C1', 'ALINSOPR');

            $objPHPExcel->getActiveSheet()->getStyle('A1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->applyFromArray($styleArray);

            $sql = 'SELECT
                        '.$querysql.'
                        p.nama
                    FROM
                        pegawai p
                    WHERE
                        p.del = "t" and
                        p.status = "a"
                        '.$where.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                $arrWidth = array('', 10, 30);
                for ($j = 1; $j <= 3; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    if($j != 3){
                        $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    }
                }

                $i++;
            }

            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $dir3 = '../storage/sunfish/' . 'ins jkt - FS.xlsx';
            // $writer->save('php://output');
            $writer->save($dir3);

            //meal jkt - FS
            $objPHPExcel = new PHPExcel();
            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'EMPNO')
                        ->setCellValue('B1', 'EMPNAME')
                        ->setCellValue('C1', 'ALMEAL');

            $objPHPExcel->getActiveSheet()->getStyle('A1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->applyFromArray($styleArray);

            $sql = 'SELECT
                        '.$querysql.'
                        p.nama
                    FROM
                        pegawai p
                    WHERE
                        p.del = "t" and
                        p.status = "a"
                        '.$where.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                $arrWidth = array('', 10, 30);
                for ($j = 1; $j <= 3; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    if($j != 3){
                        $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    }
                }

                $i++;
            }

            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $dir4 = '../storage/sunfish/' . 'meal jkt - FS.xlsx';
            // $writer->save('php://output');
            $writer->save($dir4);

            //pos jkt - FS
            $objPHPExcel = new PHPExcel();
            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'EMPNO')
                        ->setCellValue('B1', 'EMPNAME')
                        ->setCellValue('C1', 'ALPOSOPR');

            $objPHPExcel->getActiveSheet()->getStyle('A1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->applyFromArray($styleArray);

            $sql = 'SELECT
                        '.$querysql.'
                        p.nama
                    FROM
                        pegawai p
                    WHERE
                        p.del = "t" and
                        p.status = "a"
                        '.$where.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                $arrWidth = array('', 10, 30);
                for ($j = 1; $j <= 3; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    if($j != 3){
                        $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    }
                }

                $i++;
            }

            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $dir5 = '../storage/sunfish/' . 'pos jkt - FS.xlsx';
            $writer->save($dir5);

            //pot hdr jkt - FS
            $objPHPExcel = new PHPExcel();
            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'EMPNO')
                        ->setCellValue('B1', 'EMPNAME')
                        ->setCellValue('C1', 'DEHDR');

            $objPHPExcel->getActiveSheet()->getStyle('A1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->applyFromArray($styleArray);

            $sql = 'SELECT
                        '.$querysql.'
                        p.nama
                    FROM
                        pegawai p
                    WHERE
                        p.del = "t" and
                        p.status = "a"
                        '.$where.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                $arrWidth = array('', 10, 30);
                for ($j = 1; $j <= 3; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    if($j != 3){
                        $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    }
                }

                $i++;
            }

            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $dir6 = '../storage/sunfish/' . 'pot hdr jkt - FS.xlsx';
            $writer->save($dir6);

            //pot rapel jkt - FS
            $objPHPExcel = new PHPExcel();
            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'EMPNO')
                        ->setCellValue('B1', 'EMPNAME')
                        ->setCellValue('C1', 'DERAPEL');

            $objPHPExcel->getActiveSheet()->getStyle('A1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->applyFromArray($styleArray);

            $sql = 'SELECT
                        '.$querysql.'
                        p.nama
                    FROM
                        pegawai p
                    WHERE
                        p.del = "t" and
                        p.status = "a"
                        '.$where.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                $arrWidth = array('', 10, 30);
                for ($j = 1; $j <= 3; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    if($j != 3){
                        $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    }
                }

                $i++;
            }

            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $dir7 = '../storage/sunfish/' . 'pot rapel jkt - FS.xlsx';
            $writer->save($dir7);

            //pot sepatu jkt - FS
            $objPHPExcel = new PHPExcel();
            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'EMPNO')
                        ->setCellValue('B1', 'EMPNAME')
                        ->setCellValue('C1', 'DESPT');

            $objPHPExcel->getActiveSheet()->getStyle('A1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->applyFromArray($styleArray);

            $sql = 'SELECT
                        '.$querysql.'
                        p.nama
                    FROM
                        pegawai p
                    WHERE
                        p.del = "t" and
                        p.status = "a"
                        '.$where.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                $arrWidth = array('', 10, 30);
                for ($j = 1; $j <= 3; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    if($j != 3){
                        $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    }
                }

                $i++;
            }

            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $dir8 = '../storage/sunfish/' . 'pot sepatu jkt - FS.xlsx';
            $writer->save($dir8);

            //pot training jkt - FS
            $objPHPExcel = new PHPExcel();
            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', 'EMPNO')
                        ->setCellValue('B1', 'EMPNAME')
                        ->setCellValue('C1', 'DETRAIN');

            $objPHPExcel->getActiveSheet()->getStyle('A1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('C1')->applyFromArray($styleArray);

            $sql = 'SELECT
                        '.$querysql.'
                        p.nama
                    FROM
                        pegawai p
                    WHERE
                        p.del = "t" and
                        p.status = "a"
                        '.$where.'
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                $arrWidth = array('', 10, 30);
                for ($j = 1; $j <= 3; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    if($j != 3){
                        $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    }
                }

                $i++;
            }

            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $dir9 = '../storage/sunfish/' . 'pot training jkt - FS.xlsx';
            $writer->save($dir9);

            //proses zip
            $zipname = time().'_laporanZIP.zip';
            $zip = new ZipArchive;
            $zip->open($zipname, ZipArchive::CREATE);
            $zip->addFile($dir1, 'adj jkt - FS.xlsx');
            $zip->addFile($dir2, 'hk & ot - FS.xlsx');
            $zip->addFile($dir3, 'ins jkt - FS.xlsx');
            $zip->addFile($dir4, 'meal jkt - FS.xlsx');
            $zip->addFile($dir5, 'pos jkt - FS.xlsx');
            $zip->addFile($dir6, 'pot hdr jkt - FS.xlsx');
            $zip->addFile($dir7, 'pot rapel jkt - FS.xlsx');
            $zip->addFile($dir8, 'pot sepatu jkt - FS.xlsx');
            $zip->addFile($dir9, 'pot training jkt - FS.xlsx');
            $zip->close();

            Utils::insertLogUser('Ekspor laporan ZIP');

            header('Content-Type: application/zip');
            header('Content-disposition: attachment; filename='.$zipname);
            header('Content-Length: ' . filesize($zipname));
            readfile($zipname);
            unlink($zipname);
            unlink($dir1);
            unlink($dir2);
            unlink($dir3);
            unlink($dir4);
            unlink($dir5);
            unlink($dir6);
            unlink($dir7);
            unlink($dir8);
            unlink($dir9);
        }
    }

    public function sepertiwa($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();
            $tanggal = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel);

            //set value kolom
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.pin'))
                        ->setCellValue('B1', trans('all.nama'))
                        ->setCellValue('C1', trans('all.harikerja'))
                        ->setCellValue('D1', trans('all.lembur'))
                        ->setCellValue('E1', 'Dayup')
                        ->setCellValue('F1', 'ALADJ (Adjustment)')
                        ->setCellValue('G1', 'ALBKUP (Allowance Backup)')
                        ->setCellValue('H1', 'ALNETRAL (Allowance Netral)')
                        ->setCellValue('I1', 'ALCOMP (Competency Allowance)')
                        ->setCellValue('J1', 'ALDAILY (Daily Allowance)')
                        ->setCellValue('K1', 'ALGUARANOPR (Guaranteed Incentive)')
                        ->setCellValue('L1', 'ALHPOPS (Handphone Allowance)')
                        ->setCellValue('M1', 'NEHK (Hari Kerja)')
                        ->setCellValue('N1', 'ALHOUSEOPS (Housing Allowance)')
                        ->setCellValue('O1', 'Alinslin (Ins. Libur Nasional)')
                        ->setCellValue('P1', 'ALINSOPR (Insentif)')
                        ->setCellValue('Q1', 'ALLOC (Location Allowance)')
                        ->setCellValue('R1', 'ALLONG (Longshift)')
                        ->setCellValue('S1', 'ALMEAL (Meal Allowance)')
                        ->setCellValue('T1', 'ALOVT (Overtime)')
                        ->setCellValue('U1', 'ALPERFORM (Performance Allowance)')
                        ->setCellValue('V1', 'ALPOSOPR (Position Allowance)')
                        ->setCellValue('W1', 'DELBA (Pot. Lebih Bayar Allowance)')
                        ->setCellValue('X1', 'DEADV (Pot. Advance / Pot. Koperasi)')
                        ->setCellValue('Y1', 'DEDORMIT (Potongan Asrama)')
                        ->setCellValue('Z1', 'DEDKK (Potongan DKK)')
                        ->setCellValue('AA1', 'DEHDR (Potongan Kehadiran)')
                        ->setCellValue('AB1', 'DEPOTMOB (Potongan Parkir Kendaraan)')
                        ->setCellValue('AC1', 'DERAPEL (Potongan Rapel)')
                        ->setCellValue('AD1', 'DEMEAL (Uang Makan)')
                        ->setCellValue('AE1', 'ALTOR (TOR Allowance)')
                        ->setCellValue('AF1', 'ALTRANSOPR (Transport Allowance)')
                        ->setCellValue('AG1', 'DEIKT (Potongan Ikat Pinggang)')
                        ->setCellValue('AH1', 'DESPT (Uang Jaminan Sepatu)')
                        ->setCellValue('AI1', 'DESERAGAM (Uang Jaminan Seragam)')
                        ->setCellValue('AJ1', 'DESRGM (Uang Jaminan Seragam)')
                        ->setCellValue('AK1', 'DETRAIN (Uang Jaminan Training)');

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(50);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(10);
            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(10);
            $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(10);
            for ($j = 1; $j <= 37; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->applyFromArray($styleArray);
                if($j > 5){
                    $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth(30);
                }
            }

            $where = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where .= ' AND p.id IN ' . $batasan;
            }

            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $where .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $where .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            $sql = 'SELECT
                        p.id,
                        p.pin,
                        p.nama,
                        IFNULL(COUNT(ra.id),0) as jumlah,
                        IFNULL(SUM(ra.lamalembur),0) as lembur
                    FROM
                        pegawai p
                        LEFT JOIN rekapabsen ra ON ra.idpegawai=p.id and ra.tanggal BETWEEN STR_TO_DATE(:tanggalawal,"%d/%m/%Y") AND STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")
                    WHERE
                        p.del = "t" and
                        p.status = "a"
                        '.$where.'
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['jumlah']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, ROUND($row['lembur']/60/60, 2));

                //Dayup
                if(Utils::pegawaiAtributCheck($row['id'],'26,27,4,14') == true){
                  $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['jumlah']);
                }

                for ($j = 1; $j <= 37; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                }

                $i++;
            }

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan isian');
            Utils::setFileNameExcel('Laporan_Isian');
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function rekapabsenPekerjaan($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull){
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();
            $tanggal = Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir));

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.pekerjaan'));

            //set value kolom
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', strtoupper(trans('all.headerlaporanpekerjaan')))
                        ->setCellValue('A3', trans('all.kebun'))
                        ->setCellValue('A4', 'Afdeling')
                        ->setCellValue('D3', trans('all.mandor'))
                        ->setCellValue('D4', trans('all.tanggal'))
                        ->setCellValue('E4', $tanggal)
                        ->setCellValue('A5', trans('all.nomor_singkat'))
                        ->setCellValue('B5', trans('all.pin'))
                        ->setCellValue('C5', trans('all.nama'))
                        ->setCellValue('D5', trans('all.kode'))
                        ->setCellValue('E5', 'LATEKS')
                        ->setCellValue('F5', 'LUMP')
                        ->setCellValue('G5', 'SCRAP');

            $objPHPExcel->getActiveSheet()->mergeCells('A1:G1');
            $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('A1')->getFont()->setBold(true);

            $sql = 'SELECT
                        pin,
                        nama
                    FROM
                        pegawai
                    ORDER BY
                        nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 6;
            $nomor = 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $nomor);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['nama']);

                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('D' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('E' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('F' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('G' . $i)->applyFromArray($styleArray);

                $i++;
                $nomor++;
            }

            $arrWidth = array('', 5, 15, 50, 15, 15, 15, 15);
            for ($j = 1; $j <= 7; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '5')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '5')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB('BFBFBF');
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '5')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan pekerjaan');
            Utils::setFileNameExcel(trans('all.pekerjaan'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function rekapAbsenAttLog($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull)
    {
        if(Utils::cekHakakses('laporanekspor','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $pdop = DB::getPdo();

            $kodeperusahaan = Utils::getDataWhere($pdop,'perusahaan','kode','id',Session::get('conf_webperusahaan'));
            $filename = $kodeperusahaan . '_attlog' . '.dat';

            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $batasan = ' AND p.id IN ' . $batasan;
            }

            $whereAtribut = '';
            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $whereAtribut .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            $whereJamkerja = '';
            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $whereJamkerja .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            $where = '';
            if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
            //if(Session::has('laprekapabsen_tanggal')){
                $tahun = Session::get('laprekapabsen_tahun');
                $bulan = Session::get('laprekapabsen_bulan');
                $tanggal = Session::get('laprekapabsen_tanggal');
                if ($tanggal != ''){
                    $arrWherePerTanggal = array();
                    for($i=0;$i<count($tanggal);$i++) {
                        $arrWherePerTanggal[$i] = '( la.waktu>="'.$tahun.'-'.$bulan.'-'.$tanggal[$i].' 00:00:00" AND la.waktu<="'.$tahun.'-'.$bulan.'-'.$tanggal[$i].' 23:59:59" )';
                    }
                    $where .= ' AND ( '.implode(' OR ',$arrWherePerTanggal).' )';
                }
                else {
                    //cari hari terakhir pada bulan terpilih
                    $firstDate = $tahun.'-'.$bulan.'-01';
                    $lastDate = date("Y-m-t", strtotime($firstDate));

                    $where .= ' AND la.waktu>="'.$firstDate.' 00:00:00" AND la.waktu<="'.$lastDate.' 23:59:59"';

                }
            }else{
//                $where = ' AND DATE(la.waktu) BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y")';
                $where = ' AND la.waktu>=CONCAT(STR_TO_DATE("' . $tanggalawal . '","%d/%m/%Y")," 00:00:00") AND la.waktu<=CONCAT(STR_TO_DATE("' . $tanggalakhir . '","%d/%m/%Y")," 23:59:59")';
            }

            $sql = 'SELECT
                        p.pin,la.waktu
                    FROM
                        logabsen la,
                        pegawai p
                    WHERE
                      la.idpegawai=p.id AND
                      p.status = "a" AND
                      p.del = "t" AND
                      la.status = "v"
                      ' . $where . '
                      ' . $batasan . '
                      ' . $whereAtribut . '
                      ' . $whereJamkerja . '
                    ORDER BY
                        la.waktu DESC';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $isi = '';
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $isi .= $row['pin'] . chr(9) . $row['waktu'] . chr(9) . $kodeperusahaan . chr(9) .'0'. chr(9) . '0'. chr(9) . '0' . "\r\n";
                //$isi .= ($row['pin'] == '' ? '    ' : $row['pin']) . '    ' . $row['waktu'] . '    ' . $kodeperusahaan . '    0    0    0' . "\r\n";
            }

            $handle = fopen($filename, "w");
            fwrite($handle, $isi);
            fclose($handle);

            Utils::insertLogUser('Ekspor laporan rekapabsen attlog');

            header('Content-Type: application/octet-stream');
            header('Content-Disposition: attachment; filename=' . basename($filename));
            header('Expires: 0');
            header('Cache-Control: must-revalidate');
            header('Pragma: public');
            header('Content-Length: ' . filesize($filename));
            readfile($filename);
            //hapus file
            unlink($filename);
            exit;
        }
    }

    public function hariLibur()
    {
        if(Utils::cekHakakses('laporanlainnya','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $arrkolom = '';
            $arrkolomtabel = '';
            if(Session::has('lapharilibur_tahun')) {
                if(Session::get('lapharilibur_tahun') != '') {
                    $tahun = Session::get('lapharilibur_tahun');
                    $sql = 'CALL generateharilibur(:tahun)';
                    $stmt = $pdo->prepare($sql);
                    $stmt->bindValue(':tahun', $tahun);
                    $stmt->execute();

                    $sql = 'DESC _harilibur';
                    $stmt = $pdo->prepare($sql);
                    $stmt->execute();
                    $kolom = $stmt->fetchAll(PDO::FETCH_COLUMN);

                    $sql = 'SELECT * FROM _harilibur';
                    $stmt = $pdo->prepare($sql);
                    $stmt->execute();
                    $totalkolom = $stmt->columnCount();

                    $arrkolom = array();
                    $arrkolomtabel = array();
                    $i=0;
                    for($j=4;$j<$totalkolom;$j++){
                        $idagama = str_replace('_', '', $kolom[$j]);
                        $agama = Utils::getDataWhere($pdo, 'agama', 'agama', 'id', $idagama);
                        $arrkolom[$i] = $agama;
                        $arrkolomtabel[$i] = $kolom[$j];
                        $i++;
                    }
                }
            }else{
                Session::set('lapharilibur_tahun', date('Y'));
            }

            $tahun = Utils::tahunDropdown();
            Utils::insertLogUser('akses menu laporan hari libur');
            return view('laporan/lainnya/harilibur/index', ['tahun' => $tahun, 'arrkolom' => $arrkolom, 'arrkolomtabel' => $arrkolomtabel, 'menu' => 'lainnya']);
        } else {
            return redirect('/');
        }
    }

    public function hariLiburSubmit(Request $request)
    {
        if(isset($request->tahun)){
            if($request->tahun == '') {
                if(Session::has('lapharilibur_tahun')){
                    Session::forget('lapharilibur_tahun');
                }
            }else{
                Session::set('lapharilibur_tahun', $request->tahun);
            }
        }
        return redirect('laporan/lainnya/harilibur');

    }

    public function hariLiburData(Request $request)
    {
        if(Utils::cekHakakses('laporanlainnya','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }
            if(Session::has('lapharilibur_tahun')) {
                $tahun = Session::get('lapharilibur_tahun');
                $pdo = DB::connection('perusahaan_db')->getPdo();
                $sql = 'CALL generateharilibur(:tahun)';
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':tahun', $tahun);
                $stmt->execute();

                $where = '';
                $sql = 'DESC _harilibur';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $columns = $stmt->fetchAll(PDO::FETCH_COLUMN);
                $table = '_harilibur';
                array_splice($columns, 0, 1); // hilangkan id
                array_splice($columns, 1, 1); // hilangkan tanggalakhir
                $totalData = Utils::getDataCustomWhere($pdo,'_harilibur', 'count(id)');
                $totalFiltered = $totalData;
                $limit = $request->input('length');
                $start = $request->input('start');
                $orderColumn = $columns[$request->input('order.0.column')];
                $orderAction = $request->input('order.0.dir');
                $orderBy = $orderColumn.' '.$orderAction;

                if(!empty($request->input('search.value'))){
                    $search = $request->input('search.value');
                    $where .= Utils::searchDatatableQuery($columns);
                    $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
                    $stmt = $pdo->prepare($sql);
                    for($i=0;$i<count($columns);$i++) {
                        if($columns[$i] != '') {
                            $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                        }
                    }
                    $stmt->execute();
                    $row = $stmt->fetch(PDO::FETCH_ASSOC);
                    $totalFiltered = $row['total'];
                }

                $sql = 'SELECT * FROM _harilibur WHERE 1=1 '.$where.' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
                $stmt = $pdo->prepare($sql);
                if(!empty($request->input('search.value'))) {
                    for($i=0;$i<count($columns);$i++) {
                        if($columns[$i] != '') {
                            $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                        }
                    }
                }
                $stmt->execute();
                $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

                $data = array();
                if(!empty($originaldata)){
                    foreach($originaldata as $key){
                        $tempdata['tanggalawal'] = Utils::tanggalCantikDariSampai($key['tanggalawal'],$key['tanggalakhir']);
                        for($i=1;$i<count($columns);$i++){
                            $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                        }
                        $data[] = $tempdata;
                    }
                }
                return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
            }
        }
        return '';
    }

    public function excelHariLibur()
    {
        if(Utils::cekHakakses('laporanlainnya','l')){
            if(Session::has('lapharilibur_tahun')) {
                if (Session::get('lapharilibur_tahun') != '') {
                    $tahun = Session::get('lapharilibur_tahun');
                    $pdo = DB::connection('perusahaan_db')->getPdo();
                    $objPHPExcel = new PHPExcel();

                    Utils::setPropertiesExcel($objPHPExcel,trans('all.harilibur'));

                    //set value kolom
                    $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('A1', trans('all.tanggal'))
                                ->setCellValue('B1', trans('all.harilibur'));

                    $sql = 'CALL generateharilibur(:tahun)';
                    $stmt = $pdo->prepare($sql);
                    $stmt->bindValue(':tahun', $tahun);
                    $stmt->execute();

                    $sql = 'DESC _harilibur';
                    $stmt = $pdo->prepare($sql);
                    $stmt->execute();
                    $kolom = $stmt->fetchAll(PDO::FETCH_COLUMN);

                    $sql = 'SELECT * FROM _harilibur';
                    $stmt = $pdo->prepare($sql);
                    $stmt->execute();
                    $totalkolom = $stmt->columnCount();

                    $ha = 3;
                    for ($j = 4; $j < $totalkolom; $j++) {
                        $idagama = str_replace('_', '', $kolom[$j]);
                        $agama = Utils::getDataWhere($pdo, 'agama', 'agama', 'id', $idagama);
                        $hk = Utils::angkaToHuruf($ha); //huruf kolom agama
                        $objPHPExcel->getActiveSheet()->setCellValue($hk . '1', $agama);
                        $ha++;
                    }

                    $i = 2;
                    while ($row = $stmt->fetch(PDO::FETCH_BOTH)) {
                        $tanggal = Utils::tanggalCantikDariSampai($row['tanggalawal'], $row['tanggalakhir']);
                        $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $tanggal);
                        $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['keterangan']);

                        $ha = 3;
                        for ($j = 4; $j < $totalkolom; $j++) {
                            $hk = Utils::angkaToHuruf($ha); //huruf kolom agama
                            $objPHPExcel->getActiveSheet()->setCellValue($hk . $i, $row[$j]);
                            $ha++;
                        }

                        $i++;
                    }

                    $arrWidth = array('', 50, 100);
                    for ($j = 1; $j <= 2; $j++) {
                        $huruf = Utils::angkaToHuruf($j);
                        $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                        $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    }

                    Utils::insertLogUser('Ekspor laporan hari libur');
                    Utils::setFileNameExcel(trans('all.harilibur'));
                    $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
                    $writer->save('php://output');
                }
            }
        }
    }

    public function rekapAbsenText($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift)
    {
        if(Utils::cekHakakses('laporanekspor','l')){
            $tglawal = explode('/', $tanggalawal);
            $tglakhir = explode('/', $tanggalakhir);
            $tglawal_new = $tglawal[2] . $tglawal[1] . $tglawal[0];
            $tglakhir_new = $tglakhir[2] . $tglakhir[1] . $tglakhir[0];

            $filename = $tglawal_new . '_' . $tglakhir_new . '_' . rand(0, 9) . rand(0, 9) . rand(0, 9) . rand(0, 9) . ".txt";

            $pdo = DB::connection('perusahaan_db')->getPdo();

            $sql = 'call export_txt(STR_TO_DATE(:tanggalawal,"%d/%m/%Y"), STR_TO_DATE(:tanggalakhir,"%d/%m/%Y"))';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', $tanggalawal);
            $stmt->bindValue(':tanggalakhir', $tanggalakhir);
            $stmt->execute();

            $whereAtribut = '';
            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $whereAtribut .= ' WHERE pegawai_id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            $whereJamkerja = '';
            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $whereJamkerja .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            $whereJamkerjaShift = '';
            if($jamkerjashift != ''){
                $jamkerjashiftdetail = Utils::jamKerja($jamkerjashift);
                $whereJamkerjaShift .= ' AND p.id IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y") AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
            }

            $sql = 'SELECT
                        pegawai_pin as pin,
                        tanggal,
                        IFNULL(TIME(waktu_masuk),"        ") as waktumasuk,
                        IFNULL(TIME(waktu_keluar),"") as waktukeluar
                    FROM
                        _export_txt
                    '.$whereAtribut.'
                    '.$whereJamkerja.'
                    '.$whereJamkerjaShift.'
                    ORDER BY
                        pegawai_pin, tanggal';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $isi = '';
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $isi .= $row['pin'] . '|' . $row['tanggal'] . '|' . $row['waktumasuk'] . '|' . $row['waktukeluar'] . "\r\n";
            }

            $handle = fopen($filename, "w");
            fwrite($handle, $isi);
            fclose($handle);

            Utils::insertLogUser('Ekspor laporan rekap absen text');

            header('Content-Type: application/octet-stream');
            header('Content-Disposition: attachment; filename=' . basename($filename));
            header('Expires: 0');
            header('Cache-Control: must-revalidate');
            header('Pragma: public');
            header('Content-Length: ' . filesize($filename));
            readfile($filename);
            //hapus file
            unlink($filename);
            exit;
        }
    }

    public function rekapAbsenExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift)
    {
        if(Utils::cekHakakses('laporanekspor','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel);

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }

            //select atrbut variable
            $sql = 'SELECT id, md5(CONCAT(atribut,"_atributvariable",id)) as nama,atribut FROM atributvariable WHERE penting = "y" ORDER BY atribut';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $totalatributvariable = $stmt->rowCount();

            $i = 4;
            $a = 0;
            $arratirbutvariable = array();
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $hh = Utils::angkaToHuruf($i);
                $arratirbutvariableheader[$a] = $row['atribut'];
                $arratirbutvariable[$a] = $row['nama'];

                //lebar kolom
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                $i++;
                $a++;
            }

            //select atrbut penting
            $sql = 'SELECT id, md5(CONCAT(atribut,"_atributpenting",id)) as nama,atribut FROM atribut WHERE penting="y" ORDER BY atribut';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $totalatributpenting = $stmt->rowCount();

            $a = 0;
            $arratirbutpenting = array();
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $hh = Utils::angkaToHuruf($i);
                $arratirbutpentingheader[$a] = $row['atribut'];
                $arratirbutpenting[$a] = $row['nama'];

                //lebar kolom
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                $i++;
                $a++;
            }

            //get atributvariable query
            $atributvariable = Utils::getAtributVariableQuery('p.id');

            //get atributpenting query
            $atributpenting = Utils::getAtributPentingQuery('p.id');

            //huruf setelah atribut penting
            $h1 = Utils::angkaToHuruf($i);
            $h2 = Utils::angkaToHuruf($i + 1);
            $h3 = Utils::angkaToHuruf($i + 2);
            $h4 = Utils::angkaToHuruf($i + 3);
            $h5 = Utils::angkaToHuruf($i + 4);
            $h6 = Utils::angkaToHuruf($i + 5);
            $h7 = Utils::angkaToHuruf($i + 6);
            $h8 = Utils::angkaToHuruf($i + 7);
            $h9 = Utils::angkaToHuruf($i + 8);
            $h10 = Utils::angkaToHuruf($i + 9);
            $h11 = Utils::angkaToHuruf($i + 10);
            $h12 = Utils::angkaToHuruf($i + 11);
            $h13 = Utils::angkaToHuruf($i + 12);
            $h14 = Utils::angkaToHuruf($i + 13);
            $h15 = Utils::angkaToHuruf($i + 14);
            $h16 = Utils::angkaToHuruf($i + 15);
            $h17 = Utils::angkaToHuruf($i + 16);
            $h18 = Utils::angkaToHuruf($i + 17);
            $h19 = Utils::angkaToHuruf($i + 18);

            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $batasan = ' AND p.id IN ' . $batasan;
            }

            $whereAtribut = '';
            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $whereAtribut .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            $whereJamkerja = '';
            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $whereJamkerja .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            $where = '';
            if(Session::has('laprekapabsen_tanggal')){
                $tahun = Session::get('lapkehadiran_tahun');
                $bulan = Session::get('lapkehadiran_bulan');
                $tanggal = Session::get('lapkehadiran_tanggal');
                $wherePeriode = '';
                if ($tanggal != ''){
                    for($i=0;$i<count($tanggal);$i++) {
                        $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                    }
                    if (strlen($wherePeriode)>0) {
                        $where .= ' AND ra.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                    }
                }
                else {
                    $where .= ' AND year(ra.tanggal)="'.$tahun.'" AND month(ra.tanggal)="'.$bulan.'"';
                }
            }else{
                $where = ' AND ra.tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y")';
            }

            $sql = 'SELECT
                        p.nama as nama,
                        p.pin,
                        ' . $atributvariable . '
                        ' . $atributpenting . '
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y",1,0)) as jumlah_masuk_sesuai_jadwal,
                        SUM(IF(ra.jadwalmasukkerja="t" AND ra.masukkerja="y",1,0)) as jumlah_masuk_tidak_sesuai_jadwal,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk>=0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_normal,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk<0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_terlambat,
                        SUM(IF(ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d",1,0)) as jumlah_masuk_dispensasi,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="i",1,0)) as jumlah_tidakmasuk_ijin,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="s",1,0)) as jumlah_tidakmasuk_sakit,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori="a"),1,0)) as jumlah_tidakmasuk_alpha,
                        ROUND(SUM(ra.lamakerja)/60,1) as waktu_lamakerja,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,1,0)) as jumlah_datangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,ra.selisihmasuk,0))/60,1) as waktu_datangawal,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,1,0)) as jumlah_terlambat,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,-1*ra.selisihmasuk,0))/60,1) as waktu_terlambat,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,1,0)) as jumlah_pulangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,-1*ra.selisihkeluar,0))/60,1) as waktu_pulangawal,
                        SUM(IF(ra.lamalembur>0,1,0)) as jumlah_lembur,
                        ROUND(SUM(ra.lamalembur)/60,1) as waktu_lembur,
                        "" as kelengkapanpresensi
                    FROM
                        pegawai p,
                        rekapabsen ra
                    WHERE
                        p.id=ra.idpegawai AND
                        ra.jenisjamkerja="full" AND
                        p.del = "t"
                        ' . $where . '
                        ' . $batasan . '
                        ' . $whereAtribut . '
                        ' . $whereJamkerja . '
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama ASC';

            $stmt = $pdo->prepare($sql);
            $stmt->execute();

            $fulladadata = false;

            if ($stmt->rowCount() > 0) {
                $r = $b + 1;
                $r2 = $b + 3;
                $r3 = $b + 4;
                $r4 = $b + 5;
                $r5 = $b + 6;
                $fulladadata = true;

                // set value kolom
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('B' . $r, trans('all.laporankerjafulltime'))
                            ->setCellValue('B' . $r2, trans('all.nama'))
                            ->setCellValue('C' . $r2, trans('all.pin'))
                            ->setCellValue($h1 . $r2, trans('all.jumlahkehadiran') . '(' . trans('all.kali') . ')')
                            ->setCellValue($h11 . $r2, trans('all.waktukehadiran') . '(' . trans('all.menit') . ')')
                            ->setCellValue($h1 . $r3, trans('all.masuk'))
                            ->setCellValue($h1 . $r4, trans('all.normal'))
                            ->setCellValue($h2 . $r4, trans('all.terlambat'))
                            ->setCellValue($h3 . $r4, trans('all.dispensasi'))
                            ->setCellValue($h4 . $r3, trans('all.totalmasuk'))
                            ->setCellValue($h4 . $r4, trans('all.sesuaijadwal'))
                            ->setCellValue($h5 . $r4, trans('all.tidaksesuaijadwal'))
                            ->setCellValue($h6 . $r4, trans('all.total'))
                            ->setCellValue($h7 . $r3, trans('all.tidakmasuk'))
                            ->setCellValue($h7 . $r4, trans('all.ijin'))
                            ->setCellValue($h8 . $r4, trans('all.sakit'))
                            ->setCellValue($h9 . $r4, trans('all.alpha'))
                            ->setCellValue($h10 . $r3, trans('all.totaltidakmasuk'))
                            ->setCellValue($h11 . $r3, trans('all.jamkerja'))
                            ->setCellValue($h12 . $r3, trans('all.datangawal'))
                            ->setCellValue($h14 . $r3, trans('all.terlambat'))
                            ->setCellValue($h16 . $r3, trans('all.pulangawal'))
                            ->setCellValue($h18 . $r3, trans('all.lembur'))
                            ->setCellValue($h12 . $r4, trans('all.jumlah'))
                            ->setCellValue($h13 . $r4, trans('all.durasi'))
                            ->setCellValue($h14 . $r4, trans('all.jumlah'))
                            ->setCellValue($h15 . $r4, trans('all.durasi'))
                            ->setCellValue($h16 . $r4, trans('all.jumlah'))
                            ->setCellValue($h17 . $r4, trans('all.durasi'))
                            ->setCellValue($h18 . $r4, trans('all.jumlah'))
                            ->setCellValue($h19 . $r4, trans('all.durasi'));

                //style atributvariable
                $z = 4; //karena dari d
                for ($j = 0; $j < $totalatributvariable; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                    //header
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutvariableheader[$j]);
                    $z++;
                }

                //style atributpenting
                for ($j = 0; $j < $totalatributpenting; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                    //header
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutpentingheader[$j]);
                    $z++;
                }

                $objPHPExcel->getActiveSheet()->mergeCells('B' . $r2 . ':B' . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells('C' . $r2 . ':C' . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r2 . ':' . $h9 . $r2);
                $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r3 . ':' . $h3 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h4 . $r3 . ':' . $h6 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h7 . $r3 . ':' . $h9 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h10 . $r3 . ':' . $h10 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h11 . $r3 . ':' . $h11 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h12 . $r3 . ':' . $h13 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h14 . $r3 . ':' . $h15 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h16 . $r3 . ':' . $h17 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h18 . $r3 . ':' . $h19 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h11 . $r2 . ':' . $h19. $r2);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2 . ':B' . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2 . ':C' . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2 . ':' . $h9 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3 . ':' . $h3 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3 . ':' . $h6 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3 . ':' . $h9 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2 . ':' . $h19 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3 . ':' . $h10 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3 . ':' . $h11 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3 . ':' . $h13 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3 . ':' . $h15 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3 . ':' . $h17 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3 . ':' . $h19 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h19 . $r4)->applyFromArray($styleArray);

                for ($j = 2; $j <= 17 + $totalatributvariable + $totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $r5)->applyFromArray($styleArray);
                }

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h19 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(40);
                $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(12);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(14);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h4)->setWidth(14);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h5)->setWidth(17);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(8);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h9)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h10)->setWidth(12);

                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setWrapText(true);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r4)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getFont()->setBold(true);

                $i = $b + 6;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                    $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pin']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['jumlah_masuk_normal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['jumlah_masuk_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['jumlah_masuk_dispensasi']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['jumlah_masuk_sesuai_jadwal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $row['jumlah_masuk_tidak_sesuai_jadwal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $row['jumlah_tidakmasuk_ijin']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['jumlah_tidakmasuk_sakit']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h9 . $i, $row['jumlah_tidakmasuk_alpha']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h10 . $i, $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h11 . $i, $row['waktu_lamakerja']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h12 . $i, $row['jumlah_datangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h13 . $i, $row['waktu_datangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h14 . $i, $row['jumlah_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h15 . $i, $row['waktu_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h16 . $i, $row['jumlah_pulangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h17 . $i, $row['waktu_pulangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h18 . $i, $row['jumlah_lembur']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h19 . $i, $row['waktu_lembur']);

                    //atributvariable
                    $z = 4;
                    $a = 0;
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        //$objPHPExcel->getActiveSheet()->setCellValue($hh.$i, $row[$arratirbutvariable[$a]]);
                        $objPHPExcel->getActiveSheet()->setCellValueExplicit($hh . $i, $row[$arratirbutvariable[$a]], PHPExcel_Cell_DataType::TYPE_STRING);

                        $z++;
                        $a++;
                    }

                    //atributpenting
                    $a = 0;
                    for ($j = 0; $j < $totalatributpenting; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $i, $row[$arratirbutpenting[$a]]);

                        $z++;
                        $a++;
                    }

                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $i)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $i)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h10 . $i)->getFont()->setBold(true);

                    for ($o = 2; $o < 23 + $totalatributvariable + $totalatributpenting; $o++) {
                        $abjad = Utils::angkaToHuruf($o);
                        $objPHPExcel->getActiveSheet()->getStyle($abjad . $i)->applyFromArray($styleArray);
                    }

                    $i++;
                }
            }

            $whereJamkerjaShift = '';
            if($jamkerjashift != ''){
                $jamkerjashiftdetail = Utils::jamKerja($jamkerjashift);
                $whereJamkerjaShift .= ' AND p.id IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y") AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
            }

            // jamkerjashift
            $sql = 'SELECT
                        p.nama as nama,
                        p.pin,
                        ' . $atributvariable . '
                        ' . $atributpenting . '
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk>=0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_normal,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk<0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_terlambat,
                        SUM(IF(ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d",1,0)) as jumlah_masuk_dispensasi,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="i",1,0)) as jumlah_tidakmasuk_ijin,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="s",1,0)) as jumlah_tidakmasuk_sakit,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori="a"),1,0)) as jumlah_tidakmasuk_alpha,
                        ROUND(SUM(ra.lamakerja)/60,1) as waktu_lamakerja,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,1,0)) as jumlah_datangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,ra.selisihmasuk,0))/60,1) as waktu_datangawal,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,1,0)) as jumlah_terlambat,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,-1*ra.selisihmasuk,0))/60,1) as waktu_terlambat,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,1,0)) as jumlah_pulangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,-1*ra.selisihkeluar,0))/60,1) as waktu_pulangawal,
                        SUM(IF(ra.lamalembur>0,1,0)) as jumlah_lembur,
                        ROUND(SUM(ra.lamalembur)/60,1) as waktu_lembur,
                        SUM(ra.jumlahsesi) as totalshift
                    FROM
                        pegawai p,
                        rekapabsen ra
                    WHERE
                        p.id=ra.idpegawai AND
                        p.del = "t" AND
                        ra.jenisjamkerja="shift"
                        ' . $where . '
                        ' . $batasan . '
                        ' . $whereAtribut . '
                        ' . $whereJamkerjaShift . '
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama ASC';

            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            if ($stmt->rowCount() > 0) {

                if ($fulladadata == true) {
                    $r = $i + 2;
                    $r2 = $r + 3; // 3
                    $r3 = $r + 4; // 4
                    $r4 = $r + 5; // 5
                    $r5 = $r + 6; // 6
                } else {
                    $r = $b + 1;
                    $r2 = $b + 3;
                    $r3 = $b + 4;
                    $r4 = $b + 5;
                    $r5 = $b + 6;
                }

                // set value kolom
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('B' . $r, trans('all.laporankerjashifttime'))
                            ->setCellValue('B' . $r2, trans('all.nama'))
                            ->setCellValue('C' . $r2, trans('all.pin'))
                            ->setCellValue($h1 . $r2, trans('all.jumlahkehadiran') . '(' . trans('all.kali') . ')')
                            ->setCellValue($h10 . $r2, trans('all.waktukehadiran') . '(' . trans('all.menit') . ')')
                            ->setCellValue($h1 . $r3, trans('all.masuk'))
                            ->setCellValue($h1 . $r4, trans('all.normal'))
                            ->setCellValue($h2 . $r4, trans('all.terlambat'))
                            ->setCellValue($h3 . $r4, trans('all.dispensasi'))
                            ->setCellValue($h4 . $r3, trans('all.totalhari'))
                            ->setCellValue($h5 . $r3, trans('all.totaljadwalshift'))
                            ->setCellValue($h6 . $r3, trans('all.tidakmasuk'))
                            ->setCellValue($h6 . $r4, trans('all.ijin'))
                            ->setCellValue($h7 . $r4, trans('all.sakit'))
                            ->setCellValue($h8 . $r4, trans('all.alpha'))
                            ->setCellValue($h9 . $r3, trans('all.totaltidakmasuk'))
                            ->setCellValue($h10 . $r3, trans('all.jamkerja'))
                            ->setCellValue($h11 . $r3, trans('all.datangawal'))
                            ->setCellValue($h13 . $r3, trans('all.terlambat'))
                            ->setCellValue($h15 . $r3, trans('all.pulangawal'))
                            ->setCellValue($h17 . $r3, trans('all.lembur'))
                            ->setCellValue($h11 . $r4, trans('all.jumlah'))
                            ->setCellValue($h12 . $r4, trans('all.durasi'))
                            ->setCellValue($h13 . $r4, trans('all.jumlah'))
                            ->setCellValue($h14 . $r4, trans('all.durasi'))
                            ->setCellValue($h15 . $r4, trans('all.jumlah'))
                            ->setCellValue($h16 . $r4, trans('all.durasi'))
                            ->setCellValue($h17 . $r4, trans('all.jumlah'))
                            ->setCellValue($h18 . $r4, trans('all.durasi'));

                //style atributvariable
                $z = 4; //karena dari d
                for ($j = 0; $j < $totalatributvariable; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                    //header
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutvariableheader[$j]);
                    $z++;
                }

                //style atributvariable
                for ($j = 0; $j < $totalatributpenting; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                    //header
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutpentingheader[$j]);
                    $z++;
                }

                $objPHPExcel->getActiveSheet()->mergeCells('B' . $r2 . ':B' . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells('C' . $r2 . ':C' . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r2 . ':' . $h8 . $r2);
                $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r3 . ':' . $h3 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h4 . $r3 . ':' . $h4 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h5 . $r3 . ':' . $h5 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h6 . $r3 . ':' . $h8 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h9 . $r3 . ':' . $h9 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h10 . $r3 . ':' . $h10 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h11 . $r3 . ':' . $h12 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h13 . $r3 . ':' . $h14 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h15 . $r3 . ':' . $h16 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h17 . $r3 . ':' . $h18 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h10 . $r2 . ':' . $h18 . $r2);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2 . ':B' . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2 . ':C' . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2 . ':' . $h8 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3 . ':' . $h3 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3 . ':' . $h4 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3 . ':' . $h5 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3 . ':' . $h8 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r2 . ':' . $h18 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r3 . ':' . $h9 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3 . ':' . $h10 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3 . ':' . $h11 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3 . ':' . $h12 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3 . ':' . $h13 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3 . ':' . $h14 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3 . ':' . $h15 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3 . ':' . $h16 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3)->applyFromArray($styleArray);

                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->applyFromArray($styleArray);

                for ($j = 2; $j <= 20 + $totalatributvariable + $totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $r5)->applyFromArray($styleArray);
                }

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(40);
                $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(12);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(14);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h9)->setWidth(12);

                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r3)->getAlignment()->setWrapText(true);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r3)->getFont()->setBold(true);

                if ($fulladadata == true) {
                    $i = 6 + $r;
                } else {
                    $i = $b + 6;
                }
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                    $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pin']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['jumlah_masuk_normal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['jumlah_masuk_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['jumlah_masuk_dispensasi']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $row['totalshift']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['jumlah_tidakmasuk_ijin']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $row['jumlah_tidakmasuk_sakit']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['jumlah_tidakmasuk_alpha']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h9 . $i, $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h10 . $i, $row['waktu_lamakerja']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h11 . $i, $row['jumlah_datangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h12 . $i, $row['waktu_datangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h13 . $i, $row['jumlah_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h14 . $i, $row['waktu_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h15 . $i, $row['jumlah_pulangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h16 . $i, $row['waktu_pulangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h17 . $i, $row['jumlah_lembur']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h18 . $i, $row['waktu_lembur']);

                    //atributvariable
                    $z = 4;
                    $a = 0;
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->setCellValueExplicit($hh . $i, $row[$arratirbutvariable[$a]], PHPExcel_Cell_DataType::TYPE_STRING);

                        $z++;
                        $a++;
                    }

                    //atributpenting
                    $a = 0;
                    for ($j = 0; $j < $totalatributpenting; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $i, $row[$arratirbutpenting[$a]]);

                        $z++;
                        $a++;
                    }

                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $i)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $i)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h9 . $i)->getFont()->setBold(true);

                    for ($o = 2; $o < 22 + $totalatributvariable + $totalatributpenting; $o++) {
                        $abjad = Utils::angkaToHuruf($o);
                        $objPHPExcel->getActiveSheet()->getStyle($abjad . $i)->applyFromArray($styleArray);
                    }

                    $i++;
                }
            }

            $heightgambar = 99;
            $widthgambar = 99;

            $cg = Utils::angkaToHuruf(20 + $totalatributvariable + $totalatributpenting) . '1';
            $cg1 = Utils::angkaToHuruf(20 + $totalatributvariable + $totalatributpenting);

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                $l = $i - 1;
            } else {
                $l = $i + 1;
                Utils::footerExcel($objPHPExcel,'kiri','B','B',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'tengah','F','H',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'kanan','L',$cg1,$l,$rowPE);
                $l = $l+7;
            }

            // password
            Utils::passwordExcel($objPHPExcel);

            if ($b != 1) {
                Utils::header5baris($objPHPExcel,$cg1,$rowPE);
            }

            //merge dan stylegaris range keterangan tanggal setelah header
            $objPHPExcel->getActiveSheet()->mergeCells('B' . $b . ':' . $cg1 . $b);
            // value
            if(Session::has('laprekapabsen_keterangan')){
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $b, trans('all.menampilkandata') . ' ' . Session::get('laprekapabsen_keterangan'));
            } else {
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $b, trans('all.menampilkandatatanggal') . ' ' . $tanggalawal . ' - ' . $tanggalakhir);
            }
            // center text
            $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            //font size
            $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getFont()->setSize(14);

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $l + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('B' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('B' . $ft)->getFont()->setItalic(true);

            if ($rowPE['logokiri'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
            }

            if ($rowPE['logokanan'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg);
            }

            Utils::insertLogUser('Ekspor laporan rekap absen');
            Utils::setFileNameExcel(trans('all.rekapitulasi'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function rekapAbsenPerKategoriExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift)
    {
        if(Utils::cekHakakses('laporanekspor','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel);

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }

            //select atrbut variable
            $sql = 'SELECT id, md5(CONCAT(atribut,"_atributvariable",id)) as nama,atribut FROM atributvariable WHERE penting = "y" ORDER BY atribut';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $totalatributvariable = $stmt->rowCount();

            $i = 4;
            $a = 0;
            $arratirbutvariable = array();
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $hh = Utils::angkaToHuruf($i);
                $arratirbutvariableheader[$a] = $row['atribut'];
                $arratirbutvariable[$a] = $row['nama'];

                //lebar kolom
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                $i++;
                $a++;
            }

            //select atrbut penting
            $sql = 'SELECT id, md5(CONCAT(atribut,"_atributpenting",id)) as nama,atribut FROM atribut WHERE penting="y" ORDER BY atribut';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $totalatributpenting = $stmt->rowCount();

            $a = 0;
            $arratirbutpenting = array();
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $hh = Utils::angkaToHuruf($i);
                $arratirbutpentingheader[$a] = $row['atribut'];
                $arratirbutpenting[$a] = $row['nama'];

                //lebar kolom
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                $i++;
                $a++;
            }

            //get atributvariable query
            $atributvariable = Utils::getAtributVariableQuery('p.id');

            //get atributpenting query
            $atributpenting = Utils::getAtributPentingQuery('p.id');

            //baris(row)
            $r = $b + 1;
            $r2 = $b + 3;
            $r3 = $b + 4;
            $r4 = $b + 5;
            $r5 = $b + 6;

            $ii = $i; //bantuan untuk h1 dll di jamkerja shift
            //huruf setelah atribut penting
            $h1 = Utils::angkaToHuruf($i);
            $h2 = Utils::angkaToHuruf($i + 1);
            $h3 = Utils::angkaToHuruf($i + 2);
            $h4 = Utils::angkaToHuruf($i + 3);
            $h5 = Utils::angkaToHuruf($i + 4);
            $h6 = Utils::angkaToHuruf($i + 5);
            $h7 = Utils::angkaToHuruf($i + 6);
            $h8 = Utils::angkaToHuruf($i + 7);
            $h9 = Utils::angkaToHuruf($i + 8);
            $h10 = Utils::angkaToHuruf($i + 9);

            // ambil dahulu alasan tidak masuk nya
            $sql = 'SELECT id, alasan FROM alasantidakmasuk WHERE digunakan="y" ORDER BY urutan';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $arrAlasanTidakMasuk = $stmt->fetchAll(PDO::FETCH_ASSOC);
            $totalalasantidakmasuk = $stmt->rowCount();
            $sqlAlasanTidakMasuk = '';
            $hatm = Utils::angkaToHuruf($i + 10);
            $a_atm = $i + 10;
            $hatm2 = $hatm;
            for($l=0;$l<$totalalasantidakmasuk;$l++) {
                $hatm = Utils::angkaToHuruf($i + 10 + $l);
//                $objPHPExcel->getActiveSheet()->setCellValue($hatm . $r4, $arrAlasanTidakMasuk[$l]['alasan']);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->applyFromArray($styleArray);
//                $objPHPExcel->getActiveSheet()->getColumnDimension($hatm)->setWidth(15);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                $sqlAlasanTidakMasuk = $sqlAlasanTidakMasuk. 'SUM(IF(ra.jadwalmasukkerja="y" AND ra.idalasantidakmasuk='.$arrAlasanTidakMasuk[$l]['id'].',1,0)) as catatan_'.$l.', ';
            }
//            if($totalalasantidakmasuk > 0){
//                $objPHPExcel->getActiveSheet()->mergeCells($hatm2 . $r3 . ':' . $hatm . $r3);
//                $objPHPExcel->getActiveSheet()->setCellValue($hatm2 . $r3, trans('all.tidakmasuk').' ('.trans('all.alasan').') a');
//                $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
//            }

            $h11 = Utils::angkaToHuruf($i + 10 + $totalalasantidakmasuk);
            $h12 = Utils::angkaToHuruf($i + 11 + $totalalasantidakmasuk);
            $h13 = Utils::angkaToHuruf($i + 12 + $totalalasantidakmasuk);
            $h14 = Utils::angkaToHuruf($i + 13 + $totalalasantidakmasuk);
            $h15 = Utils::angkaToHuruf($i + 14 + $totalalasantidakmasuk);
            $h16 = Utils::angkaToHuruf($i + 15 + $totalalasantidakmasuk);
            $h17 = Utils::angkaToHuruf($i + 16 + $totalalasantidakmasuk);
            $h18 = Utils::angkaToHuruf($i + 17 + $totalalasantidakmasuk);
            $h19 = Utils::angkaToHuruf($i + 18 + $totalalasantidakmasuk);
            $h20 = Utils::angkaToHuruf($i + 19 + $totalalasantidakmasuk);
            $h21 = Utils::angkaToHuruf($i + 20 + $totalalasantidakmasuk);
            $h22 = Utils::angkaToHuruf($i + 21 + $totalalasantidakmasuk);

            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            $shift_batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $batasan = ' AND p.id IN ' . $batasan;
                $shift_batasan = ' AND rs.idpegawai IN ' . $shift_batasan;
            }

            $whereAtribut = '';
            $shift_whereAtribut = '';
            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $whereAtribut .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
                $shift_whereAtribut .= ' AND rs.idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            $whereJamkerja = '';
            $shift_whereJamkerja = '';
            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $whereJamkerja .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
                $shift_whereJamkerja .= ' AND rs.idpegawai IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            $where = '';
            $shift_where = '';
            if(Session::has('laprekapabsen_tanggal')){
                $tahun = Session::get('lapkehadiran_tahun');
                $bulan = Session::get('lapkehadiran_bulan');
                $tanggal = Session::get('lapkehadiran_tanggal');
                $wherePeriode = '';
                if ($tanggal != ''){
                    for($i=0;$i<count($tanggal);$i++) {
                        $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                    }
                    if (strlen($wherePeriode)>0) {
                        $where .= ' AND ra.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                        $shift_where .= ' AND rs.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                    }
                }
                else {
                    $where .= ' AND year(ra.tanggal)="'.$tahun.'" AND month(ra.tanggal)="'.$bulan.'"';
                    $shift_where .= ' AND year(rs.tanggal)="'.$tahun.'" AND month(rs.tanggal)="'.$bulan.'"';
                }
            }else{
                $where = ' AND ra.tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y")';
                $shift_where = ' AND rs.tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y")';
            }

            $sql = 'SELECT
                        p.nama as nama,
                        p.pin,
                        ' . $atributvariable . '
                        ' . $atributpenting . '
                        SUM(IF(ra.jadwalmasukkerja="y",1,0)) as jumlah_seharusnya_masuk,
                        SUM(IF(ra.jadwalmasukkerja="y",ra.jadwallamakerja,0)) as waktu_seharusnya_masuk,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d" AND ISNULL(atm.hitunguangmakan)=false AND atm.hitunguangmakan="y",1,0)) as alasantidakmasuk_hitunguangmakan,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y",1,0)) as jumlah_masuk_sesuai_jadwal,
                        SUM(IF(ra.jadwalmasukkerja="t" AND ra.masukkerja="y",1,0)) as jumlah_masuk_tidak_sesuai_jadwal,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk>=0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_normal,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk<0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_terlambat,
                        SUM(IF(ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d",1,0)) as jumlah_masuk_dispensasi,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="i",1,0)) as jumlah_tidakmasuk_ijin,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="s",1,0)) as jumlah_tidakmasuk_sakit,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori="a"),1,0)) as jumlah_tidakmasuk_alpha,
                        '.$sqlAlasanTidakMasuk.'
                        SUM(ra.lamakerja) as waktu_lamakerja_dlm_detik,
                        ROUND(SUM(ra.lamakerja)/60,1) as waktu_lamakerja,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,1,0)) as jumlah_datangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,ra.selisihmasuk,0))/60,1) as waktu_datangawal,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,1,0)) as jumlah_terlambat,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,-1*ra.selisihmasuk,0))/60,1) as waktu_terlambat,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,1,0)) as jumlah_pulangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,-1*ra.selisihkeluar,0))/60,1) as waktu_pulangawal,
                        SUM(IF(ra.lamalembur>0,1,0)) as jumlah_lembur,
                        ROUND(SUM(ra.lamalembur)/60,1) as waktu_lembur,
                        "" as kelengkapanpresensi
                    FROM
                        pegawai p,
                        rekapabsen ra
                        LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
                    WHERE
                        p.id=ra.idpegawai AND
                        ra.jenisjamkerja="full" AND
                        p.del = "t"
                        ' . $where . '
                        ' . $batasan . '
                        ' . $whereAtribut . '
                        ' . $whereJamkerja . '
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama ASC';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();

            $fulladadata = false;

            if ($stmt->rowCount() > 0) {
                $fulladadata = true;

                // set value kolom
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('B' . $r, trans('all.laporankerjafulltime'))
                            ->setCellValue('B' . $r2, trans('all.nama'))
                            ->setCellValue('C' . $r2, trans('all.pin'))
                            ->setCellValue($h1 . $r2, trans('all.jumlahkehadiran') . '(' . trans('all.kali') . ')')
                            ->setCellValue($h12 . $r2, trans('all.waktukehadiran') . '(' . trans('all.menit') . ')')
                            ->setCellValue($h1 . $r3, trans('all.masuk'))
                            ->setCellValue($h1 . $r4, trans('all.normal'))
                            ->setCellValue($h2 . $r4, trans('all.terlambat'))
                            ->setCellValue($h3 . $r4, trans('all.dispensasi'))
                            ->setCellValue($h4 . $r3, trans('all.totalmasuk'))
                            ->setCellValue($h4 . $r4, trans('all.sesuaijadwal'))
                            ->setCellValue($h5 . $r4, trans('all.tidaksesuaijadwal'))
                            ->setCellValue($h6 . $r4, trans('all.total'))
                            ->setCellValue($h7 . $r4, trans('all.prosentase')) //tambahan baru
                            ->setCellValue($h8 . $r3, trans('all.tidakmasuk').' ('.trans('all.kategori').')')
                            ->setCellValue($h8 . $r4, trans('all.ijin'))
                            ->setCellValue($h9 . $r4, trans('all.sakit'))
                            ->setCellValue($h10 . $r4, trans('all.alpha'))
                            ->setCellValue($h11 . $r3, trans('all.totaltidakmasuk'))
                            ->setCellValue($h12 . $r3, trans('all.jamkerja'))
                            ->setCellValue($h12 . $r4, trans('all.total'))
                            ->setCellValue($h13 . $r4, trans('all.prosentase'))
                            ->setCellValue($h14 . $r3, trans('all.datangawal'))
                            ->setCellValue($h16 . $r3, trans('all.terlambat'))
                            ->setCellValue($h18 . $r3, trans('all.pulangawal'))
                            ->setCellValue($h20 . $r3, trans('all.lembur'))
                            ->setCellValue($h14 . $r4, trans('all.jumlah'))
                            ->setCellValue($h15 . $r4, trans('all.durasi'))
                            ->setCellValue($h16 . $r4, trans('all.jumlah'))
                            ->setCellValue($h17 . $r4, trans('all.durasi'))
                            ->setCellValue($h18 . $r4, trans('all.jumlah'))
                            ->setCellValue($h19 . $r4, trans('all.durasi'))
                            ->setCellValue($h20 . $r4, trans('all.jumlah'))
                            ->setCellValue($h21 . $r4, trans('all.durasi'))
                            ->setCellValue($h22 . $r2, trans('all.jumlahuangmakan'));

                //style atributvariable
                $z = 4; //karena dari d
                for ($j = 0; $j < $totalatributvariable; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                    //header
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutvariableheader[$j]);
                    $z++;
                }

                for($l=0;$l<$totalalasantidakmasuk;$l++) {
                    $hatm = Utils::angkaToHuruf($i + 10 + $l);
                    $objPHPExcel->getActiveSheet()->setCellValue($hatm . $r4, $arrAlasanTidakMasuk[$l]['alasan']);
                    $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hatm)->setWidth(15);
                    $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                }
                if($totalalasantidakmasuk > 0){
                    $objPHPExcel->getActiveSheet()->mergeCells($hatm2 . $r3 . ':' . $hatm . $r3);
                    $objPHPExcel->getActiveSheet()->setCellValue($hatm2 . $r3, trans('all.tidakmasuk').' ('.trans('all.alasan').')');
                    $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                }

                //style atributpenting
                for ($j = 0; $j < $totalatributpenting; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                    //header
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutpentingheader[$j]);
                    $z++;
                }

                $objPHPExcel->getActiveSheet()->mergeCells('B' . $r2 . ':B' . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells('C' . $r2 . ':C' . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r2 . ':' . $hatm . $r2);
                $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r3 . ':' . $h3 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h4 . $r3 . ':' . $h7 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h8 . $r3 . ':' . $h10 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h11 . $r3 . ':' . $h11 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h12 . $r3 . ':' . $h13 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h14 . $r3 . ':' . $h15 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h16 . $r3 . ':' . $h17 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h18 . $r3 . ':' . $h19 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h20 . $r3 . ':' . $h21 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h12 . $r2 . ':' . $h21 . $r2);
                $objPHPExcel->getActiveSheet()->mergeCells($h22 . $r2 . ':' . $h22 . $r4);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2 . ':B' . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2 . ':C' . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2 . ':' . $hatm . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3 . ':' . $h3 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3 . ':' . $h6 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3 . ':' . $hatm . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2 . ':' . $h21 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3 . ':' . $h11 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3 . ':' . $h13 . $r3)->applyFromArray($styleArray);

                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3 . ':' . $h15 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3 . ':' . $h17 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3 . ':' . $h19 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h20 . $r3 . ':' . $h21 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h22 . $r2 . ':' . $h22 . $r4)->applyFromArray($styleArray);

//                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->applyFromArray($styleArray);

                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h19 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h20 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h21 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h22 . $r4)->applyFromArray($styleArray);

                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h19 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h20 . $r5)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h21 . $r5)->applyFromArray($styleArray);

                for ($j = 2; $j <= 20 + $totalatributvariable + $totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $r5)->applyFromArray($styleArray);
                }

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h20 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h20 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h19 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h20 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h21 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h22 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(40);
                $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(12);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(14);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h4)->setWidth(14);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h5)->setWidth(17);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(8);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h9)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h10)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h11)->setWidth(12);
//                $objPHPExcel->getActiveSheet()->getColumnDimension($h22)->setWidth(20);

                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h22 . $r2)->getAlignment()->setWrapText(true);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r4)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getFont()->setBold(true);

                $i = $b + 6;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

                    //catatan tidak masuk
                    $totaltidakmasuk = $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha'];
                    for($l=0;$l<$totalalasantidakmasuk;$l++) {
                        $hatmv = Utils::angkaToHuruf($a_atm+$l);
                        $objPHPExcel->getActiveSheet()->setCellValue($hatmv . $i, $row['catatan_'.$l]);
                        $totaltidakmasuk = $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha'] + $row['catatan_'.$l];
                    }

                    $persentase_jumlah_masuk = 0;
                    if ($row['jumlah_seharusnya_masuk']>0) {
                        $persentase_jumlah_masuk = round(($row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi'])/$row['jumlah_seharusnya_masuk'],4);
                    }
                    $persentase_waktu_masuk = 0;
                    if ($row['waktu_seharusnya_masuk']>0) {
                        $persentase_waktu_masuk = round($row['waktu_lamakerja_dlm_detik']/$row['waktu_seharusnya_masuk'],4);
                    }
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                    $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pin']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['jumlah_masuk_normal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['jumlah_masuk_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['jumlah_masuk_dispensasi']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['jumlah_masuk_sesuai_jadwal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $row['jumlah_masuk_tidak_sesuai_jadwal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $persentase_jumlah_masuk);
                    $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['jumlah_tidakmasuk_ijin']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h9 . $i, $row['jumlah_tidakmasuk_sakit']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h10 . $i, $row['jumlah_tidakmasuk_alpha']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h11 . $i, $totaltidakmasuk);
                    $objPHPExcel->getActiveSheet()->setCellValue($h12 . $i, $row['waktu_lamakerja']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h13 . $i, $persentase_waktu_masuk);
                    $objPHPExcel->getActiveSheet()->setCellValue($h14 . $i, $row['jumlah_datangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h15 . $i, $row['waktu_datangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h16 . $i, $row['jumlah_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h17 . $i, $row['waktu_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h18 . $i, $row['jumlah_pulangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h19 . $i, $row['waktu_pulangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h20 . $i, $row['jumlah_lembur']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h21 . $i, $row['waktu_lembur']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h22 . $i, $row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['alasantidakmasuk_hitunguangmakan']);

                    $objPHPExcel->getActiveSheet()->getStyle($h7 . $i)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);
                    $objPHPExcel->getActiveSheet()->getStyle($h13 . $i)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);

                    //atributvariable
                    $z = 4;
                    $a = 0;
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        //$objPHPExcel->getActiveSheet()->setCellValue($hh.$i, $row[$arratirbutvariable[$a]]);
                        $objPHPExcel->getActiveSheet()->setCellValueExplicit($hh . $i, $row[$arratirbutvariable[$a]], PHPExcel_Cell_DataType::TYPE_STRING);

                        $z++;
                        $a++;
                    }

                    //atributpenting
                    $a = 0;
                    for ($j = 0; $j < $totalatributpenting; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $i, $row[$arratirbutpenting[$a]]);

                        $z++;
                        $a++;
                    }

                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $i)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h6 . $i)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h10 . $i)->getFont()->setBold(true);

                    for ($o = 2; $o < 32 + $totalatributvariable + $totalatributpenting; $o++) {
                        $abjad = Utils::angkaToHuruf($o);
                        $objPHPExcel->getActiveSheet()->getStyle($abjad . $i)->applyFromArray($styleArray);
                    }

                    $i++;
                }
            }

            //jamkerja shift
            $whereJamkerjaShift = '';
            $shift_whereJamkerjaShift = '';
            if($jamkerjashift != ''){
                $jamkerjashiftdetail = Utils::jamKerja($jamkerjashift);
                $whereJamkerjaShift .= ' AND p.id IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y") AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
                $shift_whereJamkerjaShift .= ' AND rs.idpegawai IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y") AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
            }

            if ($fulladadata == true) {
                $r = $i + 2;
                $r2 = $r + 3; // 3
                $r3 = $r + 4; // 4
                $r4 = $r + 5; // 5
                $r5 = $r + 6; // 6
            } else {
                $r = $b + 1;
                $r2 = $b + 3;
                $r3 = $b + 4;
                $r4 = $b + 5;
                $r5 = $b + 6;
            }

            //huruf setelah atribut penting
            $h1 = Utils::angkaToHuruf($ii);
            $h2 = Utils::angkaToHuruf($ii + 1);
            $h3 = Utils::angkaToHuruf($ii + 2);
            $h4 = Utils::angkaToHuruf($ii + 3);
            $h5 = Utils::angkaToHuruf($ii + 4);
            $h6 = Utils::angkaToHuruf($ii + 5);
            $h7 = Utils::angkaToHuruf($ii + 6);
            $h8 = Utils::angkaToHuruf($ii + 7);
            $h9 = Utils::angkaToHuruf($ii + 8);
            $h10 = Utils::angkaToHuruf($ii + 9);
            $hatm = Utils::angkaToHuruf($ii + 10 );
            $a_atm = $ii + 10;
            $hatm2 = $hatm;
//            for($l=0;$l<$totalalasantidakmasuk;$l++) {
//                $hatm = Utils::angkaToHuruf($ii + 8 + $l);
//                $objPHPExcel->getActiveSheet()->setCellValue($hatm . $r4, $arrAlasanTidakMasuk[$l]['alasan']);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->applyFromArray($styleArray);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
//            }
//            if($totalalasantidakmasuk > 0){
//                $objPHPExcel->getActiveSheet()->mergeCells($hatm2 . $r3 . ':' . $hatm . $r3);
//                $objPHPExcel->getActiveSheet()->setCellValue($hatm2 . $r3, trans('all.tidakmasuk').' ('.trans('all.alasan').') bro');
//                $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//                $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
//            }
            $h11 = Utils::angkaToHuruf($ii + 10 + $totalalasantidakmasuk);
            $h12 = Utils::angkaToHuruf($ii + 11 + $totalalasantidakmasuk);
            $h13 = Utils::angkaToHuruf($ii + 12 + $totalalasantidakmasuk);
            $h14 = Utils::angkaToHuruf($ii + 13 + $totalalasantidakmasuk);
            $h15 = Utils::angkaToHuruf($ii + 14 + $totalalasantidakmasuk);
            $h16 = Utils::angkaToHuruf($ii + 15 + $totalalasantidakmasuk);
            $h17 = Utils::angkaToHuruf($ii + 16 + $totalalasantidakmasuk);
            $h18 = Utils::angkaToHuruf($ii + 17 + $totalalasantidakmasuk);
            $h19 = Utils::angkaToHuruf($ii + 18 + $totalalasantidakmasuk);
            $h20 = Utils::angkaToHuruf($ii + 19 + $totalalasantidakmasuk);
            $h21 = Utils::angkaToHuruf($ii + 20 + $totalalasantidakmasuk);
            $h22 = Utils::angkaToHuruf($ii + 21 + $totalalasantidakmasuk);
            $h23 = Utils::angkaToHuruf($ii + 22 + $totalalasantidakmasuk);

            // jamkerjashift
            $sql = 'SELECT
                        p.nama as nama,
                        p.pin,
                        ' . $atributvariable . '
                        ' . $atributpenting . '
                        SUM(IF(ra.jadwalmasukkerja="y",1,0)) as jumlah_seharusnya_masuk,
                        SUM(IF(ra.jadwalmasukkerja="y",ra.jadwallamakerja,0)) as waktu_seharusnya_masuk,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d" AND ISNULL(atm.hitunguangmakan)=false AND atm.hitunguangmakan="t",1,0)) as alasantidakmasuk_hitunguangmakan,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk>=0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_normal,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk<0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_terlambat,
                        SUM(IF(ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d",1,0)) as jumlah_masuk_dispensasi,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="i",1,0)) as jumlah_tidakmasuk_ijin,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="s",1,0)) as jumlah_tidakmasuk_sakit,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori="a"),1,0)) as jumlah_tidakmasuk_alpha,
                        '.$sqlAlasanTidakMasuk.'
                        SUM(ra.lamakerja) as waktu_lamakerja_dlm_detik,
                        ROUND(SUM(ra.lamakerja)/60,1) as waktu_lamakerja,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,1,0)) as jumlah_datangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,ra.selisihmasuk,0))/60,1) as waktu_datangawal,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,1,0)) as jumlah_terlambat,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,-1*ra.selisihmasuk,0))/60,1) as waktu_terlambat,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,1,0)) as jumlah_pulangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,-1*ra.selisihkeluar,0))/60,1) as waktu_pulangawal,
                        SUM(IF(ra.lamalembur>0,1,0)) as jumlah_lembur,
                        ROUND(SUM(ra.lamalembur)/60,1) as waktu_lembur,
                        IFNULL(SUM(ra.jumlahsesi),0) as totalshift_jadwal,
                        IFNULL(SUM(rs.jumlah_tidakmasuk),0) as totalshift_tidakmasuk,
                        IFNULL(SUM(rs.jumlah_masuk),0) as totalshift_masuk
                    FROM
                        pegawai p,
                        rekapabsen ra
                        LEFT JOIN (
                            SELECT
                                rs.idpegawai,
                                rs.tanggal,
                                IFNULL(SUM(IF(rs.masukkerja="y",1,0)),0) as jumlah_masuk,
                                IFNULL(SUM(IF(rs.masukkerja="t",1,0)),0) as jumlah_tidakmasuk
                            FROM
                                rekapshift rs
                            WHERE
                                1=1
                            ' . $shift_where . '
                            ' . $shift_batasan . '
                            ' . $shift_whereAtribut . '
                            ' . $shift_whereJamkerjaShift . '
                            GROUP BY
                                rs.idpegawai,
                                rs.tanggal
                        ) rs ON ra.tanggal=rs.tanggal AND rs.idpegawai=ra.idpegawai
                        LEFT JOIN alasantidakmasuk atm ON atm.id=ra.idalasantidakmasuk
                    WHERE
                        p.id=ra.idpegawai AND
                        p.del = "t" AND
                        ra.jenisjamkerja="shift"
                        ' . $where . '
                        ' . $batasan . '
                        ' . $whereAtribut . '
                        ' . $whereJamkerjaShift . '
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama ASC';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            if ($stmt->rowCount() > 0) {

                // set value kolom
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('B' . $r, trans('all.laporankerjashifttime'))
                            ->setCellValue('B' . $r2, trans('all.nama'))
                            ->setCellValue('C' . $r2, trans('all.pin'))
                            ->setCellValue($h1 . $r2, trans('all.jumlahkehadiran') . '(' . trans('all.kali') . ')')
                            ->setCellValue($h13 . $r2, trans('all.waktukehadiran') . '(' . trans('all.menit') . ')')
                            ->setCellValue($h1 . $r3, trans('all.masuk'))
                            ->setCellValue($h1 . $r4, trans('all.normal'))
                            ->setCellValue($h2 . $r4, trans('all.terlambat'))
                            ->setCellValue($h3 . $r4, trans('all.dispensasi'))
                            ->setCellValue($h4 . $r3, trans('all.totalhari'))
                            ->setCellValue($h5 . $r3, trans('all.prosentase'))
                            ->setCellValue($h6 . $r3, trans('all.totaljadwalshift'))
                            ->setCellValue($h7 . $r3, trans('all.totalmasukshift'))
                            ->setCellValue($h8 . $r3, trans('all.tidakmasuk').' ('.trans('all.kategori').')')
                            ->setCellValue($h8 . $r4, trans('all.ijin'))
                            ->setCellValue($h9 . $r4, trans('all.sakit'))
                            ->setCellValue($h10 . $r4, trans('all.alpha'))
                            ->setCellValue($h11 . $r3, trans('all.totaltidakmasuk').' ('.trans('all.hari').')')
                            ->setCellValue($h12 . $r3, trans('all.totaltidakmasukshift'))
                            ->setCellValue($h13 . $r3, trans('all.jamkerja'))
                            ->setCellValue($h13 . $r4, trans('all.total'))
                            ->setCellValue($h14 . $r4, trans('all.prosentase'))
                            ->setCellValue($h15 . $r3, trans('all.datangawal'))
                            ->setCellValue($h17 . $r3, trans('all.terlambat'))
                            ->setCellValue($h19 . $r3, trans('all.pulangawal'))
                            ->setCellValue($h21 . $r3, trans('all.lembur'))
                            ->setCellValue($h15 . $r4, trans('all.jumlah'))
                            ->setCellValue($h16 . $r4, trans('all.durasi'))
                            ->setCellValue($h17 . $r4, trans('all.jumlah'))
                            ->setCellValue($h18 . $r4, trans('all.durasi'))
                            ->setCellValue($h19 . $r4, trans('all.jumlah'))
                            ->setCellValue($h20 . $r4, trans('all.durasi'))
                            ->setCellValue($h21 . $r4, trans('all.jumlah'))
                            ->setCellValue($h22 . $r4, trans('all.durasi'))
                            ->setCellValue($h23 . $r2, trans('all.jumlahuangmakan'));

            $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(14);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(14);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h11)->setWidth(14);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h12)->setWidth(14);

                //style atributvariable
                $z = 4; //karena dari d
                for ($j = 0; $j < $totalatributvariable; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                    //header
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutvariableheader[$j]);
                    $z++;
                }

                for($l=0;$l<$totalalasantidakmasuk;$l++) {
                    $hatm = Utils::angkaToHuruf($ii + 10 + $l);
                    $objPHPExcel->getActiveSheet()->setCellValue($hatm . $r4, $arrAlasanTidakMasuk[$l]['alasan']);
                    $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hatm . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                }
                if($totalalasantidakmasuk > 0){
                    $objPHPExcel->getActiveSheet()->mergeCells($hatm2 . $r3 . ':' . $hatm . $r3);
                    $objPHPExcel->getActiveSheet()->setCellValue($hatm2 . $r3, trans('all.tidakmasuk').' ('.trans('all.alasan').')');
                    $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hatm2 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                }

                //style atributvariable
                for ($j = 0; $j < $totalatributpenting; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                    //header
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutpentingheader[$j]);
                    $z++;
                }

                $objPHPExcel->getActiveSheet()->mergeCells('B' . $r2 . ':B' . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells('C' . $r2 . ':C' . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r2 . ':' . $hatm . $r2);
                $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r3 . ':' . $h3 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h4 . $r3 . ':' . $h4 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h5 . $r3 . ':' . $h5 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h6 . $r3 . ':' . $h6 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h7 . $r3 . ':' . $h7 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h8 . $r3 . ':' . $h10 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($hatm2 . $r3 . ':' . $hatm . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h11 . $r3 . ':' . $h11 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h12 . $r3 . ':' . $h12 . $r4);//baru
                $objPHPExcel->getActiveSheet()->mergeCells($h13 . $r3 . ':' . $h14 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h15 . $r3 . ':' . $h16 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h17 . $r3 . ':' . $h18 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h19 . $r3 . ':' . $h20 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h21 . $r3 . ':' . $h22 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h13 . $r2 . ':' . $h22 . $r2);
                $objPHPExcel->getActiveSheet()->mergeCells($h23 . $r2 . ':' . $h23 . $r4);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2 . ':B' . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2 . ':C' . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2 . ':' . $hatm . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3 . ':' . $h3 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3 . ':' . $h4 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3 . ':' . $h5 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3 . ':' . $h6 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3 . ':' . $h7 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3 . ':' . $hatm . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2 . ':' . $h21 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3 . ':' . $h11 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3 . ':' . $h12 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3 . ':' . $h12 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3 . ':' . $h13 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3 . ':' . $h14 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3 . ':' . $h15 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3 . ':' . $h16 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3 . ':' . $h17 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3 . ':' . $h18 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h19 . $r3 . ':' . $h19 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h20 . $r3 . ':' . $h20 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h21 . $r3 . ':' . $h21 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h22 . $r3 . ':' . $h22 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h22 . $r2 . ':' . $h22 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h23 . $r2 . ':' . $h23 . $r4)->applyFromArray($styleArray);

                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h19 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h20 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h21 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h22 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h23 . $r4)->applyFromArray($styleArray);

                for ($j = 2; $j <= 26 + $totalatributvariable + $totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $r5)->applyFromArray($styleArray);
                }

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h19 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h21 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h19 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h20 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h21 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h22 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h23 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(40);
                $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(12);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(14);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h9)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h10)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h11)->setWidth(12);

                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h23 . $r2)->getAlignment()->setWrapText(true);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $r)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r3)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getFont()->setBold(true);

                if ($fulladadata == true) {
                    $i = 6 + $r;
                } else {
                    $i = $b + 6;
                }
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {

                    //catatan tidak masuk
                    $totaltidakmasuk = $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha'];
                    for($l=0;$l<$totalalasantidakmasuk;$l++) {
                        $hatmv = Utils::angkaToHuruf($a_atm+$l);
                        $objPHPExcel->getActiveSheet()->setCellValue($hatmv . $i, $row['catatan_'.$l]);
                        $totaltidakmasuk = $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha'] + $row['catatan_'.$l];
                    }

                    $persentase_jumlah_masuk = 0;
                    if ($row['jumlah_seharusnya_masuk']>0) {
                        $persentase_jumlah_masuk = round(($row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi'])/$row['jumlah_seharusnya_masuk'],4);
                    }

                    $persentase_waktu_masuk = 0;
                    if ($row['waktu_seharusnya_masuk']>0) {
                        $persentase_waktu_masuk = round($row['waktu_lamakerja_dlm_detik']/$row['waktu_seharusnya_masuk'],4);
                    }

                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                    $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pin']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['jumlah_masuk_normal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['jumlah_masuk_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['jumlah_masuk_dispensasi']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $persentase_jumlah_masuk);
                    $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['totalshift_jadwal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $row['totalshift_masuk']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['jumlah_tidakmasuk_ijin']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h9 . $i, $row['jumlah_tidakmasuk_sakit']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h10 . $i, $row['jumlah_tidakmasuk_alpha']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h11 . $i, $totaltidakmasuk);
                    $objPHPExcel->getActiveSheet()->setCellValue($h12 . $i, $row['totalshift_tidakmasuk']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h13 . $i, $row['waktu_lamakerja']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h14 . $i, $persentase_waktu_masuk);
                    $objPHPExcel->getActiveSheet()->setCellValue($h15 . $i, $row['jumlah_datangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h16 . $i, $row['waktu_datangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h17 . $i, $row['jumlah_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h18 . $i, $row['waktu_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h19 . $i, $row['jumlah_pulangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h20 . $i, $row['waktu_pulangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h21 . $i, $row['jumlah_lembur']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h22 . $i, $row['waktu_lembur']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h23 . $i, $row['totalshift_masuk'] - $row['alasantidakmasuk_hitunguangmakan']);

                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $i)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);
                    $objPHPExcel->getActiveSheet()->getStyle($h14 . $i)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_PERCENTAGE_00);

                    //atributvariable
                    $z = 4;
                    $a = 0;
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->setCellValueExplicit($hh . $i, $row[$arratirbutvariable[$a]], PHPExcel_Cell_DataType::TYPE_STRING);

                        $z++;
                        $a++;
                    }

                    //atributpenting
                    $a = 0;
                    for ($j = 0; $j < $totalatributpenting; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $i, $row[$arratirbutpenting[$a]]);

                        $z++;
                        $a++;
                    }

                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $i)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $i)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h9 . $i)->getFont()->setBold(true);

                    for ($o = 2; $o < 33 + $totalatributvariable + $totalatributpenting; $o++) {
                        $abjad = Utils::angkaToHuruf($o);
                        $objPHPExcel->getActiveSheet()->getStyle($abjad . $i)->applyFromArray($styleArray);
                    }

                    $i++;
                }
            }

            // $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setWidth(10);
            // $objPHPExcel->getActiveSheet()->getColumnDimension('W')->setWidth(12);

            $heightgambar = 99;
            $widthgambar = 99;

            $cg = Utils::angkaToHuruf(27 + $totalatributvariable + $totalatributpenting) . '1';
            $cg1 = Utils::angkaToHuruf(27 + $totalatributvariable + $totalatributpenting);

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                $l = $i - 1;
            } else {
                $l = $i + 1;
                Utils::footerExcel($objPHPExcel,'kiri','B','B',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'tengah','F','H',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'kanan','L',$cg1,$l,$rowPE);
                $l = $l+7;
            }

            // password
            Utils::passwordExcel($objPHPExcel);

            if ($b != 1) {
                Utils::header5baris($objPHPExcel,$cg1,$rowPE);
            }

            //merge dan stylegaris range keterangan tanggal setelah header
            $objPHPExcel->getActiveSheet()->mergeCells('B' . $b . ':' . $cg1 . $b);
            // value
            if(Session::has('laprekapabsen_keterangan')){
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $b, trans('all.menampilkandata') . ' ' . Session::get('laprekapabsen_keterangan'));
            } else {
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $b, trans('all.menampilkandatatanggal') . ' ' . $tanggalawal . ' - ' . $tanggalakhir);
            }
            // center text
            $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            //font size
            $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getFont()->setSize(14);

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $l + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('B' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('B' . $ft)->getFont()->setItalic(true);

            if ($rowPE['logokiri'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
            }

            if ($rowPE['logokanan'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg);
            }

            Utils::insertLogUser('Ekspor laporan rekapitulasi catatan tidak masuk');
            Utils::setFileNameExcel(trans('all.rekapitulasicatatantidakmasuk'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function rekapAbsenShiftExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift)
    {
        if(Utils::cekHakakses('laporanekspor','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel);

            //set value kolom
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.nama'))
                        ->setCellValue('B1', trans('all.atribut'))
                        ->setCellValue('C1', trans('all.namashift'))
                        ->setCellValue('D1', trans('all.jadwal'))
                        ->setCellValue('E1', trans('all.masuk'))
                        ->setCellValue('F1', trans('all.tidakmasuk'));

            //get atributvariable query
            $atributvariable = Utils::getAtributVariableQuery('p.id');

            //get atributpenting query
            $atributpenting = Utils::getAtributPentingQuery('p.id');

            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $batasan = ' AND p.id IN ' . $batasan;
            }

            $whereAtribut = '';
            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $whereAtribut .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            $whereJamkerjaShift = '';
            $wherejamkerjashift1 = '';
            if($jamkerjashift != ''){
                $jamkerjashiftdetail = Utils::jamKerja($jamkerjashift);
                $whereJamkerjaShift .= ' AND p.id IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y") AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
                $wherejamkerjashift1 = ' AND idjamkerjashift IN (' . $jamkerjashiftdetail . ')';
            }

            $where = '';
            $where1 = '';
            if(Session::has('laprekapabsen_tanggal')){
                $tahun = Session::get('laprekapabsen_tahun');
                $bulan = Session::get('laprekapabsen_bulan');
                $tanggal = Session::get('laprekapabsen_tanggal');
                $wherePeriode = '';
                if ($tanggal != ''){
                    for($i=0;$i<count($tanggal);$i++) {
                        $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                    }
                    if (strlen($wherePeriode)>0) {
                        $where .= ' ra.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                        $where1 .= ' tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                    }
                }
                else {
                    $where .= ' year(ra.tanggal)='.$tahun.' AND month(ra.tanggal)='.$bulan;
                    $where1 .= ' year(tanggal)='.$tahun.' AND month(tanggal)='.$bulan;
                }
            }else{
                $where = 'ra.tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y")';
                $where1 = 'tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y")';
            }

            $sql = 'SELECT
                        p.nama as nama,
                        getatributpegawai(p.id, 1) as atribut,
                        GROUP_CONCAT(IFNULL(jks.namashift, "") SEPARATOR ", ") as namashift,
                        SUM(js.jumlah) as jumlah_jadwal,
                        SUM(IFNULL(rah.jumlah,0)) as jumlah_masuk,
                        SUM(js.jumlah-IFNULL(rah.jumlah,0)) as jumlah_tdkmasuk
                    FROM
                        pegawai p,
                        (
                            SELECT
                                idpegawai,
                                idjamkerjashift,
                                COUNT(*) as jumlah
                            FROM
                                jadwalshift
                            WHERE
                                '.$where1.'
                                '.$wherejamkerjashift1.'
                            GROUP BY
                                idpegawai,
                                idjamkerjashift
                        ) js
                        LEFT JOIN jamkerjashift jks ON jks.id = js.idjamkerjashift
                        LEFT JOIN (
                            SELECT
                                x.idpegawai,
                                x.idjamkerjashift,
                                SUM(IF(x.jumlah>=1,1,0)) as jumlah
                            FROM
                                (
                                SELECT
                                    ra.idpegawai,
                                    rah.idjamkerjashift,
                                    COUNT(*) as jumlah
                                FROM
                                    rekapabsen ra,
                                    rekapabsen_hasil rah
                                WHERE
                                    ra.id=rah.idrekapabsen AND
                                    '.$where.'
                                GROUP BY
                                    ra.idpegawai,
                                    ra.tanggal,
                                    rah.idjamkerjashift
                                ) x
                            GROUP BY
                                x.idpegawai,
                                x.idjamkerjashift
                        ) rah ON rah.idpegawai=js.idpegawai AND rah.idjamkerjashift=js.idjamkerjashift
                    WHERE
                        p.id=js.idpegawai '.
                        $batasan.
                        $whereAtribut.
                        $whereJamkerjaShift.'
                    GROUP BY p.id';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['nama']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['atribut']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['namashift']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['jumlah_jadwal']);
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['jumlah_masuk']);
                $objPHPExcel->getActiveSheet()->setCellValue('F' . $i, $row['jumlah_tdkmasuk']);

                $i++;
            }

            $arrWidth = array('', 30, 30, 100, 10, 10, 10);
            for ($j = 1; $j <= 6; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan shift');
            Utils::setFileNameExcel(trans('all.laporan') . '_' . trans('all.shift'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function rekapAbsenGabunganExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull, $jamkerjashift)
    {
        if(Utils::cekHakakses('laporanekspor','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $tanggalawal = str_replace('_', '/', $tanggalawal);
            $tanggalakhir = str_replace('_', '/', $tanggalakhir);

            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel);

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
//            if ($rowPE['logokiri'] == '' AND $rowPE['logokanan'] == '' AND $rowPE['header_1_teks'] == '' AND $rowPE['header_2_teks'] == '' AND $rowPE['header_3_teks'] == '' AND $rowPE['header_4_teks'] == '' AND $rowPE['header_5_teks'] == '') {
//                $b = 1; //b = baris
//            } else {
//                $b = 6;
//            }
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }

            //select atrbut variable
            $sql = 'SELECT id, md5(CONCAT(atribut,"_atributvariable",id)) as nama,atribut FROM atributvariable WHERE penting = "y" ORDER BY atribut';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $totalatributvariable = $stmt->rowCount();

            $i = 3;
            $a = 0;
            $arratirbutvariable = array();
            $arratirbutvariableheader = array();
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $hh = Utils::angkaToHuruf($i);
                $arratirbutvariableheader[$a] = $row['atribut'];
                $arratirbutvariable[$a] = $row['nama'];

                //lebar kolom
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                $i++;
                $a++;
            }

            //select atrbut penting
            $sql = 'SELECT id, md5(CONCAT(atribut,"_atributpenting",id)) as nama,atribut FROM atribut WHERE penting="y" ORDER BY atribut';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $totalatributpenting = $stmt->rowCount();

            $a = 0;
            $arratirbutpenting = array();
            $arratirbutpentingheader = array();
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $hh = Utils::angkaToHuruf($i);
                $arratirbutpentingheader[$a] = $row['atribut'];
                $arratirbutpenting[$a] = $row['nama'];

                //lebar kolom
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                $i++;
                $a++;
            }

            //get atributvariable query
            $atributvariable = Utils::getAtributVariableQuery('p.id');

            //get atributpenting query
            $atributpenting = Utils::getAtributPentingQuery('p.id');

            //huruf setelah atribut penting
            $h1 = Utils::angkaToHuruf($i);
            $h2 = Utils::angkaToHuruf($i + 1);
            $h3 = Utils::angkaToHuruf($i + 2);
            $h4 = Utils::angkaToHuruf($i + 3);
            $h5 = Utils::angkaToHuruf($i + 4);
            $h6 = Utils::angkaToHuruf($i + 5);
            $h7 = Utils::angkaToHuruf($i + 6);
            $h8 = Utils::angkaToHuruf($i + 7);
            $h9 = Utils::angkaToHuruf($i + 8);
            $h10 = Utils::angkaToHuruf($i + 9);
            $h11 = Utils::angkaToHuruf($i + 10);
            $h12 = Utils::angkaToHuruf($i + 11);
            $h13 = Utils::angkaToHuruf($i + 12);
            $h14 = Utils::angkaToHuruf($i + 13);
            $h15 = Utils::angkaToHuruf($i + 14);
            $h16 = Utils::angkaToHuruf($i + 15);
            $h17 = Utils::angkaToHuruf($i + 16);
            $h18 = Utils::angkaToHuruf($i + 17);

            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $batasan = ' AND p.id IN ' . $batasan;
            }

            $whereAtribut = '';
            if ($atribut != '') {
                $atributnilai = Utils::atributNilai($atribut);
                $whereAtribut .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            $whereJamkerja = '';
            if($jamkerjafull != ''){
                $jamkerjadetail = Utils::jamKerja($jamkerjafull);
                $whereJamkerja .= ' AND p.id IN (SELECT idpegawai FROM pegawaijamkerja WHERE idjamkerja IN (' . $jamkerjadetail . ') )';
            }

            $whereJamkerjaShift = '';
            if($jamkerjashift != ''){
                $jamkerjashiftdetail = Utils::jamKerja($jamkerjashift);
                $whereJamkerjaShift .= ' AND p.id IN (SELECT idpegawai FROM jadwalshift WHERE tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y") AND idjamkerjashift IN (' . $jamkerjashiftdetail . ') )';
            }

            $where = '';
            if(Session::has('laprekapabsen_tanggal')){
                $tahun = Session::get('lapkehadiran_tahun');
                $bulan = Session::get('lapkehadiran_bulan');
                $tanggal = Session::get('lapkehadiran_tanggal');
                $wherePeriode = '';
                if ($tanggal != ''){
                    for($i=0;$i<count($tanggal);$i++) {
                        $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                    }
                    if (strlen($wherePeriode)>0) {
                        $where .= ' AND ra.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                    }
                }
                else {
                    $where .= ' AND year(ra.tanggal)="'.$tahun.'" AND month(ra.tanggal)="'.$bulan.'"';
                }
            }else{
                $where = ' AND ra.tanggal BETWEEN STR_TO_DATE("'.$tanggalawal.'","%d/%m/%Y") AND STR_TO_DATE("'.$tanggalakhir.'","%d/%m/%Y")';
            }

            // jamkerjashift
            $sql = 'SELECT
                        p.nama as nama,
                        ' . $atributvariable . '
                        ' . $atributpenting . '
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk>=0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_normal,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="y" AND ra.selisihmasuk<0 AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori<>"d"),1,0)) as jumlah_masuk_terlambat,
                        SUM(IF(ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="d",1,0)) as jumlah_masuk_dispensasi,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="i",1,0)) as jumlah_tidakmasuk_ijin,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND ISNULL(ra.alasantidakmasukkategori)=false AND ra.alasantidakmasukkategori="s",1,0)) as jumlah_tidakmasuk_sakit,
                        SUM(IF(ra.jadwalmasukkerja="y" AND ra.masukkerja="t" AND (ISNULL(ra.alasantidakmasukkategori)=true OR ra.alasantidakmasukkategori="a"),1,0)) as jumlah_tidakmasuk_alpha,
                        ROUND(SUM(ra.lamakerja)/60,1) as waktu_lamakerja,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,1,0)) as jumlah_datangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk>0,ra.selisihmasuk,0))/60,1) as waktu_datangawal,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,1,0)) as jumlah_terlambat,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihmasuk<0,-1*ra.selisihmasuk,0))/60,1) as waktu_terlambat,
                        SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,1,0)) as jumlah_pulangawal,
                        ROUND(SUM(IF(ra.masukkerja="y" AND ra.selisihkeluar<0,-1*ra.selisihkeluar,0))/60,1) as waktu_pulangawal,
                        SUM(IF(ra.lamalembur>0,1,0)) as jumlah_lembur,
                        ROUND(SUM(ra.lamalembur)/60,1) as waktu_lembur,
                        SUM(ra.jumlahsesi) as totalshift
                    FROM
                        pegawai p,
                        rekapabsen ra
                    WHERE
                        p.id=ra.idpegawai AND
                        p.del = "t"
                        ' . $where . '
                        ' . $batasan . '
                        ' . $whereAtribut . '
                        ' . $whereJamkerja . '
                        ' . $whereJamkerjaShift . '
                    GROUP BY
                        p.id
                    ORDER BY
                        p.nama ASC';

            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            if ($stmt->rowCount() > 0) {

                $r = $b + 1;
                $r2 = $b + 3;
                $r3 = $b + 4;
                $r4 = $b + 5;
                $r5 = $b + 6;

                // set value kolom
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('B' . $r, trans('all.rekapitulasigabungan'))
                            ->setCellValue('B' . $r2, trans('all.nama'))
                            ->setCellValue($h1 . $r2, trans('all.jumlahkehadiran') . '(' . trans('all.kali') . ')')
                            ->setCellValue($h10 . $r2, trans('all.waktukehadiran') . '(' . trans('all.menit') . ')')
                            ->setCellValue($h1 . $r3, trans('all.masuk'))
                            ->setCellValue($h1 . $r4, trans('all.normal'))
                            ->setCellValue($h2 . $r4, trans('all.terlambat'))
                            ->setCellValue($h3 . $r4, trans('all.dispensasi'))
                            ->setCellValue($h4 . $r3, trans('all.totalhari'))
                            ->setCellValue($h5 . $r3, trans('all.totaljadwalshift'))
                            ->setCellValue($h6 . $r3, trans('all.tidakmasuk'))
                            ->setCellValue($h6 . $r4, trans('all.ijin'))
                            ->setCellValue($h7 . $r4, trans('all.sakit'))
                            ->setCellValue($h8 . $r4, trans('all.alpha'))
                            ->setCellValue($h9 . $r3, trans('all.totaltidakmasuk'))
                            ->setCellValue($h10 . $r3, trans('all.jamkerja'))
                            ->setCellValue($h11 . $r3, trans('all.datangawal'))
                            ->setCellValue($h13 . $r3, trans('all.terlambat'))
                            ->setCellValue($h15 . $r3, trans('all.pulangawal'))
                            ->setCellValue($h17 . $r3, trans('all.lembur'))
                            ->setCellValue($h11 . $r4, trans('all.jumlah'))
                            ->setCellValue($h12 . $r4, trans('all.durasi'))
                            ->setCellValue($h13 . $r4, trans('all.jumlah'))
                            ->setCellValue($h14 . $r4, trans('all.durasi'))
                            ->setCellValue($h15 . $r4, trans('all.jumlah'))
                            ->setCellValue($h16 . $r4, trans('all.durasi'))
                            ->setCellValue($h17 . $r4, trans('all.jumlah'))
                            ->setCellValue($h18 . $r4, trans('all.durasi'));

                //style atributvariable
                $z = 3; //karena dari c
                for ($j = 0; $j < $totalatributvariable; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                    //header
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutvariableheader[$j]);
                    $z++;
                }

                //style atributvariable
                for ($j = 0; $j < $totalatributpenting; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->mergeCells($hh . $r2 . ':' . $hh . $r4);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2 . ':' . $hh . $r4)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle($hh . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);

                    //header
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $r2, $arratirbutpentingheader[$j]);
                    $z++;
                }

                $objPHPExcel->getActiveSheet()->mergeCells('B' . $r2 . ':B' . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r2 . ':' . $h8 . $r2);
                $objPHPExcel->getActiveSheet()->mergeCells($h1 . $r3 . ':' . $h3 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h4 . $r3 . ':' . $h4 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h5 . $r3 . ':' . $h5 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h6 . $r3 . ':' . $h8 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h9 . $r3 . ':' . $h9 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h10 . $r3 . ':' . $h10 . $r4);
                $objPHPExcel->getActiveSheet()->mergeCells($h11 . $r3 . ':' . $h12 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h13 . $r3 . ':' . $h14 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h15 . $r3 . ':' . $h16 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h17 . $r3 . ':' . $h18 . $r3);
                $objPHPExcel->getActiveSheet()->mergeCells($h10 . $r2 . ':' . $h18 . $r2);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2 . ':B' . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2 . ':' . $h8 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3 . ':' . $h3 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3 . ':' . $h4 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3 . ':' . $h5 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3 . ':' . $h8 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r2 . ':' . $h18 . $r2)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r3 . ':' . $h9 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3 . ':' . $h10 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3 . ':' . $h11 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3 . ':' . $h12 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3 . ':' . $h13 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r3 . ':' . $h14 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3 . ':' . $h15 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r3 . ':' . $h16 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3 . ':' . $h17 . $r3)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r3 . ':' . $h18 . $r3)->applyFromArray($styleArray);

                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->applyFromArray($styleArray);

                for ($j = 2; $j <= 20 + $totalatributvariable + $totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $r5)->applyFromArray($styleArray);
                }

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h1 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h2 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h3 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h6 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h7 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h8 . $r4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r2)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h10 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h11 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h12 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h13 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h14 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h15 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h16 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h17 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($h18 . $r4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(40);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(12);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(14);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(10);
                $objPHPExcel->getActiveSheet()->getColumnDimension($h9)->setWidth(12);

                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getAlignment()->setWrapText(true);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r3)->getAlignment()->setWrapText(true);

                $objPHPExcel->getActiveSheet()->getStyle('B' . $r)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h4 . $r3)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h5 . $r3)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($h9 . $r3)->getFont()->setBold(true);

                $i = $b + 6;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['jumlah_masuk_normal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['jumlah_masuk_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['jumlah_masuk_dispensasi']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['jumlah_masuk_normal'] + $row['jumlah_masuk_terlambat'] + $row['jumlah_masuk_dispensasi']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $row['totalshift']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['jumlah_tidakmasuk_ijin']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $row['jumlah_tidakmasuk_sakit']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $row['jumlah_tidakmasuk_alpha']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h9 . $i, $row['jumlah_tidakmasuk_ijin'] + $row['jumlah_tidakmasuk_sakit'] + $row['jumlah_tidakmasuk_alpha']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h10 . $i, $row['waktu_lamakerja']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h11 . $i, $row['jumlah_datangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h12 . $i, $row['waktu_datangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h13 . $i, $row['jumlah_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h14 . $i, $row['waktu_terlambat']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h15 . $i, $row['jumlah_pulangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h16 . $i, $row['waktu_pulangawal']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h17 . $i, $row['jumlah_lembur']);
                    $objPHPExcel->getActiveSheet()->setCellValue($h18 . $i, $row['waktu_lembur']);

                    //atributvariable
                    $z = 3;
                    $a = 0;
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->setCellValueExplicit($hh . $i, $row[$arratirbutvariable[$a]], PHPExcel_Cell_DataType::TYPE_STRING);

                        $z++;
                        $a++;
                    }

                    //atributpenting
                    $a = 0;
                    for ($j = 0; $j < $totalatributpenting; $j++) {
                        $hh = Utils::angkaToHuruf($z);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $i, $row[$arratirbutpenting[$a]]);

                        $z++;
                        $a++;
                    }

                    $objPHPExcel->getActiveSheet()->getStyle($h4 . $i)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h5 . $i)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($h9 . $i)->getFont()->setBold(true);

                    for ($o = 2; $o < 21 + $totalatributvariable + $totalatributpenting; $o++) {
                        $abjad = Utils::angkaToHuruf($o);
                        $objPHPExcel->getActiveSheet()->getStyle($abjad . $i)->applyFromArray($styleArray);
                    }

                    $i++;
                }
            }

            $heightgambar = 99;
            $widthgambar = 99;

            $cg = Utils::angkaToHuruf(21 + $totalatributvariable + $totalatributpenting) . '1';
            $cg1 = Utils::angkaToHuruf(21 + $totalatributvariable + $totalatributpenting);

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                $l = $i - 1;
            } else {
                $l = $i + 1;
                Utils::footerExcel($objPHPExcel,'kiri','B','B',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'tengah','F','H',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'kanan','L',$cg1,$l,$rowPE);
                $l = $l+7;
            }

            // password
            Utils::passwordExcel($objPHPExcel);

            if ($b != 1) {
                Utils::header5baris($objPHPExcel,$cg1,$rowPE);
            }

            //merge dan stylegaris range keterangan tanggal setelah header
            $objPHPExcel->getActiveSheet()->mergeCells('B' . $b . ':' . $cg1 . $b);
            // value
            if(Session::has('laprekapabsen_keterangan')){
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $b, trans('all.menampilkandata') . ' ' . Session::get('laprekapabsen_keterangan'));
            } else {
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $b, trans('all.menampilkandatatanggal') . ' ' . $tanggalawal . ' - ' . $tanggalakhir);
            }
            // center text
            $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            //font size
            $objPHPExcel->getActiveSheet()->getStyle('B' . $b)->getFont()->setSize(14);

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $l + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('B' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('B' . $ft)->getFont()->setItalic(true);

            if ($rowPE['logokiri'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
            }

            if ($rowPE['logokanan'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg);
            }

            Utils::insertLogUser('Ekspor laporan rekapitulasi gabungan');
            Utils::setFileNameExcel(trans('all.rekapitulasigabungan'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function rekapAbsenBulananExcel($tanggalawal, $tanggalakhir, $atribut, $jamkerjafull , $jamkerjashift)
    {
        if(Utils::cekHakakses('laporanekspor','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $tanggalawal_str = strtotime(Utils::convertDmy2Ymd($tanggalawal));
            $tanggalakhir_str = strtotime(Utils::convertDmy2Ymd($tanggalakhir));
            $jumlahhari_diff = $tanggalakhir_str - $tanggalawal_str;
            $selisihhari = round($jumlahhari_diff / (60 * 60 * 24)) + 1;

            if($selisihhari > 31){
                return redirect('laporan/rekapabsen')->with('message', trans('all.selisihharimaksimal31'));
            }

            if(Session::get('laprekapabsen_filtermode') == 'berdasarkantanggal'){
                $tahun = substr(Session::get('laprekapabsen_tahun'), 2);
                $bulan = strlen(Session::get('laprekapabsen_bulan')) == 1 ? '0'.Session::get('laprekapabsen_bulan') : Session::get('laprekapabsen_bulan');
                $periode = $tahun.$bulan;
                //return $periode;
            }else{
                //return $tanggalakhir;
                $tahun = substr($tanggalakhir, 8);
                $bulan = substr($tanggalakhir, 3, 2);
                $periode = $tahun.$bulan;
                //return $tanggalawal.' '.$tanggalakhir.' '.substr($tanggalakhir, 8).' '.substr($tanggalakhir, 3, 2);
            }
            if($periode != ''){
                $totalhari = $selisihhari;
                $atributnilai = $atribut != '' ? Utils::atributNilai($atribut) : '';

                //panggil procedure
                $sql = 'CALL laporanabsenpertanggal(:tanggalawal,:tanggalakhir,:atribut,:bahasa)';
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':tanggalawal', Utils::convertDmy2Ymd($tanggalawal));
                $stmt->bindValue(':tanggalakhir', Utils::convertDmy2Ymd($tanggalakhir));
                $stmt->bindValue(':atribut', $atributnilai);
                $stmt->bindValue(':bahasa', Session::get('conf_bahasaperusahaan'));
                $stmt->execute();

                $objPHPExcel = new PHPExcel();

                //set css kolom
                $styleArray = array(
                    'borders' => array(
                        'outline' => array(
                            'style' => PHPExcel_Style_Border::BORDER_THIN,
                            'color' => array('argb' => '000000'),
                        ),
                    ),
                );

                Utils::setPropertiesExcel($objPHPExcel);

                $sql = 'SELECT * FROM parameterekspor';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
//                if ($rowPE['logokiri'] == '' AND $rowPE['logokanan'] == '' AND $rowPE['header_1_teks'] == '' AND $rowPE['header_2_teks'] == '' AND $rowPE['header_3_teks'] == '' AND $rowPE['header_4_teks'] == '' AND $rowPE['header_5_teks'] == '') {
//                    $b = 1; //b = baris
//                } else {
//                    $b = 6;
//                }
                if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                    $b = 6; //b = baris
                } else {
                    $b = 1;
                }

                //kolom header
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A'.$b, trans('all.nomor_singkat'))
                            ->setCellValue('B'.$b, trans('all.nama'));

                $objPHPExcel->getActiveSheet()->mergeCells('A'.$b.':A'.($b+1));
                $objPHPExcel->getActiveSheet()->getStyle('A'.$b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('A'.$b)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('A'.$b)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('A'.($b+1))->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->mergeCells('B'.$b.':B'.($b+1));
                $objPHPExcel->getActiveSheet()->getStyle('B'.$b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle('B'.$b)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

                //kolom header atribut
                $sql = 'SELECT * FROM __atribut ORDER BY atribut ASC, id ASC';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $totalatribut = $stmt->rowCount();
                $totalkolomatribut = $totalatribut > 0 ? $totalatribut : 0;
                $j=3; //karena dimulai dari C(huruf ke 3)

                while($row = $stmt->fetch(PDO::FETCH_ASSOC)){
                    $cellheader = Utils::angkaToHuruf($j);
                    Utils::customizeColumn($objPHPExcel,$cellheader,$b,$row['atribut'],20,true,true,$styleArray);
                    $objPHPExcel->getActiveSheet()->mergeCells($cellheader.$b.':'.$cellheader.($b+1));
                    $objPHPExcel->getActiveSheet()->getStyle($cellheader.($b+1))->applyFromArray($styleArray);
                    $j++;
                }

                $cellheaderstart = Utils::angkaToHuruf($totalatribut+3);
                $objPHPExcel->getActiveSheet()->setCellValue($cellheaderstart.$b, Utils::tanggalCantikDariSampai(Utils::convertDmy2Ymd($tanggalawal),Utils::convertDmy2Ymd($tanggalakhir)));
                //kolom header tanggal
                for($i=0;$i<=$totalhari;$i++){
                    $tgl = date('d', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$i.' day'));
                    $celltglheader = Utils::angkaToHuruf($i+$totalatribut+3); // dimulai dari huruf setelah atribut
                    Utils::customizeColumn($objPHPExcel,$celltglheader,$b+1,$tgl,3,true,false,$styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($celltglheader.$b)->applyFromArray($styleArray);
                }
                $cellheaderend = Utils::angkaToHuruf($totalhari+$totalatribut+2);
                $objPHPExcel->getActiveSheet()->mergeCells($cellheaderstart.$b.':'.$cellheaderend.$b); //merge atasnya tanggal

                //kolomheader setelah tanggal
                $celltglheader = Utils::angkaToHuruf($i+$totalkolomatribut+2);
                Utils::customizeColumn($objPHPExcel,$celltglheader,$b,trans('all.masuk'),10,true,true,$styleArray);
                $objPHPExcel->getActiveSheet()->mergeCells($celltglheader.$b.':'.$celltglheader.($b+1));
                $objPHPExcel->getActiveSheet()->getStyle($celltglheader.($b+1))->applyFromArray($styleArray);
                $celltglheader = Utils::angkaToHuruf($i+$totalkolomatribut+3);
                Utils::customizeColumn($objPHPExcel,$celltglheader,$b,trans('all.shift'),12,true,true,$styleArray);
                $objPHPExcel->getActiveSheet()->mergeCells($celltglheader.$b.':'.$celltglheader.($b+1));
                $objPHPExcel->getActiveSheet()->getStyle($celltglheader.($b+1))->applyFromArray($styleArray);
                $celltglheader = Utils::angkaToHuruf($i+$totalkolomatribut+4);
                Utils::customizeColumn($objPHPExcel,$celltglheader,$b,trans('all.lamakerja'),10,true,true,$styleArray);
                $objPHPExcel->getActiveSheet()->mergeCells($celltglheader.$b.':'.$celltglheader.($b+1));
                $objPHPExcel->getActiveSheet()->getStyle($celltglheader.($b+1))->applyFromArray($styleArray);
                $celltglheader = Utils::angkaToHuruf($i+$totalkolomatribut+5);
                $celltglheader1 = Utils::angkaToHuruf($i+$totalkolomatribut+6);
                $objPHPExcel->getActiveSheet()->setCellValue($celltglheader.$b, 'TTD');
                $objPHPExcel->getActiveSheet()->getStyle($celltglheader.$b)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->mergeCells($celltglheader.$b.':'.$celltglheader1.($b+1));
                $objPHPExcel->getActiveSheet()->getStyle($celltglheader.$b.':'.$celltglheader1.$b)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($celltglheader . $b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($celltglheader . $b)->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
                $objPHPExcel->getActiveSheet()->getStyle($celltglheader.($b+1))->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle($celltglheader1.($b+1))->applyFromArray($styleArray);

                //jika ada header custom(parameter ekspor)
                if ($b != 1) {
                    Utils::header5baris($objPHPExcel,$celltglheader1,$rowPE);
                }

                //logo
                $heightgambar = 99;
                $widthgambar = 99;
                $cellterakhir = $celltglheader1 . '1';
                if ($rowPE['logokiri'] != "") {
                    $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                    Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
                }

                if ($rowPE['logokanan'] != "") {
                    $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                    Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cellterakhir);
                }

                $sql = 'SELECT * FROM temp_laporanabsenpertanggal ORDER BY idpegawai';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();

                $i = 2 + $b;
                $no = 1;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $no);
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                    $objPHPExcel->getActiveSheet()->getStyle('A'.$i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle('B'.$i)->applyFromArray($styleArray);

                    //atribut
                    if($totalatribut > 0){
                        for($j=1;$j<=$totalatribut;$j++) {
                            $celltgl = Utils::angkaToHuruf($j+2);
                            $objPHPExcel->getActiveSheet()->setCellValue($celltgl . $i, $row['atribut_' . $j]);
                            $objPHPExcel->getActiveSheet()->getStyle($celltgl.$i)->applyFromArray($styleArray);
                        }
                    }

                    //value absensi tanggal
                    for($j=0;$j<$totalhari;$j++){
                        $date = date('Ymd', strtotime(date('Y-m-d',$tanggalawal_str) . ' +'.$j.' day'));
                        if($row['keterangan_'.$date] == '.'){
                            $isi = 'V';
                        }else if($row['keterangan_'.$date] == '*'){
                            $isi = 'T';
                        }else if($row['keterangan_'.$date] == null){
                            $isi = 'A';
                        }else{
                            $isi = $row['keterangan_'.$date];
                        }
                        $celltgl = Utils::angkaToHuruf($j+$totalkolomatribut+3);
                        $objPHPExcel->getActiveSheet()->setCellValue($celltgl.$i, $isi);
                        $objPHPExcel->getActiveSheet()->getStyle($celltgl.$i)->applyFromArray($styleArray);
                        if($isi == '!'){
                            $objPHPExcel->getActiveSheet()->getStyle($celltgl.$i)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB('FFFF0000');
                        }
                    }

                    $celltgl = Utils::angkaToHuruf($j+$totalkolomatribut+3);
                    $objPHPExcel->getActiveSheet()->setCellValue($celltgl.$i, $row['jumlahmasuk']);
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl.$i)->applyFromArray($styleArray);
                    $celltgl = Utils::angkaToHuruf($j+$totalkolomatribut+4);
                    $objPHPExcel->getActiveSheet()->setCellValue($celltgl.$i, $row['jumlahmasukshift']);
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl.$i)->applyFromArray($styleArray);
                    $celltgl = Utils::angkaToHuruf($j+$totalkolomatribut+5);
                    //$objPHPExcel->getActiveSheet()->setCellValue($celltgl.$i, Utils::sec2pretty($row['lamakerja']));
                    $objPHPExcel->getActiveSheet()->setCellValue($celltgl.$i, $row['lamakerja_hhmm']);
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl.$i)->applyFromArray($styleArray);
                    if($no % 2 != 0) {
                        $celltgl = Utils::angkaToHuruf($j+$totalkolomatribut+6);
                    }
                    else {
                        $celltgl = Utils::angkaToHuruf($j+$totalkolomatribut+7);
                    }
                    $objPHPExcel->getActiveSheet()->setCellValue($celltgl.$i, $no.". ");
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl.$i)->applyFromArray($styleArray);

                    //set boder untuk kolom ttd
                    $celltgl = Utils::angkaToHuruf($j+$totalkolomatribut+6);
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl.$i)->applyFromArray($styleArray);
                    $celltgl = Utils::angkaToHuruf($j+$totalkolomatribut+7);
                    $objPHPExcel->getActiveSheet()->getStyle($celltgl.$i)->applyFromArray($styleArray);

                    $i++;
                    $no++;
                }

                //footer
                $iterakhir = $i;
                $fkhuruf = Utils::angkaToHuruf($j+$totalkolomatribut+4);
                $lhuruf = Utils::angkaToHuruf($j+$totalkolomatribut+4 + 2);
                if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                    $l = $iterakhir + 1;
                } else {
                    $l = $iterakhir + 1;
                    Utils::footerExcel($objPHPExcel,'kiri','A','B',$l,$rowPE);
                    Utils::footerExcel($objPHPExcel,'tengah','K','T',$l,$rowPE);
                    Utils::footerExcel($objPHPExcel,'kanan',$fkhuruf,$lhuruf,$l,$rowPE);
                    $l = $l+7;
                }

                //keterangan
                $i = $l;
                $il = $i + 1;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il, trans('all.keterangan') . ' : ');
                $il = $i + 2;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il, 'V : ' . trans('all.masuk'));
                $il = $i + 3;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il, 'A : ' . trans('all.tidakmasuk'));
                $il = $i + 4;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il, 'T : ' . trans('all.terlambat'));
                $il = $i + 5;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il, '- : ' . trans('all.tidakadajadwal'));
                $il = $i + 6;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il, 's : ' . trans('all.sakit'));
                $il = $i + 7;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il, 'i : ' . trans('all.ijin'));
                $il = $i + 8;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il, 'd : ' . trans('all.dispensasi'));
                $il = $i + 9;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il, 'a : ' . trans('all.tidakmasuk'));
                $il = $i + 10;
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $il, 'c : ' . trans('all.cuti'));

                $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(30);

                $objPHPExcel->getActiveSheet()->getStyle('A' . $b)->getFont()->setBold(true);

                //set width,bold,border untuk header yg fix
                $arrWidth = array('', 5, 50);
                for ($j = 1; $j <= 2; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf. $b)->applyFromArray($styleArray);
                }

                // password
                Utils::passwordExcel($objPHPExcel);
                Utils::insertLogUser('Ekspor laporan rekpitulasi bulanan');
                Utils::setFileNameExcel(trans('all.rekapitulasibulanan'));
                $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
                $writer->save('php://output');
            }
        }
    }

    public function riwayatPenggunaWeb()
    {
        if(Utils::cekHakakses('riwayatpengguna','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }
            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();
            Utils::insertLogUser('akses menu log pengguna');
            return view('laporan/riwayat/penggunaweb/index', ['valuetglawalakhir' => $valuetglawalakhir, 'menu' => 'riwayatpenggunaweb']);
        } else {
            return redirect('/');
        }
    }

    public function submitRiwayatPenggunaWeb(Request $request)
    {

        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }
        if(Utils::cekDateTime($request->tanggalawal) && Utils::cekDateTime($request->tanggalakhir)) {
            Session::set('lapriwayatpenggunaweb_tanggalawal', $request->tanggalawal);
            Session::set('lapriwayatpenggunaweb_tanggalakhir', $request->tanggalakhir);
        }
        return redirect('laporan/riwayat/penggunaweb');
    }

    public function riwayatPenggunaWebData(Request $request)
    {
        if(Utils::cekHakakses('riwayatpengguna','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }
            $pdo = DB::getPdo();
            $where = ' AND idperusahaan = :idperusahaan';
            if(Session::has('lapriwayatpenggunaweb_tanggalawal') && Session::has('lapriwayatpenggunaweb_tanggalakhir')) {
                $where .= ' AND tanggal >= CONCAT(STR_TO_DATE(:tanggalawal,"%d/%m/%Y")," 00:00:00") AND tanggal <= CONCAT(STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")," 23:59:59") ';
            }
            if(Session::get('superuser_perusahaan') != '1'){
                $where .= ' AND superuser = ""';
            }
            $columns = array('tanggal','user','emailuser','method','keterangan');
            $table = '(SELECT l.id,l.waktu as tanggal,IFNULL(u.nama,"") as `user`,u.email as emailuser,l.method,l.keterangan,l.superuser,l.idperusahaan FROM _loguser l LEFT JOIN `user` u ON u.id=l.iduser) x';
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
            if(Session::has('lapriwayatpenggunaweb_tanggalawal') && Session::has('lapriwayatpenggunaweb_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal', Session::get('lapriwayatpenggunaweb_tanggalawal'));
                $stmt->bindValue(':tanggalakhir', Session::get('lapriwayatpenggunaweb_tanggalakhir'));
            }
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalData = $row['total'];
            $totalFiltered = $totalData;
            $limit = $request->input('length');
            $start = $request->input('start');
            $orderColumn = $columns[$request->input('order.0.column')];
            $orderAction = $request->input('order.0.dir');
            $orderBy = $orderColumn.' '.$orderAction;

            if(!empty($request->input('search.value'))){
                $search = $request->input('search.value');
                $where .= Utils::searchDatatableQuery($columns);
                $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
                if(Session::has('lapriwayatpenggunaweb_tanggalawal') && Session::has('lapriwayatpenggunaweb_tanggalakhir')) {
                    $stmt->bindValue(':tanggalawal', Session::get('lapriwayatpenggunaweb_tanggalawal'));
                    $stmt->bindValue(':tanggalakhir', Session::get('lapriwayatpenggunaweb_tanggalakhir'));
                }
                for($i=0;$i<count($columns);$i++) {
                    if($columns[$i] != '') {
                        $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                    }
                }
                $stmt->execute();
                $row = $stmt->fetch(PDO::FETCH_ASSOC);
                $totalFiltered = $row['total'];
            }

            $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
            if(Session::has('lapriwayatpenggunaweb_tanggalawal') && Session::has('lapriwayatpenggunaweb_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal', Session::get('lapriwayatpenggunaweb_tanggalawal'));
                $stmt->bindValue(':tanggalakhir', Session::get('lapriwayatpenggunaweb_tanggalakhir'));
            }
            if(!empty($request->input('search.value'))) {
                for($i=0;$i<count($columns);$i++) {
                    if($columns[$i] != '') {
                        $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                    }
                }
            }
            $stmt->execute();
            $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

            $data = array();
            if(!empty($originaldata)){
                foreach($originaldata as $key){
                    $tempdata['tanggal'] = $key['tanggal'];
                    for($i=1;$i<count($columns);$i++){
                        if($columns[$i] == 'method'){
                            $tempdata[$columns[$i]] = $key[$columns[$i]] != 'WEB' ? 'MOBILE' : 'WEB';
                        }else {
                            $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                        }
                    }
                    $data[] = $tempdata;
                }
            }
            return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
        }
        return '';
    }

    public function excelRiwayatpenggunaWeb()
    {
        if(Utils::cekHakakses('riwayatpengguna','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel,trans('all.riwayatpeggunaweb'));

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }

            $bt = $b; //variabel b tanggal dari sampai
            $b = $b + 1;
            //set value kolom
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . $b, trans('all.tanggal'))
                        ->setCellValue('B' . $b, trans('all.pengguna'))
                        ->setCellValue('C' . $b, trans('all.email'))
                        ->setCellValue('D' . $b, trans('all.platform'))
                        ->setCellValue('E' . $b, trans('all.keterangan'));

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $pdo = DB::getPdo();
            $where = '';
            if(Session::has('lapriwayatpenggunaweb_tanggalawal') && Session::has('lapriwayatpenggunaweb_tanggalakhir')) {
                $where .= ' AND l.waktu >= CONCAT(STR_TO_DATE(:tanggalawal,"%d/%m/%Y")," 00:00:00") AND l.waktu <= CONCAT(STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")," 23:59:59") ';
            }
            if(Session::get('superuser_perusahaan') != '1'){
                $where .= ' AND l.superuser = ""';
            }
            $sql = 'SELECT
                        (DATEDIFF(l.waktu,"1900-01-01")+2)+ROUND(time_to_sec(timediff(DATE_FORMAT(l.waktu,"%T"),"00:00:00"))/86400,9) as tanggal,
                        IFNULL(u.nama,"") as `user`,
                        u.email as emailuser,
                        l.method,
                        -- IF(l.method="WEB", l.keterangan, acakstring(CONCAT("[",l.method,"] ",l.path," ",l.body))) as keterangan
                        l.keterangan
                    FROM
                         _loguser l
                         LEFT JOIN user u ON u.id=l.iduser
                    WHERE
                        l.idperusahaan = :idperusahaan
                        '.$where.'
                    ORDER BY
                        l.waktu DESC,
                        l.id DESC';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
            if(Session::has('lapriwayatpenggunaweb_tanggalawal') && Session::has('lapriwayatpenggunaweb_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal', Session::get('lapriwayatpenggunaweb_tanggalawal'));
                $stmt->bindValue(':tanggalakhir', Session::get('lapriwayatpenggunaweb_tanggalakhir'));
            }
            $stmt->execute();
            $i = $b + 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['user']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['emailuser']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['method'] != 'WEB' ? 'MOBILE' : 'WEB');
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $i, $row['keterangan']);
                // format
                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY HH:MM:SS');

                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('B' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('C' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('D' . $i)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('E' . $i)->applyFromArray($styleArray);

                $i++;
            }

            $arrWidth = array('', 20, 30, 15, 15, 50);
            for ($j = 1; $j <= 5; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->applyFromArray($styleArray);;
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            $heightgambar = 99;
            $widthgambar = 99;

            $cg = Utils::angkaToHuruf(6) . '1';

            // style garis
            $end_i = $i - 1;
            $objPHPExcel->getActiveSheet()->getStyle('A1:D' . $end_i)->applyFromArray($styleArray);

            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                $l = $i - 1;
            } else {
                $l = $i + 1;
                Utils::footerExcel($objPHPExcel,'kiri','A','A',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'tengah','B','C',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'kanan','D','D',$l,$rowPE);
            }

            // password
            Utils::passwordExcel($objPHPExcel);

            if ($b != 1) {
                // header 5 baris
                for ($i = 1; $i <= 5; $i++) {
                    // merge
                    $objPHPExcel->getActiveSheet()->mergeCells('A' . $i . ':E' . $i);

                    // value
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $rowPE['header_' . $i . '_teks']);

                    //font style
                    if ($rowPE['header_' . $i . '_fontstyle'] == 'bold') {
                        $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getFont()->setBold(true);
                    } else if ($rowPE['header_' . $i . '_fontstyle'] == 'italic') {
                        $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getFont()->setItalic(true);
                    } else if ($rowPE['header_' . $i . '_fontstyle'] == 'underline') {
                        $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getFont()->setUnderline(true);
                    }

                    // center text
                    $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                }
            }

            if (Session::has('lapriwayatpengguna_tanggalawal')) {
                //merge dan stylegaris range keterangan tanggal setelah header
                $objPHPExcel->getActiveSheet()->mergeCells('A' . $bt . ':D' . $bt);
                // value
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $bt, trans('all.menampilkandatatanggal') . ' ' . Session::get("lapriwayatpengguna_tanggalawal") . ' - ' . Session::get("lapriwayatpengguna_tanggalakhir"));
                // center text
                $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                //font size
                $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getFont()->setSize(14);
            }

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $l + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('A' . $ft)->getFont()->setItalic(true);

            if ($rowPE['logokiri'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                if (file_exists($pathlogo)) {
                    $raw = Utils::decrypt($pathlogo);
                    $im = imagecreatefromstring($raw);

                    $objDrawing = new PHPExcel_Worksheet_MemoryDrawing();
                    $objDrawing->setName(trans('all.logo'));
                    $objDrawing->setDescription('Logo Sekolah');
                    $objDrawing->setImageResource($im);
                    $objDrawing->setRenderingFunction(PHPExcel_Worksheet_MemoryDrawing::RENDERING_JPEG);
                    $objDrawing->setMimeType(PHPExcel_Worksheet_MemoryDrawing::MIMETYPE_DEFAULT);
                    $objDrawing->setHeight($heightgambar);
                    $objDrawing->setWidth($widthgambar);
                    $objDrawing->setCoordinates('A1');
                    $objDrawing->setOffsetX(0);
                    $objDrawing->setOffsetY(0);
                    $objDrawing->setWorksheet($objPHPExcel->getActiveSheet());
                }
            }

            if ($rowPE['logokanan'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                if (file_exists($pathlogo)) {
                    $raw = Utils::decrypt($pathlogo);
                    $im = imagecreatefromstring($raw);

                    $objDrawing = new PHPExcel_Worksheet_MemoryDrawing();
                    $objDrawing->setName(trans('all.logo'));
                    $objDrawing->setDescription('Logo Sekolah');
                    $objDrawing->setImageResource($im);
                    $objDrawing->setRenderingFunction(PHPExcel_Worksheet_MemoryDrawing::RENDERING_JPEG);
                    $objDrawing->setMimeType(PHPExcel_Worksheet_MemoryDrawing::MIMETYPE_DEFAULT);
                    $objDrawing->setHeight($heightgambar);
                    $objDrawing->setWidth($widthgambar);
                    $objDrawing->setCoordinates($cg);
                    $objDrawing->setOffsetX(-110);
                    $objDrawing->setOffsetY(0);
                    $objDrawing->setWorksheet($objPHPExcel->getActiveSheet());
                }
            }

            Utils::insertLogUser('Ekspor riwayat penguna web');
            Utils::setFileNameExcel(trans('all.riwayatpenggunaweb'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
        return '';
    }

    public function riwayatPegawai()
    {
        if(Utils::cekHakakses('riwayatpegawai','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }

            //atribut variable
            $atributvariable = Utils::getAtributVariable();

            //atribut penting
            $atributpenting = Utils::getAtributPenting();
            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();
            Utils::insertLogUser('akses menu riwayat pegawai');
            return view('laporan/riwayat/pegawai/index', ['valuetglawalakhir' => $valuetglawalakhir, 'atributvariable' => $atributvariable, 'atributpenting' => $atributpenting, 'menu' => 'riwayatpegawai']);
        }
        return '';
    }

    public function submitRiwayatPegawai(Request $request)
    {
        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }
        if(Utils::cekDateTime($request->tanggalawal) && Utils::cekDateTime($request->tanggalakhir)) {
            Session::set('lapriwayatpegawai_tanggalawal', $request->tanggalawal);
            Session::set('lapriwayatpegawai_tanggalakhir', $request->tanggalakhir);
        }
        return redirect('laporan/riwayat/pegawai');
    }

    public function riwayatPegawaiData(Request $request)
    {
        if(Utils::cekHakakses('riwayatpegawai','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $where = '';
            if (Session::has('lapriwayatpegawai_tanggalawal')) {
                $where .= ' AND waktu >= CONCAT(STR_TO_DATE("' . Session::get("lapriwayatpegawai_tanggalawal") . '","%d/%m/%Y")," 00:00:00") AND waktu <= CONCAT(STR_TO_DATE("' . Session::get("lapriwayatpegawai_tanggalakhir") . '","%d/%m/%Y")," 23:59:59") ';
            }
            $whereAtribut = '';
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $whereAtribut .= ' AND id IN ' . $batasan;
                $where .= ' AND p.id IN ' . $batasan;
            }
            if ($whereAtribut != '') {
                $whereAtribut = ' AND ' . substr($whereAtribut, 4);
                $where .= ' AND ' . substr($whereAtribut, 4);
            }
            //atribut variable
            $arr_atributvariable = Utils::getAtributVariable();
            $arr_namaatributvariable = [];
            foreach($arr_atributvariable as $key){
                $arr_namaatributvariable[] = $key->nama;
            }
            $atributvariable = count($arr_namaatributvariable) > 0 ? implode(',',$arr_namaatributvariable).',' : '';
            //atribut penting
            $arr_atributpenting = Utils::getAtributPenting();
            $arr_namaatributpenting = [];
            foreach($arr_atributpenting as $key){
                $arr_namaatributpenting[] = $key->nama;
            }
            $atributpenting = count($arr_namaatributpenting) > 0 ? implode(',',$arr_namaatributpenting).',' : '';
            $stringcolumn = 'tanggal,pegawai,'.$atributvariable.$atributpenting.'keterangan';
            $columns = explode(',',$stringcolumn);
            //get atributvariable query
            $atributvariable = Utils::getAtributVariableQuery('p.id');
            //get atributpenting query
            $atributpenting = Utils::getAtributPentingQuery('p.id');
            $table = '(
                        SELECT
                            l.id,
                            l.waktu,
                            l.waktu as tanggal,
                            p.id as idpegawai,
                            p.nama as pegawai,
                            ' . $atributvariable . '
                            ' . $atributpenting . '
                            l.keterangan
                        FROM
                            _logpegawai l
                            LEFT JOIN pegawai p ON p.id=l.idpegawai
                    ) x';
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalData = $row['total'];
            $totalFiltered = $totalData;
            $limit = $request->input('length');
            $start = $request->input('start');
            $orderColumn = $columns[$request->input('order.0.column')];
            $orderAction = $request->input('order.0.dir');
            $orderBy = $orderColumn.' '.$orderAction;

            if(!empty($request->input('search.value'))){
                $search = $request->input('search.value');
                $where .= Utils::searchDatatableQuery($columns);
                $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
                $stmt = $pdo->prepare($sql);
                for($i=0;$i<count($columns);$i++) {
                    if($columns[$i] != '') {
                        $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                    }
                }
                $stmt->execute();
                $row = $stmt->fetch(PDO::FETCH_ASSOC);
                $totalFiltered = $row['total'];
            }

            $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
            $stmt = $pdo->prepare($sql);
            if(!empty($request->input('search.value'))) {
                for($i=0;$i<count($columns);$i++) {
                    if($columns[$i] != '') {
                        $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                    }
                }
            }
            $stmt->execute();
            $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

            $data = array();
            if(!empty($originaldata)){
                foreach($originaldata as $key){
                    $tempdata['tanggal'] = $key['tanggal'];
                    for($i=1;$i<count($columns);$i++){
                        if($columns[$i] == 'pegawai'){
                            $tempdata[$columns[$i]] = '<span class=detailpegawai onclick=detailpegawai('.$key['idpegawai'].') style=cursor:pointer>'.htmlentities($key['pegawai']).'</span>';
                        }else{
                            $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                        }
                    }
                    $data[] = $tempdata;
                }
            }
            return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
        }
        return '';
    }

    public function excelRiwayatPegawai()
    {
        if(Utils::cekHakakses('riwayatpegawai','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel,trans('all.riwayatpegawai'));

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
//            if ($rowPE['logokiri'] == '' AND $rowPE['logokanan'] == '' AND $rowPE['header_1_teks'] == '' AND $rowPE['header_2_teks'] == '' AND $rowPE['header_3_teks'] == '' AND $rowPE['header_4_teks'] == '' AND $rowPE['header_5_teks'] == '') {
//                $b = 1; //b = baris
//            } else {
//                $b = 6;
//            }
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }

            $bt = $b; //variabel b tanggal dari sampai

            $b = $b + 1;

            //select atrbut variable
            $atributvariable = '';
            $sql = 'SELECT id, md5(CONCAT(atribut,"_atributvariable",id)) as nama,atribut FROM atributvariable WHERE penting = "y" ORDER BY atribut';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $totalatributvariable = $stmt->rowCount();

            $i = 3;
            $a = 0;
            $arratirbutvariable = array();
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $hh = Utils::angkaToHuruf($i);
                $atributvariable = $atributvariable . 'getatributvariablepegawai(p.id, ' . $row['id'] . ') as ' . $row['nama'] . ',';
                $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $row['atribut']);

                $arratirbutvariable[$a] = $row['nama'];

                //lebar kolom
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                $i++;
                $a++;
            }

            //select atrbut penting
            $atributpenting = '';
            $sql = 'SELECT id, md5(CONCAT(atribut,"_atributpenting",id)) as nama,atribut FROM atribut WHERE penting="y" ORDER BY atribut';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $totalatributpenting = $stmt->rowCount();

            //get atributvariable query
            $atributvariable = Utils::getAtributVariableQuery('p.id');

            //get atributpenting query
            $atributpenting = Utils::getAtributPentingQuery('p.id');

            //set value kolom
            $h1 = Utils::angkaToHuruf($i);
            $h2 = Utils::angkaToHuruf($i + 1);
            $h3 = Utils::angkaToHuruf($i + 2);
            $h4 = Utils::angkaToHuruf($i + 3);

            $a = 0;
            $arratirbutpenting = array();
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $hi = $i + 4;
                $hh = Utils::angkaToHuruf($hi);
                $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $row['atribut']);

                $arratirbutpenting[$a] = $row['nama'];

                //lebar kolom
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);

                $i++;
                $a++;
            }

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . $b, trans('all.tanggal'))
                        ->setCellValue('B' . $b, trans('all.pegawai'))
                        ->setCellValue($h1 . $b, trans('all.keterangan'));

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $where = '';
            if (Session::has('lapriwayatpegawai_tanggalawal')) {
//                $where = ' AND DATE(l.waktu) BETWEEN STR_TO_DATE("' . Session::get("lapriwayatpegawai_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("lapriwayatpegawai_tanggalakhir") . '","%d/%m/%Y")';
                $where .= ' AND l.waktu >= CONCAT(STR_TO_DATE("' . Session::get("lapriwayatpegawai_tanggalawal") . '","%d/%m/%Y")," 00:00:00") AND l.waktu <= CONCAT(STR_TO_DATE("' . Session::get("lapriwayatpegawai_tanggalakhir") . '","%d/%m/%Y")," 23:59:59") ';
            }
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $batasan = ' AND p.id IN ' . $batasan;
            }

            $sql = 'SELECT
                        l.waktu as tanggal,
                        IFNULL(p.nama,"") as pegawai,
                        ' . $atributvariable . '
                        ' . $atributpenting . '
                        -- IF(l.method="WEB", l.keterangan, CAST(acakstring(CONCAT("[",l.method,"] ",l.path," ",LEFT(l.body,20))) AS BINARY)) as keterangan
                        l.keterangan
                    FROM
                         _logpegawai l
                         LEFT JOIN pegawai p ON p.id=l.idpegawai
                    WHERE
                        1=1
                        ' . $where . '
                        ' . $batasan . '
                    ORDER BY
                        l.waktu DESC,
                        l.id DESC';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = $b + 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['pegawai']);
                $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['keterangan']);

                $z = 3; //huruf setelah kolom pegawai
                $a = 0; //iterasi untuk looping atribut variable
                for ($j = 0; $j < $totalatributvariable; $j++) {
                    $hh = Utils::angkaToHuruf($z);
                    //$objPHPExcel->getActiveSheet()->setCellValue($hh.$i, $row[$arratirbutvariable[$a]]);
                    $objPHPExcel->getActiveSheet()->setCellValueExplicit($hh . $i, $row[$arratirbutvariable[$a]], PHPExcel_Cell_DataType::TYPE_STRING);

                    $z++;
                    $a++;
                }

                $a = 0;
                $z = 6 + $totalatributvariable; //iterasi untuk looping atribut penting 6 dari jumlah kolom fix
                for ($j = 0; $j < $totalatributpenting; $j++) {
                    $z++;

                    $hh = Utils::angkaToHuruf($z);
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . $i, $row[$arratirbutpenting[$a]]);

                    $a++;
                }

                // format
                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY HH:MM:SS');

                for ($j = 1; $j <= 3 + $totalatributvariable + $totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                }

                $i++;
            }

            for ($j = 1; $j <= 3 + $totalatributvariable + $totalatributpenting; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->applyFromArray($styleArray);
            }

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(40);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h1)->setWidth(100);

            $heightgambar = 99;
            $widthgambar = 99;

            $cg = Utils::angkaToHuruf(3 + $totalatributvariable + $totalatributpenting) . '1';
            $cg1 = Utils::angkaToHuruf(3 + $totalatributvariable + $totalatributpenting);

            // style garis
            $end_i = $i - 1;
            $objPHPExcel->getActiveSheet()->getStyle('A1:' . $cg1 . $end_i)->applyFromArray($styleArray);

            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                $l = $i - 1;
            } else {
                $l = $i + 1;
                Utils::footerExcel($objPHPExcel,'kiri','A','B',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'tengah','D','D',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'kanan',$cg1,$cg1,$l,$rowPE);
            }

            // password
            Utils::passwordExcel($objPHPExcel);

            if ($b != 1) {
                // header 5 baris
                Utils::header5baris($objPHPExcel,$cg1,$rowPE);
            }

            if (Session::has('lapriwayatpegawai_tanggalawal')) {
                //merge dan stylegaris range keterangan tanggal setelah header
                $objPHPExcel->getActiveSheet()->mergeCells('A' . $bt . ':' . $cg1 . $bt);
                // value
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $bt, trans('all.menampilkandatatanggal') . ' ' . Session::get("lapriwayatpegawai_tanggalawal") . ' - ' . Session::get("lapriwayatpegawai_tanggalakhir"));
                // center text
                $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                //font size
                $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getFont()->setSize(14);
            }

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $l + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('A' . $ft)->getFont()->setItalic(true);

            if ($rowPE['logokiri'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                if (file_exists($pathlogo)) {
                    $raw = Utils::decrypt($pathlogo);
                    $im = imagecreatefromstring($raw);

                    $objDrawing = new PHPExcel_Worksheet_MemoryDrawing();
                    $objDrawing->setName(trans('all.logo'));
                    $objDrawing->setDescription('Logo Sekolah');
                    $objDrawing->setImageResource($im);
                    $objDrawing->setRenderingFunction(PHPExcel_Worksheet_MemoryDrawing::RENDERING_JPEG);
                    $objDrawing->setMimeType(PHPExcel_Worksheet_MemoryDrawing::MIMETYPE_DEFAULT);
                    $objDrawing->setHeight($heightgambar);
                    $objDrawing->setWidth($widthgambar);
                    $objDrawing->setCoordinates('A1');
                    $objDrawing->setOffsetX(0);
                    $objDrawing->setOffsetY(0);
                    $objDrawing->setWorksheet($objPHPExcel->getActiveSheet());
                }
            }

            if ($rowPE['logokanan'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                if (file_exists($pathlogo)) {
                    $raw = Utils::decrypt($pathlogo);
                    $im = imagecreatefromstring($raw);

                    $objDrawing = new PHPExcel_Worksheet_MemoryDrawing();
                    $objDrawing->setName(trans('all.logo'));
                    $objDrawing->setDescription('Logo Sekolah');
                    $objDrawing->setImageResource($im);
                    $objDrawing->setRenderingFunction(PHPExcel_Worksheet_MemoryDrawing::RENDERING_JPEG);
                    $objDrawing->setMimeType(PHPExcel_Worksheet_MemoryDrawing::MIMETYPE_DEFAULT);
                    $objDrawing->setHeight($heightgambar);
                    $objDrawing->setWidth($widthgambar);
                    $objDrawing->setCoordinates($cg);
                    $objDrawing->setOffsetX(60);
                    $objDrawing->setOffsetY(0);
                    $objDrawing->setWorksheet($objPHPExcel->getActiveSheet());
                }
            }

            Utils::insertLogUser('Ekspor riwayat pegawai');
            Utils::setFileNameExcel(trans('all.riwayatpegawai'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
        return '';
    }

    public function riwayatSms()
    {
        if(Utils::cekHakakses('riwayatsms','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }
            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();
            Utils::insertLogUser('akses menu riwayat sms');
            return view('laporan/riwayat/sms/index', ['valuetglawalakhir' => $valuetglawalakhir, 'menu' => 'riwayatsms']);
        }
        return '';
    }

    public function submitRiwayatSms(Request $request)
    {
        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }
        if(Utils::cekDateTime($request->tanggalawal) && Utils::cekDateTime($request->tanggalakhir)) {
            Session::set('lapriwayatsms_tanggalawal', $request->tanggalawal);
            Session::set('lapriwayatsms_tanggalakhir', $request->tanggalakhir);
        }
        return redirect('laporan/riwayat/sms');
    }

    public function riwayatSmsData(Request $request)
    {
        if(Utils::cekHakakses('riwayatsms','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }
            $pdo = DB::getPdo();
            $where = ' AND idperusahaan = :idperusahaan';
            if (Session::has('lapriwayatsms_tanggalawal') && Session::has('lapriwayatsms_tanggalakhir')) {
                $where .= ' AND inserted >= CONCAT(STR_TO_DATE(:tanggalawal,"%d/%m/%Y")," 00:00:00") AND inserted <= CONCAT(STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")," 23:59:59") ';
            }
            $columns = array('tanggal','tujuan','isi');
            $table = '(SELECT id,idperusahaan,inserted as tanggal,tujuan,isi,inserted FROM logsms) x';
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
            if (Session::has('lapriwayatsms_tanggalawal') && Session::has('lapriwayatsms_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal', Session::get('lapriwayatsms_tanggalawal'));
                $stmt->bindValue(':tanggalakhir', Session::get('lapriwayatsms_tanggalakhir'));
            }
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalData = $row['total'];
            $totalFiltered = $totalData;
            $limit = $request->input('length');
            $start = $request->input('start');
            $orderColumn = $columns[$request->input('order.0.column')];
            $orderAction = $request->input('order.0.dir');
            $orderBy = $orderColumn.' '.$orderAction;

            if(!empty($request->input('search.value'))){
                $search = $request->input('search.value');
                $where .= Utils::searchDatatableQuery($columns);
                $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
                $stmt = $pdo->prepare($sql);
                $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
                if (Session::has('lapriwayatsms_tanggalawal') && Session::has('lapriwayatsms_tanggalakhir')) {
                    $stmt->bindValue(':tanggalawal', Session::get('lapriwayatsms_tanggalawal'));
                    $stmt->bindValue(':tanggalakhir', Session::get('lapriwayatsms_tanggalakhir'));
                }
                for($i=0;$i<count($columns);$i++) {
                    if($columns[$i] != '') {
                        $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                    }
                }
                $stmt->execute();
                $row = $stmt->fetch(PDO::FETCH_ASSOC);
                $totalFiltered = $row['total'];
            }

            $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
            if (Session::has('lapriwayatsms_tanggalawal') && Session::has('lapriwayatsms_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal', Session::get('lapriwayatsms_tanggalawal'));
                $stmt->bindValue(':tanggalakhir', Session::get('lapriwayatsms_tanggalakhir'));
            }
            if(!empty($request->input('search.value'))) {
                for($i=0;$i<count($columns);$i++) {
                    if($columns[$i] != '') {
                        $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                    }
                }
            }
            $stmt->execute();
            $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

            $data = array();
            if(!empty($originaldata)){
                foreach($originaldata as $key){
                    $tempdata['tanggal'] = $key['tanggal'];
                    for($i=1;$i<count($columns);$i++){
                        $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                    }
                    $data[] = $tempdata;
                }
            }
            return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
        }
        return '';
    }

    public function excelRiwayatSms()
    {
        if(Utils::cekHakakses('riwayatsms','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::getPdo();
            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel,trans('all.riwayatsms'));

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.tanggal'))
                        ->setCellValue('B1', trans('all.tujuan'))
                        ->setCellValue('C1', trans('all.keterangan'));

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            $where = ' WHERE idperusahaan = :idperusahaan';
            if (Session::has('lapriwayatsms_tanggalawal') && Session::has('lapriwayatsms_tanggalakhir')) {
                $where .= ' AND inserted >= CONCAT(STR_TO_DATE(:tanggalawal,"%d/%m/%Y")," 00:00:00") AND inserted <= CONCAT(STR_TO_DATE(:tanggalakhir,"%d/%m/%Y")," 23:59:59") ';
            }

            $sql = 'SELECT
                        (DATEDIFF(inserted,"1900-01-01")+2)+ROUND(time_to_sec(timediff(DATE_FORMAT(inserted,"%T"),"00:00:00"))/86400,9) as tanggal,
                        tujuan,
                        isi
                    FROM
                        logsms l
                    ' . $where . '
                    ORDER BY
                        inserted DESC';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idperusahaan', Session::get('conf_webperusahaan'));
            if (Session::has('lapriwayatsms_tanggalawal') && Session::has('lapriwayatsms_tanggalakhir')) {
                $stmt->bindValue(':tanggalawal', Session::get('lapriwayatsms_tanggalawal'));
                $stmt->bindValue(':tanggalakhir', Session::get('lapriwayatsms_tanggalakhir'));
            }
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['tujuan']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['isi']);

                // format
                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY HH:MM:SS');

                for ($j = 1; $j <= 3; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                }

                $i++;
            }

            $arrWidth= array('',20,20,100);
            for ($j = 1; $j <= 3; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            Utils::insertLogUser('Ekspor riwayat sms');
            Utils::setFileNameExcel(trans('all.riwayatsms'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function laporanPresensi($jenis)
    {
        if(Utils::cekHakakses('laporanlainnya','l')){
            $atributs = Utils::getAtribut();
            $tahun = Utils::tahunDropdown();
            $totalhari = cal_days_in_month(CAL_GREGORIAN, date('m'), date('Y'));
            if (Session::has('laporanpresensi' . $jenis . '_bulan')) {
                $bulanterpilih = Session::get('laporanpresensi' . $jenis . '_bulan');
            } else {
                $bulanterpilih = date('m');
            }
            if (Session::has('laporanpresensi' . $jenis . '_tahun')) {
                $tahunterpilih = Session::get('laporanpresensi' . $jenis . '_tahun');
            } else {
                $tahunterpilih = date('Y');
            }
            Utils::insertLogUser('akses menu laporan presensi');
            return view('laporan/lainnya/presensi/index', ['jenis' => $jenis, 'atributs' => $atributs, 'tahun' => $tahun, 'totalhari' => $totalhari, 'keterangan' => '', 'bulanterpilih' => $bulanterpilih, 'tahunterpilih' => $tahunterpilih, 'menu' => 'lainnya']);
        }else{
            return redirect('/');
        }
    }

    public function submitLaporanPresensi(Request $request, $jenis)
    {
        //parameter
        $atributs = Utils::getAtribut();
        $tahunterpilih = $request->tahun;
        $bulanterpilih = $request->bulan;
        $bulan = Utils::getBulan($request->bulan);
        $tanggal = implode(", ",$request->tanggal);
        $tahun = Utils::tahunDropdown();
        $totalhari = cal_days_in_month(CAL_GREGORIAN,$bulanterpilih,$tahunterpilih);

        //cek jika totalhari dan tanggal yg terpilih sama(satu bulan penuh)
        if($totalhari == count($request->tanggal)){
           $tanggal = '';
        }

        //set session
        Session::set('laporanpresensi'.$jenis.'_tanggal', $request->tanggal);
        Session::set('laporanpresensi'.$jenis.'_bulan', $request->bulan);
        Session::set('laporanpresensi'.$jenis.'_tahun', $request->tahun);
        Session::set('laporanpresensi'.$jenis.'_atribut', $request->atributnilai);

        //atribut terpilih
        $atributnilai = Utils::atributNilai($request->atributnilai);
        $atributnilaiketerangan = '';
        if ($atributnilai != '') {
            $atributnilaidipilih = Utils::getAtributSelected($atributnilai);
            $atributnilaiketerangan = Utils::atributNilaiKeterangan($atributnilaidipilih);
        }

        //atribut untuk di index.blade nya
        $allatribut = Utils::getAllAtribut('blade');
        $atributpenting_controller = explode('|', $allatribut['atributpenting_controller']);
        $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
        $atributvariablepenting_controller = explode('|', $allatribut['atributvariablepenting_controller']);
        $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);

        //keterangan info
        $keterangan = $tanggal.' '.$bulan.' '.$tahunterpilih.' '.$atributnilaiketerangan;
        $tampilflexytime = Utils::getDataWhere(DB::connection('perusahaan_db')->getPdo(),'pengaturan','tampilkan_flexytime');
        return view('laporan/lainnya/presensi/index', ['jenis' => $jenis, 'atributs' => $atributs, 'tahun' => $tahun, 'totalhari' => $totalhari, 'keterangan' => $keterangan, 'bulanterpilih' => $bulanterpilih, 'tahunterpilih' => $tahunterpilih, 'atributpenting_blade' => $atributpenting_blade, 'atributpenting_controller' => $atributpenting_controller, 'atributvariablepenting_blade' => $atributvariablepenting_blade, 'atributvariablepenting_controller' => $atributvariablepenting_controller, 'tampilflexytime' => $tampilflexytime, 'menu' => 'lainnya']);
    }

    public function laporanPresensiData(Request $request, $jenis)
    {
        if(Utils::cekHakakses('laporanlainnya','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $tahun = Session::get('laporanpresensi'.$jenis.'_tahun');
            $bulan = Session::get('laporanpresensi'.$jenis.'_bulan');
            $tanggal = Session::get('laporanpresensi'.$jenis.'_tanggal');

            $where = '';
            $wherePeriode = '';
            $whereAtribut = '';
            if ($tanggal != ''){
                for($i=0;$i<count($tanggal);$i++) {
                    $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                }
                if (strlen($wherePeriode)>0) {
                    $where .= ' AND tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                }
            } else {
                $where .= ' AND year(tanggal)='.$tahun.' AND month(tanggal)='.$bulan;
            }

            if (Session::has('laporanpresensi'.$jenis.'_atribut')) {
                $atributs = Session::get('laporanpresensi'.$jenis.'_atribut');
                $atributnilai = Utils::atributNilai($atributs);
                $where .= ' AND idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
                $whereAtribut .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where .= ' AND idpegawai IN ' . $batasan;
            }
            if ($whereAtribut != '') {
                $whereAtribut = ' AND ' . substr($whereAtribut, 4);
            }
            $allatribut = Utils::getAllAtribut('controller', $whereAtribut);
            $atributpenting = $allatribut['atributpenting'];
            $atributvariablepenting = $allatribut['atributvariablepenting'];
            $stringcolumn = '';
            $wheredasar = '';
            $table = '';

            if($jenis == 'terlambat') {
                $stringcolumn = 'tanggal,nama,'.$atributvariablepenting.'jamkerja,jammasuk,selisih,lamakerja,lamaflexytime'.$atributpenting;
                $wheredasar = ' AND selisihmasuk<0';
                $table = '(SELECT
                                ra.id,
                                ra.idpegawai,
                                ra.tanggal,
                                p.nama,
                                '.$atributvariablepenting.'
                                getpegawaijamkerja(p.id,"nama",ra.tanggal) as jamkerja,
                                TIME(ra.waktumasuk) as jammasuk,
                                ra.selisihmasuk*-1 as selisih,
                                ra.lamakerja,
                                ra.lamaflexytime
                              ' . $atributpenting . '
                            FROM
                                rekapabsen ra,
                                pegawai p,
                                _pegawailengkap _pa
                            WHERE
                                ra.idpegawai=p.id AND
                                p.id=_pa.id
                                '.$wheredasar.'
                          ) x';
            }else if($jenis == 'pulangawal') {
                $stringcolumn = 'tanggal,nama,'.$atributvariablepenting.'jamkerja,jammasuk,jampulang,selisih,lamakerja,lamaflexytime'.$atributpenting;
                $wheredasar = ' AND selisihkeluar<0';
                $table = '(SELECT
                                ra.id,
                                ra.idpegawai,
                                ra.tanggal,
                                p.nama,
                                '.$atributvariablepenting.'
                                getpegawaijamkerja(p.id,"nama",ra.tanggal) as jamkerja,
                                TIME(ra.waktumasuk) as jammasuk,
                                TIME(ra.waktukeluar) as jampulang,
                                ra.selisihkeluar*-1 as selisih,
                                ra.lamakerja,
                                ra.lamaflexytime
                                ' . $atributpenting . '
                            FROM
                                rekapabsen ra,
                                pegawai p,
                                _pegawailengkap _pa
                            WHERE
                                ra.idpegawai=p.id AND
                                p.id=_pa.id
                                '.$wheredasar.'
                          ) x';
            }else if($jenis == 'belumabsenmasuk') {
                $stringcolumn = 'tanggal,nama,'.$atributvariablepenting.'jamkerja,jammasuk'.$atributpenting;
                $wheredasar = ' AND ISNULL(waktumasuk)=true AND jadwalmasukkerja="y"';
                $table = '(SELECT
                                ra.id,
                                ra.idpegawai,
                                ra.tanggal,
                                p.nama,
                                '.$atributvariablepenting.'
                                getpegawaijamkerja(p.id,"nama",ra.tanggal) as jamkerja,
                                TIME(ra.waktumasuk) as jammasuk
                                ' . $atributpenting . '
                            FROM
                                rekapabsen ra,
                                pegawai p,
                                _pegawailengkap _pa
                            WHERE
                                ra.idpegawai=p.id AND
                                p.id=_pa.id
                                '.$wheredasar.'
                          ) x';
            }else if($jenis == 'belumabsenpulang') {
                $stringcolumn = 'tanggal,nama,'.$atributvariablepenting.'jamkerja,jammasuk'.$atributpenting;
                $wheredasar = ' AND ISNULL(waktumasuk)=false AND ISNULL(waktukeluar)=true AND jadwalmasukkerja="y"';
                $table = '(SELECT
                                ra.id,
                                ra.idpegawai,
                                ra.tanggal,
                                p.nama,
                                '.$atributvariablepenting.'
                                getpegawaijamkerja(p.id,"nama",ra.tanggal) as jamkerja,
                                TIME(ra.waktumasuk) as jammasuk
                                ' . $atributpenting . '
                            FROM
                                rekapabsen ra,
                                pegawai p,
                                _pegawailengkap _pa
                            WHERE
                                ra.idpegawai=p.id AND
                                p.id=_pa.id
                                '.$wheredasar.'
                          ) x';
            }else if($jenis == 'masuktanpajadwal'){
                $stringcolumn = 'tanggal,nama,'.$atributvariablepenting.'jamkerja,jammasuk'.$atributpenting;
                $wheredasar = ' AND (ISNULL(waktumasuk)=false OR ISNULL(waktukeluar)=false) AND jadwalmasukkerja="t"';
                $table = '(
                            SELECT
                                ra.id,
                                ra.idpegawai,
                                ra.tanggal,
                                p.nama,
                                '.$atributvariablepenting.'
                                getpegawaijamkerja(p.id,"nama",ra.tanggal) as jamkerja,
                                TIME(ra.waktumasuk) as jammasuk
                                ' . $atributpenting . '
                            FROM
                                rekapabsen ra,
                                pegawai p,
                                _pegawailengkap _pa
                            WHERE
                                ra.idpegawai=p.id AND
                                p.id=_pa.id '.$wheredasar.'
                        ) x';
            }

            if($stringcolumn != '') {
                $columns = explode(',', $stringcolumn);
                $totalData = Utils::getDataCustomWhere($pdo, 'rekapabsen', 'count(id)', ' 1=1 ' . $wheredasar . $where);
                $totalFiltered = $totalData;
                $limit = $request->input('length');
                $start = $request->input('start');
                $orderColumn = $columns[$request->input('order.0.column')];
                $orderAction = $request->input('order.0.dir');
                $orderBy = $orderColumn . ' ' . $orderAction;

                if(!empty($request->input('search.value'))){
                    $search = $request->input('search.value');
                    $where .= Utils::searchDatatableQuery($columns);
                    $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
                    $stmt = $pdo->prepare($sql);
                    for($i=0;$i<count($columns);$i++) {
                        if($columns[$i] != '') {
                            $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                        }
                    }
                    $stmt->execute();
                    $row = $stmt->fetch(PDO::FETCH_ASSOC);
                    $totalFiltered = $row['total'];
                }

                $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
                $stmt = $pdo->prepare($sql);
                if(!empty($request->input('search.value'))) {
                    for($i=0;$i<count($columns);$i++) {
                        if($columns[$i] != '') {
                            $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                        }
                    }
                }
                $stmt->execute();
                $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

                $data = array();
                if (!empty($originaldata)) {
                    foreach ($originaldata as $key) {
                        $tempdata['tanggal'] = Utils::tanggalCantik($key['tanggal']);
                        for ($i = 1; $i < count($columns); $i++) {
                            if (($jenis == 'terlambat' || $jenis == 'pulangawal') && ($columns[$i] == 'selisih' || $columns[$i] == 'lamakerja' || $columns[$i] == 'lamaflexytime')) {
                                $tempdata[$columns[$i]] = Utils::sec2pretty($key[$columns[$i]]);
                            } else {
                                $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                            }
                        }
                        $data[] = $tempdata;
                    }
                }
                return Utils::jsonDatatable($request->input('draw'), $totalData, $totalFiltered, $data);
            }
        }
        return '';
    }

    public function excelLaporanPresensi($jenis)
    {
        if(Utils::cekHakakses('laporanlainnya','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel,trans('all.'.$jenis));

            $tahun = Session::get('laporanpresensi'.$jenis.'_tahun');
            $bulan = Session::get('laporanpresensi'.$jenis.'_bulan');
            $tanggal = Session::get('laporanpresensi'.$jenis.'_tanggal');

            $where = '';
            $wherePeriode = '';
            $whereAtribut = '';
            if ($tanggal != ''){
                for($i=0;$i<count($tanggal);$i++) {
                    $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                }
                if (strlen($wherePeriode)>0) {
                    $where .= ' AND ra.tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                }
            }
            else {
                $where .= ' AND year(ra.tanggal)='.$tahun.' AND month(ra.tanggal)='.$bulan;
            }

            if (Session::has('laporanpresensi'.$jenis.'_atribut')) {
                $atributs = Session::get('laporanpresensi'.$jenis.'_atribut');
                $atributnilai = Utils::atributNilai($atributs);
                $where .= ' AND p.id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
                $whereAtribut .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
            }

            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $where .= ' AND p.id IN ' . $batasan;
            }
            if ($whereAtribut != '') {
                $whereAtribut = ' AND ' . substr($whereAtribut, 4);
            }
            $allatribut = Utils::getAllAtribut('controller', $whereAtribut);
            $atributpenting = $allatribut['atributpenting'];
            $atributvariablepenting = $allatribut['atributvariablepenting'];

            //set value kolom
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.tanggal'))
                        ->setCellValue('B1', trans('all.nama'));

            //get atribut
            $allatribut = Utils::getAllAtribut('blade');
            $atributpenting_controller = ($allatribut['atributpenting_controller'] != '' ? explode('|', $allatribut['atributpenting_controller']) : '');
            $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
            $atributvariablepenting_controller = ($allatribut['atributvariablepenting_controller'] != '' ? explode('|', $allatribut['atributvariablepenting_controller']) : '');
            $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);
            $totalatributvariable = ($atributvariablepenting_controller != '' ? count($atributvariablepenting_controller) : 0);
            $totalatributpenting = ($atributpenting_controller != '' ? count($atributpenting_controller) : 0);

            //set atribut variable penting
            $i = 3; //setelah B(2)
            if ($atributvariablepenting_blade != '') {
                //looping untuk header
                foreach ($atributvariablepenting_blade as $key) {
                    if ($key != '') {
                        $ht = Utils::angkaToHuruf($i);
                        $objPHPExcel->getActiveSheet()->setCellValue($ht.'1', $key);
                        //lebar kolom
                        $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(25);
                        //set bold
                        $objPHPExcel->getActiveSheet()->getStyle($ht.'1')->getFont()->setBold(true);
                        //style
                        //$objPHPExcel->getActiveSheet()->getStyle($hh.'1')->applyFromArray($styleArray);

                        $i++;
                    }
                }
            }

            $ht = Utils::angkaToHuruf($i);
            $objPHPExcel->getActiveSheet()->setCellValue($ht . '1', trans('all.jamkerja'));
            $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(12);
            $ht = Utils::angkaToHuruf($i+1);
            $objPHPExcel->getActiveSheet()->setCellValue($ht . '1', trans('all.jammasuk'));
            $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(12);

            $tampilflexytime = Utils::getDataWhere($pdo,'pengaturan','tampilkan_flexytime');

            if($jenis == 'terlambat') {
                $ht = Utils::angkaToHuruf($i+2);
                $objPHPExcel->getActiveSheet()->setCellValue($ht . '1', trans('all.lamakerja'));
                $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(12);
                if($tampilflexytime == 'y') {
                    $ht = Utils::angkaToHuruf($i+3);
                    $objPHPExcel->getActiveSheet()->setCellValue($ht . '1', trans('all.lamaflexytime'));
                    $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(17);
                    $ht = Utils::angkaToHuruf($i+4);
                    $i = $i + 5;
                }else{
                    $ht = Utils::angkaToHuruf($i+3);
                    $i = $i + 4;
                }
                $objPHPExcel->getActiveSheet()->setCellValue($ht . '1', trans('all.terlambat'));
                $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(12);
            }else if($jenis == 'pulangawal'){
                $ht = Utils::angkaToHuruf($i+2);
                $objPHPExcel->getActiveSheet()->setCellValue($ht . '1', trans('all.jampulang'));
                $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(12);
                $ht = Utils::angkaToHuruf($i+3);
                $objPHPExcel->getActiveSheet()->setCellValue($ht . '1', trans('all.lamakerja'));
                $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(12);
                if($tampilflexytime == 'y') {
                    $ht = Utils::angkaToHuruf($i+4);
                    $objPHPExcel->getActiveSheet()->setCellValue($ht . '1', trans('all.lamaflexytime'));
                    $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(17);
                    $ht = Utils::angkaToHuruf($i+5);
                    $i = $i + 6;
                }else{
                    $ht = Utils::angkaToHuruf($i+4);
                    $i = $i + 5;
                }
                $objPHPExcel->getActiveSheet()->setCellValue($ht . '1', trans('all.pulangawal'));
                $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(12);

            }else{
                $i = $i+2;
            }

            //set atribut penting
            if ($atributpenting_blade != '') {
                //looping untuk header
                foreach ($atributpenting_blade as $key) {
                    if ($key != '') {
                        $ht = Utils::angkaToHuruf($i);
                        $objPHPExcel->getActiveSheet()->setCellValue($ht.'1', $key);
                        //lebar kolom
                        $objPHPExcel->getActiveSheet()->getColumnDimension($ht)->setWidth(25);
                        //set bold
                        $objPHPExcel->getActiveSheet()->getStyle($ht.'1')->getFont()->setBold(true);
                        //style
                        //$objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);

                        $i++;
                    }
                }
            }

            if($jenis == 'terlambat') {
                $sql = 'SELECT
                          ra.tanggal,
                          p.nama,
                          ' . $atributvariablepenting . '
                          getpegawaijamkerja(p.id,"nama",ra.tanggal) as jamkerja,
                          TIME(ra.waktumasuk) as jammasuk,
                          ra.selisihmasuk*-1 as selisih,
                          ra.lamakerja,
                          ra.lamaflexytime
                          ' . $atributpenting . '
                        FROM
                          rekapabsen ra,
                          pegawai p,
                          _pegawailengkap _pa
                        WHERE
                          ra.idpegawai=p.id AND
                          p.id=_pa.id AND
                          ra.selisihmasuk<0
                        '.$where.'
                        ORDER BY
                          ra.tanggal DESC';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $i = 2;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, Utils::tanggalCantik($row['tanggal']));
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                    $k = 3; //angka dari huruf terakhir setelah kolom nama
                    if($atributvariablepenting_controller != '') {
                        for ($j = 0; $j < $totalatributvariable; $j++) {
                            $hv = Utils::angkaToHuruf($k);
                            $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row[$atributvariablepenting_controller[$j]]);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(20);
                            $k++;
                        }
                    }

                    $hv = Utils::angkaToHuruf($k);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jamkerja']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(25);
                    $hv = Utils::angkaToHuruf($k+1);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jammasuk']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(15);
                    $hv = Utils::angkaToHuruf($k+2);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, Utils::sec2pretty($row['lamakerja']));
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(10);
                    if($tampilflexytime == 'y'){
                        $hv = Utils::angkaToHuruf($k+3);
                        $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, Utils::sec2pretty($row['lamaflexytime']));
                        $hv = Utils::angkaToHuruf($k+4);
                    }else{
                        $hv = Utils::angkaToHuruf($k+3);
                    }
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, Utils::sec2pretty($row['selisih']));
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(10);

                    if($atributpenting_controller != '') {
                        //$z2 iterasi untuk looping atribut penting 6 dari jumlah kolom fix
                        if($tampilflexytime == 'y') {
                            $z2 = $k + 5;
                        }else{
                            $z2 = $k + 4;
                        }
                        for ($j = 0; $j < $totalatributpenting; $j++) {

                            $hap = Utils::angkaToHuruf($z2);
                            $objPHPExcel->getActiveSheet()->setCellValue($hap . $i, $row[$atributpenting_controller[$j]]);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hap)->setWidth(20);
                            $z2++;
                        }
                    }

                    $i++;
                }

                //$arrWidth = array('', 25, 30);
                for ($j = 1; $j <= 6+$totalatributpenting+$totalatributvariable; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                }
            }else if($jenis == 'pulangawal'){
                $sql = 'SELECT
                          ra.tanggal,
                          p.nama,
                          ' . $atributvariablepenting . '
                          getpegawaijamkerja(p.id,"nama",ra.tanggal) as jamkerja,
                          TIME(ra.waktumasuk) as jammasuk,
                          TIME(ra.waktukeluar) as jampulang,
                          ra.selisihkeluar*-1 as selisih,
                          ra.lamakerja,
                          ra.lamaflexytime
                          ' . $atributpenting . '
                        FROM
                          rekapabsen ra,
                          pegawai p,
                          _pegawailengkap _pa
                        WHERE
                          ra.idpegawai=p.id AND
                          p.id=_pa.id AND
                          ra.selisihkeluar<0
                        '.$where.'
                        ORDER BY
                          ra.tanggal DESC';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $i = 2;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, Utils::tanggalCantik($row['tanggal']));
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                    $k = 3; //angka dari huruf terakhir setelah kolom nama
                    if($atributvariablepenting_controller != '') {
                        for ($j = 0; $j < $totalatributvariable; $j++) {
                            $hv = Utils::angkaToHuruf($k);
                            $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row[$atributvariablepenting_controller[$j]]);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(20);
                            $k++;
                        }
                    }

                    $hv = Utils::angkaToHuruf($k);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jamkerja']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(25);
                    $hv = Utils::angkaToHuruf($k+1);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jammasuk']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(15);
                    $hv = Utils::angkaToHuruf($k+2);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jampulang']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(15);
                    $hv = Utils::angkaToHuruf($k+3);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, Utils::sec2pretty($row['lamakerja']));
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(10);
                    $hv = Utils::angkaToHuruf($k+4);
                    if($tampilflexytime == 'y'){
                        $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, Utils::sec2pretty($row['lamaflexytime']));
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(20);
                        $hv = Utils::angkaToHuruf($k+5);
                    }
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, Utils::sec2pretty($row['selisih']));
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(10);

                    if($atributpenting_controller != '') {
                        //$z2 = 16 + $totalatributvariable; //iterasi untuk looping atribut penting 6 dari jumlah kolom fix
                        if($tampilflexytime == 'y') {
                            $z2 = $k + 6;
                        }else{
                            $z2 = $k + 5;
                        }
                        for ($j = 0; $j < $totalatributpenting; $j++) {

                            $hap = Utils::angkaToHuruf($z2);
                            $objPHPExcel->getActiveSheet()->setCellValue($hap . $i, $row[$atributpenting_controller[$j]]);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hap)->setWidth(20);
                            $z2++;
                        }
                    }

                    $i++;
                }

                //$arrWidth = array('', 25, 30);
                for ($j = 1; $j <= 7+$totalatributpenting+$totalatributvariable; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                    //$objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                }
            }else if($jenis == 'belumabsenmasuk'){
                $sql = 'SELECT
                          ra.tanggal,
                          p.nama,
                          '.$atributvariablepenting.'
                          getpegawaijamkerja(p.id,"nama",ra.tanggal) as jamkerja,
                          TIME(ra.waktumasuk) as jammasuk
                          ' . $atributpenting . '
                        FROM
                          rekapabsen ra,
                          pegawai p,
                          _pegawailengkap _pa
                        WHERE
                          ra.idpegawai=p.id AND
                          p.id=_pa.id AND
                          ISNULL(ra.waktumasuk)=true
                        '.$where.'
                        ORDER BY
                          ra.tanggal DESC';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $i = 2;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, Utils::tanggalCantik($row['tanggal']));
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                    $k = 3; //angka dari huruf terakhir setelah kolom nama
                    if($atributvariablepenting_controller != '') {
                        for ($j = 0; $j < $totalatributvariable; $j++) {
                            $hv = Utils::angkaToHuruf($k);
                            $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row[$atributvariablepenting_controller[$j]]);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(20);
                            $k++;
                        }
                    }

                    $hv = Utils::angkaToHuruf($k);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jamkerja']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(25);
                    $hv = Utils::angkaToHuruf($k+1);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jammasuk']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(15);

                    if($atributpenting_controller != '') {
                        //$z2 = 16 + $totalatributvariable; //iterasi untuk looping atribut penting 6 dari jumlah kolom fix
                        $z2 = $k + 2;
                        for ($j = 0; $j < $totalatributpenting; $j++) {

                            $hap = Utils::angkaToHuruf($z2);
                            $objPHPExcel->getActiveSheet()->setCellValue($hap . $i, $row[$atributpenting_controller[$j]]);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hap)->setWidth(20);
                            $z2++;
                        }
                    }

                    $i++;
                }

                //$arrWidth = array('', 25, 30);
                for ($j = 1; $j <= 5+$totalatributpenting+$totalatributvariable; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                    //$objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                }
            }else if($jenis == 'belumabsenpulang'){
                $sql = 'SELECT
                          ra.tanggal,
                          p.nama,
                          '.$atributvariablepenting.'
                          getpegawaijamkerja(p.id,"nama",ra.tanggal) as jamkerja,
                          TIME(ra.waktumasuk) as jammasuk,
                          SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime
                          ' . $atributpenting . '
                        FROM
                          rekapabsen ra,
                          pegawai p,
                          _pegawailengkap _pa
                        WHERE
                          ra.idpegawai=p.id AND
                          p.id=_pa.id AND
                          ISNULL(ra.waktumasuk)=false AND
                          ISNULL(ra.waktukeluar)=true
                        '.$where.'
                        ORDER BY
                          ra.tanggal DESC';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $i = 2;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, Utils::tanggalCantik($row['tanggal']));
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                    $k = 3; //angka dari huruf terakhir setelah kolom nama
                    if($atributvariablepenting_controller != '') {
                        for ($j = 0; $j < $totalatributvariable; $j++) {
                            $hv = Utils::angkaToHuruf($k);
                            $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row[$atributvariablepenting_controller[$j]]);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(20);
                            $k++;
                        }
                    }

                    $hv = Utils::angkaToHuruf($k);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jamkerja']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(25);
                    $hv = Utils::angkaToHuruf($k+1);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jammasuk']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(15);

                    if($atributpenting_controller != '') {
                        //$z2 = 16 + $totalatributvariable; //iterasi untuk looping atribut penting 6 dari jumlah kolom fix
                        $z2 = $k + 2;
                        for ($j = 0; $j < $totalatributpenting; $j++) {

                            $hap = Utils::angkaToHuruf($z2);
                            $objPHPExcel->getActiveSheet()->setCellValue($hap . $i, $row[$atributpenting_controller[$j]]);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hap)->setWidth(20);
                            $z2++;
                        }
                    }

                    $i++;
                }

                //$arrWidth = array('', 25, 30);
                for ($j = 1; $j <= 5+$totalatributpenting+$totalatributvariable; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                    //$objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                }
            }else if($jenis == 'masuktanpajadwal'){
                $sql = 'SELECT
                          ra.tanggal,
                          p.nama,
                          '.$atributvariablepenting.'
                          getpegawaijamkerja(p.id,"nama",ra.tanggal) as jamkerja,
                          TIME(ra.waktumasuk) as jammasuk,
                          SEC_TO_TIME(ra.lamaflexytime) as lamaflexytime
                          ' . $atributpenting . '
                        FROM
                          rekapabsen ra,
                          pegawai p,
                          _pegawailengkap _pa
                        WHERE
                          ra.idpegawai=p.id AND
                          p.id=_pa.id AND
                          (ISNULL(ra.waktumasuk)=false OR
                          ISNULL(ra.waktukeluar)=false) AND
                          ra.jadwalmasukkerja="t"
                          '.$where.'
                        ORDER BY
                          ra.tanggal DESC';
                $stmt = $pdo->prepare($sql);
                $stmt->execute();
                $i = 2;
                while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                    $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, Utils::tanggalCantik($row['tanggal']));
                    $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['nama']);

                    $k = 3; //angka dari huruf terakhir setelah kolom nama
                    if($atributvariablepenting_controller != '') {
                        for ($j = 0; $j < $totalatributvariable; $j++) {
                            $hv = Utils::angkaToHuruf($k);
                            $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row[$atributvariablepenting_controller[$j]]);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(20);
                            $k++;
                        }
                    }

                    $hv = Utils::angkaToHuruf($k);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jamkerja']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(25);
                    $hv = Utils::angkaToHuruf($k+1);
                    $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row['jammasuk']);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hv)->setWidth(15);

                    if($atributpenting_controller != '') {
                        //$z2 = 16 + $totalatributvariable; //iterasi untuk looping atribut penting 6 dari jumlah kolom fix
                        $z2 = $k + 2;
                        for ($j = 0; $j < $totalatributpenting; $j++) {

                            $hap = Utils::angkaToHuruf($z2);
                            $objPHPExcel->getActiveSheet()->setCellValue($hap . $i, $row[$atributpenting_controller[$j]]);
                            $objPHPExcel->getActiveSheet()->getColumnDimension($hap)->setWidth(20);
                            $z2++;
                        }
                    }

                    $i++;
                }

                //$arrWidth = array('', 25, 30);
                for ($j = 1; $j <= 5+$totalatributpenting+$totalatributvariable; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                    //$objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
                }
            }


            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(35);

            $sql = 'SELECT gunakanpwd,pwd FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
            // password
            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan '.$jenis);
            Utils::setFileNameExcel(trans('all.laporan') . '_'.trans('all.'.$jenis));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function perLokasi(){
        if(Utils::cekHakakses('laporanperlokasi','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }

            $atributs = Utils::getAtribut();
            $tahun = Utils::tahunDropdown();
            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();

            $bulanterpilih = date('m');
            $tahunterpilih = date('Y');
            if(Session::has('lapperlokasi_bulan') && Session::has('lapperlokasi_tahun')){
                $bulanterpilih = Session::get('lapperlokasi_bulan');
                $tahunterpilih = Session::get('lapperlokasi_tahun');
            }
            $totalhari = cal_days_in_month(CAL_GREGORIAN,$bulanterpilih,$tahunterpilih);

            //lokasi
            $pdo = DB::Connection('perusahaan_db')->getPdo();
            $lokasi = Utils::getData($pdo,'lokasi','id,nama','','nama');
            Utils::insertLogUser('akses menu laporan per lokasi');
            return view('laporan/perlokasi/index', ['data' => '', 'lokasi' => $lokasi, 'tahun' => $tahun, 'totalhari' => $totalhari, 'bulanterpilih' => $bulanterpilih, 'tahunterpilih' => $tahunterpilih, 'valuetglawalakhir' => $valuetglawalakhir, 'atributs' => $atributs, 'atributvariable' => '', 'atributpenting' => '', 'keterangan' => '', 'menu' => 'perlokasi']);
        } else {
            return redirect('/');
        }
    }

    public function perLokasiSubmit(Request $request){
        if($request->filtermode == 'jangkauantanggal' && !Utils::cekDateTime($request->tanggalawal) && !Utils::cekDateTime($request->tanggalakhir)){
            return redirect('laporan/perlokasi');
        }

        $pdo = DB::connection('perusahaan_db')->getPdo();

        Session::set('lapperlokasi_tanggalawal', $request->tanggalawal);
        Session::set('lapperlokasi_tanggalakhir', $request->tanggalakhir);
        Session::set('lapperlokasi_atribut', $request->atributnilai);
        Session::set('lapperlokasi_lokasi', $request->lokasi);
        Session::set('lapperlokasi_filtermode', $request->filtermode);

        $atributs = Session::get('lapperlokasi_atribut');
        $atributnilai = Utils::atributNilai($atributs);
        $atributnilaiketerangan = '';
        if ($atributnilai != '') {
            $atributnilaidipilih = Utils::getAtributSelected($atributnilai);
            $atributnilaiketerangan = Utils::atributNilaiKeterangan($atributnilaidipilih);
        }

        $keteranganlokasi = '';
        if ($request->lokasi != '') {
            $lokasi = Utils::getLokasi($request->lokasi);
            $keteranganlokasi = ' ' . trans('all.lokasi') . ' : ';
            foreach ($lokasi as $key) {
                $keteranganlokasi .= $key->nama.', ';
            }
        }

        $keteranganlokasi = substr($keteranganlokasi,0, -2);

        if($request->filtermode == 'berdasarkantanggal') {
            $tahunterpilih = $request->tahun;
            $bulanterpilih = $request->bulan;
            $bulan = Utils::getBulan($request->bulan);
            $tanggal = implode(", ", $request->tanggal);
            $totalhari = cal_days_in_month(CAL_GREGORIAN, $bulanterpilih, $tahunterpilih);

            //cek jika totalhari dan tanggal yg terpilih sama(satu bulan penuh)
            if ($totalhari == count($request->tanggal)) {
                $tanggal = '';
            }

            //set session
            Session::set('lapperlokasi_tanggal', $request->tanggal);
            Session::set('lapperlokasi_bulan', $request->bulan);
            Session::set('lapperlokasi_tahun', $request->tahun);

            $keterangan = $tanggal . ' ' . $bulan . ' ' . $tahunterpilih . ' ' . $atributnilaiketerangan . $keteranganlokasi;
        }else{
            $keterangan = trans('all.tanggal') . ' : ' . Session::get('lapperlokasi_tanggalawal') . ' - ' . Session::get('lapperlokasi_tanggalakhir') . $atributnilaiketerangan . $keteranganlokasi;
        }

        $allatribut = Utils::getAllAtribut('blade');
        $atributpenting_controller = explode('|', $allatribut['atributpenting_controller']);
        $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
        $atributvariablepenting_controller = explode('|', $allatribut['atributvariablepenting_controller']);
        $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);

        $where = '';
        if (Session::has('lapperlokasi_tanggalawal')) {
//            $where .= ' WHERE DATE(waktu) BETWEEN STR_TO_DATE("' . Session::get("lapperlokasi_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("lapperlokasi_tanggalakhir") . '","%d/%m/%Y")';
            $where .= ' AND waktu >= CONCAT(STR_TO_DATE("' . Session::get("lapperlokasi_tanggalawal") . '","%d/%m/%Y")," 00:00:00") AND waktu <= CONCAT(STR_TO_DATE("' . Session::get("lapperlokasi_tanggalakhir") . '","%d/%m/%Y")," 23:59:59") ';
        }
        if (Session::has('lapperlokasi_atribut')) {
            $atributs = Session::get('lapperlokasi_atribut');
            $atributnilai = Utils::atributNilai($atributs);
            $where .= ' AND idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
        }
        if (Session::has('lapperlokasi_mesin')) {
            if (Session::get('lapperlokasi_mesin') != '') {
                $where .= ' AND idmesin IN (' . implode(',', Session::get('lapperlokasi_mesin')) . ')';
            }
        }

        //cek apakah ada data
        $sql = 'SELECT id FROM logabsen WHERE 1=1 ' . $where;
        $stmt = $pdo->prepare($sql);
        $stmt->execute();
        $totaldata = $stmt->rowCount();

        return view('laporan/perlokasi/index', ['data' => 'submit', 'atributs' => $atributs, 'keterangan' => $keterangan, 'totaldata' => $totaldata, 'atributpenting_controller' => $atributpenting_controller, 'atributpenting_blade' => $atributpenting_blade, 'atributvariablepenting_controller' => $atributvariablepenting_controller, 'atributvariablepenting_blade' => $atributvariablepenting_blade, 'menu' => 'perlokasi']);
    }

    public function perLokasiData(Request $request)
    {
        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }
        $where = '';
        if(Session::get('lapperlokasi_filtermode') == 'jangkauantanggal'){
            if (Session::has('lapperlokasi_tanggalawal')) {
                $where .= ' AND waktu>=CONCAT(STR_TO_DATE("' . Session::get("lapperlokasi_tanggalawal") . '","%d/%m/%Y")," 00:00:00") AND waktu<=CONCAT(STR_TO_DATE("' . Session::get("lapperlokasi_tanggalakhir") . '","%d/%m/%Y")," 23:59:59")';
            }
        }else if(Session::get('lapperlokasi_filtermode') == 'berdasarkantanggal'){
            $tahun = Session::get('lapperlokasi_tahun');
            $bulan = Session::get('lapperlokasi_bulan');
            $tanggal = Session::get('lapperlokasi_tanggal');
            if ($tanggal != ''){
                $arrWherePerTanggal = array();
                for($i=0;$i<count($tanggal);$i++) {
                    $arrWherePerTanggal[$i] = '( waktu>="'.$tahun.'-'.$bulan.'-'.$tanggal[$i].' 00:00:00" AND waktu<="'.$tahun.'-'.$bulan.'-'.$tanggal[$i].' 23:59:59" )';
                }
                $where .= ' AND ( '.implode(' OR ',$arrWherePerTanggal).' )';
            }
            else {
                //cari hari terakhir pada bulan terpilih
                $firstDate = $tahun.'-'.$bulan.'-01';
                $lastDate = date("Y-m-t", strtotime($firstDate));

                $where .= ' AND waktu>="'.$firstDate.' 00:00:00" AND waktu<="'.$lastDate.' 23:59:59"';

            }
        }

        $lokasi = '';
        if (Session::has('lapperlokasi_lokasi')) {
            if (Session::get('lapperlokasi_lokasi') != '') {
                $lokasi = implode(',', Session::get('lapperlokasi_lokasi'));
                $where .= ' AND idpegawai IN (SELECT idpegawai FROM pegawailokasi WHERE idlokasi IN (' . $lokasi . ') )';
            }
        }

        $whereAtribut = '';
        $idatributnilai = '';
        if (Session::has('lapperlokasi_atribut')) {
            $atributs = Session::get('lapperlokasi_atribut');
            $idatributnilai = Utils::atributNilai($atributs);
            $whereAtribut .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $idatributnilai . ') )';
            $where .= ' AND idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $idatributnilai . ') )';
        }
        $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
        if ($batasan != '') {
            $whereAtribut .= ' AND id IN ' . $batasan;
        }

        if ($whereAtribut != '') {
            $whereAtribut = ' AND ' . substr($whereAtribut, 4);
        }

        $allatribut = Utils::getAllAtribut('controller', $whereAtribut);
        $atributpenting = $allatribut['atributpenting'];
        $atributvariablepenting = $allatribut['atributvariablepenting'];

        $pdo = DB::connection('perusahaan_db')->getPdo();
        $sql = 'CALL preparelaporanlokasiabsen(STR_TO_DATE("' . Session::get("lapperlokasi_tanggalawal") . '","%d/%m/%Y"),STR_TO_DATE("' . Session::get("lapperlokasi_tanggalakhir") . '","%d/%m/%Y"),:idlokasi,:idatributnilai)';
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idlokasi', $lokasi);
        $stmt->bindValue(':idatributnilai', $idatributnilai);
        $stmt->execute();

        $pdo = DB::connection('perusahaan_db')->getPdo();
        $stringcolumn = 'tanggal,namapegawai,pin,lokasi,'.$atributvariablepenting.'masukkeluar,alasan,terhitungkerja,status,mesin,lat,lon,konfirmasi'.$atributpenting;
        $columns = explode(',',$stringcolumn);
        $table = '(
                    SELECT
                        la.id,
                        la.idpegawai,
                        la.waktu,
                        la.waktu as tanggal,
                        p.nama as namapegawai,
                        p.pin,
                        ' . $atributvariablepenting . '
                        la.masukkeluar,
                        IFNULL(amk.alasan,"-") as alasan,
                        la.terhitungkerja,
                        la.status,
                        m.nama as mesin,
                        la.lat,
                        la.lon,
                        IFNULL(la.konfirmasi,"") as konfirmasi,
                        IFNULL(tp.lokasi,"") as lokasi
                        ' . $atributpenting . '
                    FROM
                        logabsen la
                        LEFT JOIN mesin m ON m.id=la.idmesin
                        LEFT JOIN alasanmasukkeluar amk ON amk.id=la.idalasanmasukkeluar
                        LEFT JOIN temp_preparelaporanlokasiabsen tp ON tp.idlogabsen=la.id,
                        _pegawailengkap _pa,
                        pegawai p
                    WHERE
                        p.id=la.idpegawai AND
                        p.del = "t" AND
                        _pa.id=p.id AND
                        (la.lat != "" or la.lon != "")
                    ) x';
        $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
        $stmt = $pdo->prepare($sql);
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        $totalData = $row['total'];
        $totalFiltered = $totalData;
        $limit = $request->input('length');
        $start = $request->input('start');
        $orderColumn = $columns[$request->input('order.0.column')];
        $orderAction = $request->input('order.0.dir');
        $orderBy = $orderColumn.' '.$orderAction;

        if(!empty($request->input('search.value'))){
            $search = $request->input('search.value');
            $where .= Utils::searchDatatableQuery($columns);
            $sql = 'SELECT COUNT(id) as total FROM '.$table.' WHERE 1=1 '.$where;
            $stmt = $pdo->prepare($sql);
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $search . '%');
                }
            }
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $totalFiltered = $row['total'];
        }

        $sql = 'SELECT * FROM '.$table.' WHERE 1=1 ' . $where . ' ORDER BY '.$orderBy.' LIMIT '.$limit. ' OFFSET '.$start;
        $stmt = $pdo->prepare($sql);
        if(!empty($request->input('search.value'))) {
            for($i=0;$i<count($columns);$i++) {
                if($columns[$i] != '') {
                    $stmt->bindValue(':' . $columns[$i], '%' . $request->input('search.value') . '%');
                }
            }
        }
        $stmt->execute();
        $originaldata = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $data = array();
        if(!empty($originaldata)){
            foreach($originaldata as $key){
                $tempdata['tanggal'] = $key['tanggal'];
                for($i=1;$i<count($columns);$i++){
                    if($columns[$i] == 'namapegawai') {
                        $tempdata[$columns[$i]] = '<span class=detailpegawai onclick=detailpegawai("'.$key['idpegawai'].'") style=cursor:pointer>'.$key['namapegawai'].'</span>';
                    }elseif($columns[$i] == 'masukkeluar' || $columns[$i] == 'status' || $columns[$i] == 'terhitungkerja') {
                        $kolom = $key[$columns[$i]] == 'v' ? 'valid' : ($key[$columns[$i]] == 'c' ? 'confirm' : $key[$columns[$i]] == 'na' ? 'notapprove' : $key[$columns[$i]]);
                        $tempdata[$columns[$i]] = Utils::labelKolom($kolom);
                    }elseif($columns[$i] == 'konfirmasi') {
                        $konfirmasi = '';
                        if (strpos($key[$columns[$i]], 'l') !== false) {
                            $konfirmasi .= trans('all.lokasitidakcocok').' ';
                        }
                        if (strpos($key[$columns[$i]], 'f') !== false) {
                            $konfirmasi .= trans('all.sampelwajahtidakcocok').' ';
                        }
                        $tempdata[$columns[$i]] = $konfirmasi;
                    }else{
                        $tempdata[$columns[$i]] = htmlentities($key[$columns[$i]]);
                    }
                }
                $data[] = $tempdata;
            }
        }
        return Utils::jsonDatatable($request->input('draw'),$totalData,$totalFiltered,$data);
    }

    public function excelPerLokasi(){
        if(Utils::cekHakakses('laporanperlokasi','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.perlokasi'));

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($rowPE['logokiri'] != '' OR $rowPE['logokanan'] != '' OR $rowPE['header_1_teks'] != '' OR $rowPE['header_2_teks'] != '' OR $rowPE['header_3_teks'] != '' OR $rowPE['header_4_teks'] != '' OR $rowPE['header_5_teks'] != '') {
                $b = 6; //b = baris
            } else {
                $b = 1;
            }

            $bt = $b; //variabel b tanggal dari sampai
            $b = $b + 1;

            //get atribut
            $allatribut = Utils::getAllAtribut('blade');
            $atributpenting_controller = ($allatribut['atributpenting_controller'] != '' ? explode('|', $allatribut['atributpenting_controller']) : '');
            $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
            $atributvariablepenting_controller = ($allatribut['atributvariablepenting_controller'] != '' ? explode('|', $allatribut['atributvariablepenting_controller']) : '');
            $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);
            $totalatributvariable = ($atributvariablepenting_controller != '' ? count($atributvariablepenting_controller) : 0);
            $totalatributpenting = ($atributpenting_controller != '' ? count($atributpenting_controller) : 0);

            //set atribut variable
            $i = 5;
            if ($atributvariablepenting_blade != '') {
                //looping untuk header
                foreach ($atributvariablepenting_blade as $key) {
                    if ($key != '') {
                        $hh = Utils::angkaToHuruf($i);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $key);
                        //lebar kolom
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);
                        //set bold
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->getFont()->setBold(true);
                        //style
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);

                        $i++;
                    }
                }
            }

            //set value kolom
            $h1 = Utils::angkaToHuruf($i);
            $h2 = Utils::angkaToHuruf($i + 1);
            $h3 = Utils::angkaToHuruf($i + 2);
            $h4 = Utils::angkaToHuruf($i + 3);
            $h5 = Utils::angkaToHuruf($i + 4);
            $h6 = Utils::angkaToHuruf($i + 5);
            $h7 = Utils::angkaToHuruf($i + 6);
            $h8 = Utils::angkaToHuruf($i + 7);

            //set atribut penting
            if ($atributpenting_blade != '') {
                //looping untuk header
                foreach ($atributpenting_blade as $key) {
                    if ($key != '') {
                        $hi = $i + 8;
                        $hh = Utils::angkaToHuruf($hi);
                        $objPHPExcel->getActiveSheet()->setCellValue($hh . $b, $key);
                        //lebar kolom
                        $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(25);
                        //set bold
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->getFont()->setBold(true);
                        //style
                        $objPHPExcel->getActiveSheet()->getStyle($hh . $b)->applyFromArray($styleArray);

                        $i++;
                    }
                }
            }

            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . $b, trans('all.tanggal'))
                        ->setCellValue('B' . $b, trans('all.pegawai'))
                        ->setCellValue('C' . $b, trans('all.pin'))
                        ->setCellValue('D' . $b, trans('all.lokasi'))
                        ->setCellValue($h1 . $b, trans('all.masukkeluar'))
                        ->setCellValue($h2 . $b, trans('all.alasan'))
                        ->setCellValue($h3 . $b, trans('all.terhitungkerja'))
                        ->setCellValue($h4 . $b, trans('all.status'))
                        ->setCellValue($h5 . $b, trans('all.mesin'))
                        ->setCellValue($h6 . $b, trans('all.lat'))
                        ->setCellValue($h7 . $b, trans('all.lon'))
                        ->setCellValue($h8 . $b, trans('all.konfirmasi'));

            $where = '';
            if(Session::get('lapperlokasi_filtermode') == 'jangkauantanggal'){
                if (Session::has('lapperlokasi_tanggalawal')) {
//                $where = ' AND DATE(la.waktu) BETWEEN STR_TO_DATE("' . Session::get("lapperlokasi_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("lapperlokasi_tanggalakhir") . '","%d/%m/%Y")';
                    $where .= ' AND la.waktu>=CONCAT(STR_TO_DATE("' . Session::get("lapperlokasi_tanggalawal") . '","%d/%m/%Y")," 00:00:00") AND la.waktu<=CONCAT(STR_TO_DATE("' . Session::get("lapperlokasi_tanggalakhir") . '","%d/%m/%Y")," 23:59:59")';
                }
            }else if(Session::get('lapperlokasi_filtermode') == 'berdasarkantanggal'){
                $tahun = Session::get('lapperlokasi_tahun');
                $bulan = Session::get('lapperlokasi_bulan');
                $tanggal = Session::get('lapperlokasi_tanggal');
                if ($tanggal != ''){
                    $arrWherePerTanggal = array();
                    for($i=0;$i<count($tanggal);$i++) {
                        $arrWherePerTanggal[$i] = '( la.waktu>="'.$tahun.'-'.$bulan.'-'.$tanggal[$i].' 00:00:00" AND la.waktu<="'.$tahun.'-'.$bulan.'-'.$tanggal[$i].' 23:59:59" )';
                    }
                    $where .= ' AND ( '.implode(' OR ',$arrWherePerTanggal).' )';
                }
                else {
                    //cari hari terakhir pada bulan terpilih
                    $firstDate = $tahun.'-'.$bulan.'-01';
                    $lastDate = date("Y-m-t", strtotime($firstDate));

                    $where .= ' AND la.waktu>="'.$firstDate.' 00:00:00" AND la.waktu<="'.$lastDate.' 23:59:59"';

                }
            }

            $lokasi = '';
            if (Session::has('lapperlokasi_lokasi')) {
                if (Session::get('lapperlokasi_lokasi') != '') {
                    $lokasi = implode(',', Session::get('lapperlokasi_lokasi'));
                    $where .= ' AND la.idpegawai IN (SELECT idpegawai FROM pegawailokasi WHERE idlokasi IN (' . $lokasi . ') )';
                }
            }

            $whereAtribut = '';
            $idatributnilai = '';
            if (Session::has('lapperlokasi_atribut')) {
                $atributs = Session::get('lapperlokasi_atribut');
                $idatributnilai = Utils::atributNilai($atributs);
                $whereAtribut .= ' AND id IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $idatributnilai . ') )';
            }
            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $whereAtribut .= ' AND id IN ' . $batasan;
            }

            if ($whereAtribut != '') {
                $whereAtribut = ' AND ' . substr($whereAtribut, 4);
            }

            $allatribut = Utils::getAllAtribut('controller', $whereAtribut);
            $atributpenting = $allatribut['atributpenting'];
            $atributvariablepenting = $allatribut['atributvariablepenting'];

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $sql = 'CALL preparelaporanlokasiabsen(STR_TO_DATE("' . Session::get("lapperlokasi_tanggalawal") . '","%d/%m/%Y"),STR_TO_DATE("' . Session::get("lapperlokasi_tanggalakhir") . '","%d/%m/%Y"),:idlokasi,:idatributnilai)';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':idlokasi', $lokasi);
            $stmt->bindValue(':idatributnilai', $idatributnilai);
            $stmt->execute();

            $sql = 'SELECT
                        (DATEDIFF(la.waktu,"1900-01-01")+2)+ROUND(time_to_sec(timediff(DATE_FORMAT(la.waktu,"%T"),"00:00:00"))/86400,9) as tanggal,
                        p.nama as namapegawai,
                        p.pin,
                        ' . $atributvariablepenting . '
                        la.masukkeluar,
                        IFNULL(amk.alasan,"-") as alasan,
                        la.terhitungkerja,
                        la.status,
                        m.nama as mesin,
                        la.lat,
                        la.lon,
                        IFNULL(la.konfirmasi,"") as konfirmasi,
                        IFNULL(tp.lokasi,"") as lokasi
                        ' . $atributpenting . '
                    FROM
                        logabsen la
                        LEFT JOIN mesin m ON m.id=la.idmesin
                        LEFT JOIN alasanmasukkeluar amk ON amk.id=la.idalasanmasukkeluar
                        LEFT JOIN temp_preparelaporanlokasiabsen tp ON tp.idlogabsen=la.id,
                        _pegawailengkap _pa,
                        pegawai p
                    WHERE
                        p.id=la.idpegawai AND
                        _pa.id=p.id AND
                        p.del = "t" AND
                        (la.lat != "" or la.lon != "")
                        ' . $where . '
                    ORDER BY
                        la.waktu DESC';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = $b + 1;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $konfirmasi = '';
                if (strpos($row['konfirmasi'], 'l') !== false) {
                    $konfirmasi .= trans('all.lokasitidakcocok');
                }
                if (strpos($row['konfirmasi'], 'f') !== false) {
                    $konfirmasi .= trans('all.sampelwajahtidakcocok');
                }
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['tanggal']);
                $objPHPExcel->getActiveSheet()->setCellValue('B' . $i, $row['namapegawai']);
                $objPHPExcel->getActiveSheet()->setCellValue('C' . $i, $row['pin']);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $i, $row['lokasi']);
                $objPHPExcel->getActiveSheet()->setCellValue($h1 . $i, $row['masukkeluar'] == 'm' ? trans('all.masuk') : trans('all.keluar'));
                $objPHPExcel->getActiveSheet()->setCellValue($h2 . $i, $row['alasan']);
                $objPHPExcel->getActiveSheet()->setCellValue($h3 . $i, $row['terhitungkerja'] == 'y' ? trans('all.ya') : trans('all.tidak'));
                $objPHPExcel->getActiveSheet()->setCellValue($h4 . $i, $row['status'] == 'v' ? trans('all.valid') : ($row['status'] == 'c' ? trans('all.konfirmasi') : trans('all.tidakvalid')));
                $objPHPExcel->getActiveSheet()->setCellValue($h5 . $i, $row['mesin']);
                $objPHPExcel->getActiveSheet()->setCellValue($h6 . $i, $row['lat']);
                $objPHPExcel->getActiveSheet()->setCellValue($h7 . $i, $row['lon']);
                $objPHPExcel->getActiveSheet()->setCellValue($h8 . $i, $konfirmasi);

                if($atributvariablepenting_controller != '') {
                    $z1 = 5; //huruf setelah kolom jamkerja
                    for ($j = 0; $j < $totalatributvariable; $j++) {
                        $hv = Utils::angkaToHuruf($z1);
                        $objPHPExcel->getActiveSheet()->setCellValue($hv . $i, $row[$atributvariablepenting_controller[$j]].' ');

                        $z1++;
                    }
                }

                if($atributpenting_controller != '') {
                    $z2 = 13 + $totalatributvariable; //iterasi untuk looping atribut penting 6 dari jumlah kolom fix
                    for ($j = 0; $j < $totalatributpenting; $j++) {

                        $hap = Utils::angkaToHuruf($z2);
                        $objPHPExcel->getActiveSheet()->setCellValue($hap . $i, $row[$atributpenting_controller[$j]].' ');

                        $z2++;
                    }
                }

                // format
                $objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getNumberFormat()->setFormatCode('DD/MM/YYYY HH:MM:SS');

                for ($j = 1; $j <= 12 + $totalatributvariable + $totalatributpenting; $j++) {
                    $huruf = Utils::angkaToHuruf($j);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $i)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $b)->applyFromArray($styleArray);
                    $objPHPExcel->getActiveSheet()->getStyle($huruf . $bt)->applyFromArray($styleArray);
                }

                $i++;
            }

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(20);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(50);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(50);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h1)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h2)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h3)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h4)->setWidth(12);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h5)->setWidth(25);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h6)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h7)->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension($h8)->setWidth(20);

            $heightgambar = 99;
            $widthgambar = 99;

            $cg1 = Utils::angkaToHuruf(12 + $totalatributvariable + $totalatributpenting);

            if ($rowPE['footerkiri_1_teks'] == '' AND $rowPE['footerkiri_2_teks'] == '' AND $rowPE['footerkiri_3_teks'] == '' AND $rowPE['footerkiri_5_teks'] == '' AND $rowPE['footerkiri_6_teks'] == '' AND $rowPE['footertengah_1_teks'] == '' AND $rowPE['footertengah_2_teks'] == '' AND $rowPE['footertengah_3_teks'] == '' AND $rowPE['footertengah_5_teks'] == '' AND $rowPE['footertengah_6_teks'] == '' AND $rowPE['footerkanan_1_teks'] == '' AND $rowPE['footerkanan_2_teks'] == '' AND $rowPE['footerkanan_3_teks'] == '' AND $rowPE['footerkanan_5_teks'] == '' AND $rowPE['footerkanan_6_teks'] == '') {
                $l = $i - 1;
            } else {
                $l = $i + 1;
                Utils::footerExcel($objPHPExcel,'kiri','A','B',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'tengah','F','G',$l,$rowPE);
                Utils::footerExcel($objPHPExcel,'kanan','K',$cg1,$l,$rowPE);

                $l = $i+3;
            }

            // password
            Utils::passwordExcel($objPHPExcel);

            if ($b != 2) {
                Utils::header5baris($objPHPExcel,$cg1,$rowPE);
            }

            //merge dan stylegaris range keterangan tanggal setelah header
            $objPHPExcel->getActiveSheet()->mergeCells('A' . $bt . ':' . $cg1 . $bt);
            // value
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $bt, trans('all.menampilkandatatanggal') . ' ' . Session::get("lapperlokasi_tanggalawal") . ' - ' . Session::get("lapperlokasi_tanggalakhir"));
            // center text
            $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            //font size
            $objPHPExcel->getActiveSheet()->getStyle('A' . $bt)->getFont()->setSize(14);

            //footer tanggal file dibuat
            date_default_timezone_set('Asia/Jakarta');
            $ft = $l + 2;
            $objPHPExcel->getActiveSheet()->setCellValue('A' . $ft, '*tanggal pembuatan file ' . date('d/m/Y H:i:s'));
            $objPHPExcel->getActiveSheet()->getStyle('A' . $ft)->getFont()->setItalic(true);

            if ($rowPE['logokiri'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                Utils::logoExcel('kiri',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,'A1');
            }

            if ($rowPE['logokanan'] != "") {
                $pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokanan'];
                Utils::logoExcel('kanan',$objPHPExcel,$pathlogo,$heightgambar,$widthgambar,$cg1.'1');
            }

            Utils::insertLogUser('Ekspor laporan per lokasi');
            Utils::setFileNameExcel(trans('all.perlokasi'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function pekerjaanInput(){
        if(Utils::cekHakakses('laporanpekerjaanuser','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }

            $tahun = Utils::tahunDropdown();
            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();

            $bulanterpilih = date('m');
            $tahunterpilih = date('Y');
            $datapekerjaankategori = Utils::getData(DB::connection('perusahaan_db')->getPdo(),'pekerjaankategori','id,nama','digunakan="y"','nama');
            $totalhari = cal_days_in_month(CAL_GREGORIAN,$bulanterpilih,$tahunterpilih);
            Utils::insertLogUser('akses menu laporan pekerjaan input');
            return view('laporan/pekerjaaninput/index', ['datapekerjaankategori' => $datapekerjaankategori, 'tahun' => $tahun, 'totalhari' => $totalhari, 'valuetglawalakhir' => $valuetglawalakhir, 'bulanterpilih' => $bulanterpilih, 'tahunterpilih' => $tahunterpilih, 'menu' => 'lappekerjaanuser']);
        } else {
            return redirect('/');
        }
    }

    public function submitPekerjaanInput(Request $request){
        if(!Utils::cekDateTime($request->tanggalawal) && !Utils::cekDateTime($request->tanggalakhir)){
            return redirect('laporan/pekerjaaninput');
        }

        Session::set('lappekerjaaninput_tanggalawal', $request->tanggalawal);
        Session::set('lappekerjaaninput_tanggalakhir', $request->tanggalakhir);
        Session::set('lappekerjaaninput_pegawai', $request->pegawai);
        Session::set('lappekerjaaninput_pekerjaankategori', $request->pekerjaankategori);

        $keteranganpekerjaan = ' '.trans('all.pekerjaan').' : '.Utils::getDataWhere(DB::connection('perusahaan_db')->getPdo(),'pekerjaankategori','nama','id',Session::get('lappekerjaaninput_pekerjaankategori'));

        $keteranganpegawai = '';
        if(Session::get('lappekerjaaninput_pegawai') != ''){
            $pegawai = '';
            $datapegawai = explode(',', Session::get('lappekerjaaninput_pegawai'));
            for($i=0;$i<count($datapegawai);$i++){
                $pegawai .= Utils::getNamaPegawai($datapegawai[$i]).', ';
            }
            $keteranganpegawai = ', '.trans('all.pegawai').' : '.substr($pegawai,0,-2);
        }

        $keterangan = trans('all.tanggal') . ' : ' . Session::get('lappekerjaaninput_tanggalawal') . ' - ' . Session::get('lappekerjaaninput_tanggalakhir') . $keteranganpekerjaan . $keteranganpegawai;

        //data untuk tabel nya
        $pdo = DB::connection('perusahaan_db')->getPdo();
        $pdo->setAttribute(PDO::ATTR_EMULATE_PREPARES, true);
        $sql = 'CALL preparelaporanpekerjaaninput(STR_TO_DATE(:tanggalawal,"%d/%m/%Y"), STR_TO_DATE(:tanggalakhir,"%d/%m/%Y"), :idpekerjaankategori, :atribut)';
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':tanggalawal', $request->tanggalawal);
        $stmt->bindValue(':tanggalakhir', $request->tanggalakhir);
        $stmt->bindValue(':idpekerjaankategori', $request->pekerjaankategori);
        $stmt->bindValue(':atribut', '');
        $stmt->execute();

        $sql = 'SELECT * FROM temp_pekerjaanitem';
        $stmt = $pdo->prepare($sql);
        $stmt->execute();
        $datapekerjaan = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $sqlselect = '';
        for($i=0;$i<count($datapekerjaan);$i++){
            $sqlselect .= ',kategoripekerjaan_'.$datapekerjaan[$i]['idpekerjaankategori'];
        }

        $where = '';
        if(Session::get('lappekerjaaninput_pegawai') != ''){
            $where .= ' AND p.id IN('.Session::get('lappekerjaaninput_pegawai').')';
        }

        if(Session::get('lappekerjaaninput_pengelola') != ''){
            $where .= ' AND pi.iduser IN('.implode(",",Session::get('lappekerjaaninput_pengelola')).')';
        }

        $sql = 'SELECT
                    p.id as idpegawai,
                    p.nama as pegawai
                    '.$sqlselect.'
                FROM
                    pegawai p,
                    temp_preparelaporanpekerjaaninput tlpi
                WHERE
                    tlpi.idpegawai=p.id'.$where;
        $stmt = $pdo->prepare($sql);
        $stmt->execute();
        $data = $stmt->fetchAll(PDO::FETCH_ASSOC);

        return view('laporan/pekerjaaninput/index', ['keterangan' => $keterangan, 'data' => $data, 'datapekerjaan' => $datapekerjaan, 'menu' => 'lappekerjaanuser']);
    }

    public function excelPekerjaanInput(){
        if(Utils::cekHakakses('laporanpekerjaanuser','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel,trans('all.pekerjaanuser'));

            //set value kolom
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A1', trans('all.pegawai'));
            $objPHPExcel->getActiveSheet()->getStyle('A1')->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(30);

            $pdo->setAttribute(PDO::ATTR_EMULATE_PREPARES, true);
            $sql = 'CALL preparelaporanpekerjaaninput(STR_TO_DATE(:tanggalawal,"%d/%m/%Y"), STR_TO_DATE(:tanggalakhir,"%d/%m/%Y"), :idpekerjaankategori, :atribut)';
            $stmt = $pdo->prepare($sql);
            $stmt->bindValue(':tanggalawal', Session::get('lappekerjaaninput_tanggalawal'));
            $stmt->bindValue(':tanggalakhir', Session::get('lappekerjaaninput_tanggalakhir'));
            $stmt->bindValue(':idpekerjaankategori', Session::get('lappekerjaaninput_pekerjaankategori'));
            $stmt->bindValue(':atribut', '');
            $stmt->execute();

            $sql = 'SELECT * FROM temp_pekerjaanitem';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $datapekerjaan = $stmt->fetchAll(PDO::FETCH_OBJ);
            $a = 2; //$a = angka; 2 karna dari b
            $i = 1;
            $sqlselect = '';
            foreach($datapekerjaan as $key){
                $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($a) . '1', $key->item);
                $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($a) . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension(Utils::angkaToHuruf($a))->setWidth(15);
                $sqlselect .= ',kategoripekerjaan_'.$key->idpekerjaankategori;
                $a++;
                $i++;
            }

            $where = '';
            if(Session::get('lappekerjaaninput_pegawai') != ''){
                $where .= ' AND p.id IN('.Session::get('lappekerjaaninput_pegawai').')';
            }

            $sql = 'SELECT
                        p.id as idpegawai,
                        p.nama as pegawai
                        '.$sqlselect.'
                    FROM
                        pegawai p,
                        temp_preparelaporanpekerjaaninput tlpi
                    WHERE
                        tlpi.idpegawai=p.id'.$where;
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['pegawai']);

                $a = 2; //$a = angka; 2 karna dari b
                $j = 1;
                foreach($datapekerjaan as $key){
                    $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($a) . $i, $row['kategoripekerjaan_'.$key->idpekerjaankategori].' '.$key->satuan);
                    $a++;
                    $j++;
                }

                $i++;
            }

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor pekerjaan pengguna');
            Utils::setFileNameExcel(trans('all.pekerjaanuser'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function excelBaru()
    {
        if(Utils::cekHakakses('laporan','l')){
//            $pdo = DB::connection('perusahaan_db')->getPdo();
//            $objPHPExcel = new PHPExcel();
//            Utils::setPropertiesExcel($objPHPExcel);
            $workbook = new PHPExcel();
            Utils::setPropertiesExcel($workbook);
//            $sheet = $workbook->getActiveSheet();

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $where = '';
            if (Session::has('laplogabsengrafik_tanggalawal')) {
//            $where .= ' WHERE DATE(waktu) BETWEEN STR_TO_DATE("' . Session::get("laplogabsengrafik_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("laplogabsengrafik_tanggalakhir") . '","%d/%m/%Y")';
                $where .= ' AND (ra.tanggal BETWEEN STR_TO_DATE("' . Session::get("laplogabsengrafik_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("laplogabsengrafik_tanggalakhir") . '","%d/%m/%Y"))';
            }
            if (Session::has('laplogabsengrafik_atribut')) {
                $atributs = Session::get('laplogabsengrafik_atribut');
                $atributnilai = Utils::atributNilai($atributs);
//            $where .= ' AND idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
                $where .= ' AND an.id IN (' . $atributnilai . ')';
            }

            $sql = 'SELECT
                  x.nama,
                  x.jumlahpekerja,
                  x.totaltransaksi,
                  x.tidakterlambat,
                  x.terlambat,
                  x.tidakabsen,
                  IF(x.totaltransaksi<=0,0,x.tidakterlambat*100/x.totaltransaksi) as persentase
                FROM
                (
                SELECT
                  an.nilai as nama,
                  COUNT(pa.idpegawai) as jumlahpekerja,
                  SUM(IF(ra.jadwalmasukkerja="y",1,0)) as totaltransaksi,
                  SUM(IF(ra.masukkerja="y" AND ra.jadwalmasukkerja="y" AND ra.selisihmasuk>=0,1,0)) as tidakterlambat,
                  SUM(IF(ra.masukkerja="y" AND ra.jadwalmasukkerja="y" AND ra.selisihmasuk<0,1,0)) as terlambat,
                  SUM(IF(ra.masukkerja="t" AND ra.jadwalmasukkerja="y",1,0)) as tidakabsen
                FROM
                  rekapabsen ra,
                  atribut a,
                  atributnilai an,
                  pegawaiatribut pa
                WHERE
                  ra.idpegawai=pa.idpegawai AND
                  pa.idatributnilai=an.id AND
                  an.idatribut=a.id
                  '.$where.'
                GROUP BY
                  an.id
                ) x
                ORDER BY
                  x.nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
//            $datagrafik = $stmt->fetchAll(PDO::FETCH_ASSOC);
//            contohdata
//            $sheet->fromArray(
//                array(
//                    array('Courses','Aa','Bb','Cc','Dd'),
//                    array('PHP','13','7','9','3'),
//                    array('JAVA','10','5','11','8'),
//                    array('ASP.NET','11','2','4','14'),
//                    array('C#','6','8','6','4'),
//                )
//            );

            $workbook->setActiveSheetIndex(0)
                    ->setCellValue('A1', trans('all.nama'))
                    ->setCellValue('B1', trans('all.totalpegawai'))
                    ->setCellValue('C1', trans('all.totalpresensi'))
                    ->setCellValue('D1', trans('all.tidakterlambat'))
                    ->setCellValue('E1', trans('all.terlambat'))
                    ->setCellValue('F1', trans('all.belumabsen'));

            $arrWidth = array('', 25, 15, 15, 15, 15, 15);
            for ($j = 1; $j <= 6; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $workbook->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            $labels = array(
//                new PHPExcel_Chart_DataSeriesValues('String', 'Worksheet!$A$2', null, 1),
//                new PHPExcel_Chart_DataSeriesValues('String', 'Worksheet!$A$3', null, 1),
//                new PHPExcel_Chart_DataSeriesValues('String', 'Worksheet!$A$4', null, 1),
//                new PHPExcel_Chart_DataSeriesValues('String', 'Worksheet!$A$5', null, 1),
//                new PHPExcel_Chart_DataSeriesValues('String', 'Worksheet!$A$6', null, 1),
            );
            $categories = array(
//                new PHPExcel_Chart_DataSeriesValues('String', 'Worksheet!$A$2:$A$5', null, 4),
                new PHPExcel_Chart_DataSeriesValues('String', 'Worksheet!$B$1:$F$1', null, 5),
            );
            $values = array(
//                new PHPExcel_Chart_DataSeriesValues('Number', 'Worksheet!$B$2:$B$5', null, 5),
//                new PHPExcel_Chart_DataSeriesValues('Number', 'Worksheet!$C$2:$C$5', null, 5),
//                new PHPExcel_Chart_DataSeriesValues('Number', 'Worksheet!$D$2:$D$5', null, 5),
//                new PHPExcel_Chart_DataSeriesValues('Number', 'Worksheet!$E$2:$E$5', null, 5),
//                new PHPExcel_Chart_DataSeriesValues('Number', 'Worksheet!$F$2:$F$5', null, 5),
            );

            $i = 2;
            $plotlabel = array();
            while($row = $stmt->fetch(PDO::FETCH_ASSOC)){
                $workbook->getActiveSheet()->setCellValue('A'.$i, $row['nama']);
                $workbook->getActiveSheet()->setCellValue('B'.$i, $row['jumlahpekerja']);
                $workbook->getActiveSheet()->setCellValue('C'.$i, $row['totaltransaksi']);
                $workbook->getActiveSheet()->setCellValue('D'.$i, $row['tidakterlambat']);
                $workbook->getActiveSheet()->setCellValue('E'.$i, $row['terlambat']);
                $workbook->getActiveSheet()->setCellValue('F'.$i, $row['tidakabsen']);

                $j = $i-2;
                //labels
                $labels[$j] = new PHPExcel_Chart_DataSeriesValues('String', 'Worksheet!$A$'.$i, null, 1);
                //values
                $values[$j] = new PHPExcel_Chart_DataSeriesValues('Number', 'Worksheet!$B$'.$i.':$F$'.$i, null, 5);
                //plot label
                $plotlabel[$j] = $j;

                $i++;
            }

            $series = new PHPExcel_Chart_DataSeries(
                PHPExcel_Chart_DataSeries::TYPE_BARCHART,     // plotType
                PHPExcel_Chart_DataSeries::GROUPING_STANDARD,  // plotGrouping
//                array(0,1,2,3,4,5),                                     // plotOrder
                $plotlabel,                                     // plotOrder
                $labels,                                        // plotLabel
                $categories,                                    // plotCategory
                $values                                         // plotValues
            );

            $series->setPlotDirection(PHPExcel_Chart_DataSeries::DIRECTION_COL);
            $layout1 = new PHPExcel_Chart_Layout();    // Create object of chart layout to set data label
            $layout1->setShowVal(TRUE);
            $plotarea = new PHPExcel_Chart_PlotArea($layout1, array($series));
            $title    = new PHPExcel_Chart_Title('Log Absen', null);
            $legend   = new PHPExcel_Chart_Legend(PHPExcel_Chart_Legend::POSITION_RIGHT, null, false);
            $xTitle   = new PHPExcel_Chart_Title('');
            $yTitle   = new PHPExcel_Chart_Title('');
            $chart    = new PHPExcel_Chart(
                'chart1',                                       // name
                $title,                                         // title
                $legend,                                        // legend
                $plotarea,                                      // plotArea
                true,                                           // plotVisibleOnly
                0,                                              // displayBlanksAs
                $xTitle,                                        // xAxisLabel
                $yTitle                                         // yAxisLabel
            );
            $chart->setTopLeftPosition('H2');
            if($i > 15) {
                $chart->setBottomRightPosition($huruf = Utils::angkaToHuruf($i+18).($i+18));
            } else {
                $chart->setBottomRightPosition('Z30');
            }
            $workbook->getActiveSheet()->addChart($chart);

            Utils::insertLogUser('Ekspor laporan grafik logabsen');
            Utils::setFileNameExcel('_laporan_grafik_logabsen');
            $writer = new PHPExcel_Writer_Excel2007($workbook);
            $writer->setIncludeCharts(TRUE);
            $writer->save('php://output');

//            //set value kolom
//            $objPHPExcel->setActiveSheetIndex(0)
//                        ->setCellValue('B3', 'April-17')
//                        ->setCellValue('A4', trans('all.nomor_singkat'))
//                        ->setCellValue('B4', trans('all.nama'))
//                        ->setCellValue('C4', 'LAST MONTH')
//                        ->setCellValue('G4', 'PRODUCE')
//                        ->setCellValue('C5', 'AL')
//                        ->setCellValue('D5', 'DP')
//                        ->setCellValue('E5', 'EO')
//                        ->setCellValue('F5', 'OWE')
//                        ->setCellValue('G5', 'AL')
//                        ->setCellValue('H5', 'DP')
//                        ->setCellValue('I5', 'EO');
//
//            //merge
//            $objPHPExcel->getActiveSheet()->mergeCells('A4:A5');
//            $objPHPExcel->getActiveSheet()->mergeCells('B4:B5');
//            $objPHPExcel->getActiveSheet()->mergeCells('C4:F4');
//            $objPHPExcel->getActiveSheet()->mergeCells('G4:I4');
//
//            //lebar
//            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(5);
//            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(15);
//            for ($j = 3; $j <= 10; $j++) {
//                $huruf = Utils::angkaToHuruf($j);
//                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth(5);
//            }
//
//            //center text
//            $objPHPExcel->getActiveSheet()->getStyle('A4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('A4')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('B4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('B4')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('C4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('G4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('C5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('D5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('E5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('F5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('G5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('H5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('I5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//
//            //data tergantung dari bulan yg dipilih
//            $objPHPExcel->getActiveSheet()->setCellValue('J4', 'data sesuai bulan yang di pilih');
//            $objPHPExcel->getActiveSheet()->setCellValue('J5', 'data sesuai bulan yang di pilih');
//
//
//            $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setWidth(50);
//
//
//            //akhir setelah data
//            $objPHPExcel->getActiveSheet()->setCellValue('K4', 'TAKEN');
//            $objPHPExcel->getActiveSheet()->setCellValue('K5', 'AL');
//            $objPHPExcel->getActiveSheet()->setCellValue('L5', 'DP');
//            $objPHPExcel->getActiveSheet()->setCellValue('M5', 'EO');
//            $objPHPExcel->getActiveSheet()->setCellValue('N5', 'PH');
//            $objPHPExcel->getActiveSheet()->setCellValue('O5', 'SL');
//            $objPHPExcel->getActiveSheet()->setCellValue('P4', 'CLOSING');
//            $objPHPExcel->getActiveSheet()->setCellValue('P5', 'AL');
//            $objPHPExcel->getActiveSheet()->setCellValue('Q5', 'DP');
//            $objPHPExcel->getActiveSheet()->setCellValue('R5', 'EO');
//            $objPHPExcel->getActiveSheet()->setCellValue('S4', 'OWE');
//            $objPHPExcel->getActiveSheet()->setCellValue('N3', 'PLAN');
//
//            //merge
//            $objPHPExcel->getActiveSheet()->mergeCells('K4:O4');
//            $objPHPExcel->getActiveSheet()->mergeCells('P4:R4');
//            $objPHPExcel->getActiveSheet()->mergeCells('N3:S3');
//
//            //lebar kolom
//            $objPHPExcel->getActiveSheet()->getColumnDimension('S')->setWidth(8);
//            for ($j = 11; $j <= 18; $j++) {
//                $huruf = Utils::angkaToHuruf($j);
//                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth(5);
//            }
//
//            //center text
//            $objPHPExcel->getActiveSheet()->getStyle('K4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('K5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('L5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('M5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('N5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('O5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('P4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('P5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('Q5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('R5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('S4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//            $objPHPExcel->getActiveSheet()->getStyle('N3')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//
//
//
//            //footer setelah data
//            $objPHPExcel->getActiveSheet()->setCellValue('A20', 'Important Notes:');
//            $objPHPExcel->getActiveSheet()->setCellValue('A21', 'Changes od schedule must obtain advance');
//            $objPHPExcel->getActiveSheet()->setCellValue('A22', 'aproval from the undersigned and failure');
//            $objPHPExcel->getActiveSheet()->setCellValue('A23', 'to follow will result to displinary action');
//            $objPHPExcel->getActiveSheet()->setCellValue('A25', 'Time Allocation:');
//            $objPHPExcel->getActiveSheet()->setCellValue('A26', '7 = 7.00 - 15.00');
//            $objPHPExcel->getActiveSheet()->setCellValue('D26', '12 = 12.00 - 20.00');
//            $objPHPExcel->getActiveSheet()->setCellValue('A27', '8 = 08.00 - 16.00');
//            $objPHPExcel->getActiveSheet()->setCellValue('D27', '15 = 15.00 - 23.00');
//            $objPHPExcel->getActiveSheet()->setCellValue('A28', '9 = 09.00 - 17.00');
//            $objPHPExcel->getActiveSheet()->setCellValue('D28', '23 = 23.00 - 07.00');
//            $objPHPExcel->getActiveSheet()->setCellValue('B31', 'PH Hindu');
//            $objPHPExcel->getActiveSheet()->setCellValue('A32', '4');
//            $objPHPExcel->getActiveSheet()->setCellValue('B32', 'Hari raya penampahan galungan');
//            $objPHPExcel->getActiveSheet()->setCellValue('A33', '5');
//            $objPHPExcel->getActiveSheet()->setCellValue('B33', 'Hari raya galungan');
//            $objPHPExcel->getActiveSheet()->setCellValue('A34', '6');
//            $objPHPExcel->getActiveSheet()->setCellValue('B34', 'Hari raya manis galungan');
//
//            header('Content-Type: application/vnd.ms-excel');
//            header('Content-Disposition: attachment;filename="' . time() . '_' . trans('all.harilibur') . '.xlsx"');
//            header('Cache-Control: max-age=0');
//            header('Cache-Control: max-age=1');
//
//            header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
//            header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT'); // always modified
//            header('Cache-Control: cache, must-revalidate'); // HTTP/1.1
//            header('Pragma: public'); // HTTP/1.0
//
//            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
//            $writer->save('php://output');
        }
    }

    public function laporanEksporPegawai()
    {
        if(Utils::cekHakakses('laporanlainnya','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $dataatribut = Utils::getData($pdo,'atribut','id,atribut','penting="y"','atribut');
            $dataatributvariable = Utils::getData($pdo,'atributvariable','id,atribut','penting="y"','atribut');
            Utils::insertLogUser('akses menu laporan ekspor pegawai');
            return view('laporan/lainnya/eksporpegawai/index', ['dataatribut' => $dataatribut, 'dataatributvariable' => $dataatributvariable, 'menu' => 'lainnya']);
        } else {
            return redirect('/');
        }
    }

    public function submitLaporanEksporPegawai(Request $request)
    {
        if(Utils::cekHakakses('laporanlainnya','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel,trans('all.pegawai'));

            $sql = 'SELECT * FROM parameterekspor';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $rowPE = $stmt->fetch(PDO::FETCH_ASSOC);

            $batasan = Utils::getBatasanAtribut(Session::get('iduser_perusahaan'), true);
            if ($batasan != '') {
                $batasan = ' AND id IN ' . $batasan;
            }

            $sql = 'CALL getpegawailengkap_controller(@_atributpenting, @_atributvariablepenting, "' . str_replace('"', "'", $batasan) . '")';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();

            $sql = 'SELECT @_atributpenting as atributpenting, @_atributvariablepenting as atributvariablepenting';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $atributpenting = $row['atributpenting'];
            $atributvariablepenting = $atributpenting != '' ? $row['atributvariablepenting'] : $row['atributvariablepenting'];

            //set value kolom
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.nomor_singkat'))
                        ->setCellValue('D1', trans('all.nama'))
                        ->setCellValue('E1', trans('all.pin'));

            $ih = 6; //ih = i header mulai dari 6 karena setelah E(5)

            $atributvariable = isset($request->atributvariable) ? $request->atributvariable : '';
            if($atributvariable != ''){
                for($i = 0;$i<count($atributvariable);$i++) {
                    $hh = Utils::angkaToHuruf($ih); //hh = hurufheader
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . '1', Utils::getDataWhere($pdo,'atributvariable', 'atribut', 'id',$atributvariable[$i]));
                    $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);
                    $ih++;
                }
            }

            $atribut = isset($request->atribut) ? $request->atribut : '';
            if($atribut != ''){
                for($i = 0;$i<count($atribut);$i++) {
                    $hh = Utils::angkaToHuruf($ih); //hh = hurufheader
                    $objPHPExcel->getActiveSheet()->setCellValue($hh . '1', Utils::getDataWhere($pdo,'atribut', 'atribut', 'id',$atribut[$i]));
                    $objPHPExcel->getActiveSheet()->getStyle($hh . '1')->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(30);
                    $ih++;
                }
            }

            $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($ih) . '1', trans('all.perusahaan'));
            $objPHPExcel->getActiveSheet()->getStyle(Utils::angkaToHuruf($ih) . '1')->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension(Utils::angkaToHuruf($ih))->setWidth(30);

            $sql = 'SELECT
                        p.id,
                        p.nama as namapegawai,
                        ' . $atributvariablepenting . '
                        p.pin
                        ' . $atributpenting . '
                    FROM
                        pegawai p,
                        _pegawailengkap _pa
                    WHERE
                        _pa.id=p.id AND
                        p.del = "t"
                    GROUP BY
                        p.id';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            $nomer = 1;
            $jarak = $i;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $jarak, $nomer);
                $objPHPExcel->getActiveSheet()->setCellValue('D' . $jarak, $row['namapegawai']);
                $objPHPExcel->getActiveSheet()->setCellValue('E' . $jarak, $row['pin']);

                //$pathlogo = Session::get('folderroot_perusahaan') . '/parameterekspor/' . $rowPE['logokiri'];
                $path = Session::get('folderroot_perusahaan').'/pegawai/'.Utils::id2Folder($row['id']).'/'.$row['id'];
                if (file_exists($path)) {
                    Utils::logoExcel('kiri',$objPHPExcel,$path,'100','100','B'.$jarak);
                }else{
                    $path= $_SERVER['DOCUMENT_ROOT'].'/'.config('consts.FOLDER_IMG').'/pegawai_nopic.png';
                    $objDrawing = new PHPExcel_Worksheet_MemoryDrawing();
                    $objDrawing->setName(trans('all.logo'));
                    $objDrawing->setDescription('Logo');
                    $objDrawing->setImageResource(imagecreatefrompng($path));
                    $objDrawing->setRenderingFunction(PHPExcel_Worksheet_MemoryDrawing::RENDERING_PNG);
                    $objDrawing->setMimeType(PHPExcel_Worksheet_MemoryDrawing::MIMETYPE_DEFAULT);
                    $objDrawing->setHeight(100);
                    $objDrawing->setWidth(100);
                    $objDrawing->setCoordinates('B'.$jarak);
                    $objDrawing->setOffsetX(0);
                    $objDrawing->setOffsetY(0);
                    $objDrawing->setWorksheet($objPHPExcel->getActiveSheet());
                }

                $iv = 6; // iv = i value
                if($atributvariable != ''){
                    for($j = 0;$j<count($atributvariable);$j++) {
                        $hv = Utils::angkaToHuruf($iv); //hh = hurufvalue
                        $objPHPExcel->getActiveSheet()->setCellValue($hv . $jarak, $row['_av_'.$atributvariable[$j]]);
                        $iv++;
                    }
                }

                if($atribut != ''){
                    for($j = 0;$j<count($atribut);$j++) {
                        $hv = Utils::angkaToHuruf($iv); //hh = hurufvalue
                        $objPHPExcel->getActiveSheet()->setCellValue($hv . $jarak, $row['_a_'.$atribut[$j]]);
                        $iv++;
                    }
                }

                $objPHPExcel->getActiveSheet()->setCellValue(Utils::angkaToHuruf($iv) . $jarak, Utils::getDataWhere(DB::getPdo(),'perusahaan','nama','id',Session::get('conf_webperusahaan')));

                $i++;
                $nomer++;
                $jarak = $jarak+6;
            }

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(3);
            $arrWidth = array('', 3, 7, 7, 40, 10);
            for ($j = 1; $j <= 5; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            // password
            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan ekspor pegawai');
            Utils::setFileNameExcel(trans('all.pegawai'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function excelLaporanEksporPegawai()
    {
        if(Utils::cekHakakses('laporanlainnya','l')){
            $pdo = DB::connection('perusahaan_db')->getPdo();
            $objPHPExcel = new PHPExcel();

            Utils::setPropertiesExcel($objPHPExcel,trans('all.pegawai'));

            //set value kolom
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A1', trans('all.nama'));

            $sql = 'SELECT
                        id,nama
                    FROM
                        pegawai
                    ORDER BY
                        nama';
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $i = 2;
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $objPHPExcel->getActiveSheet()->setCellValue('A' . $i, $row['nama']);

                $i++;
            }

            $arrWidth = array('', 25);
            for ($j = 1; $j <= 1; $j++) {
                $huruf = Utils::angkaToHuruf($j);
                $objPHPExcel->getActiveSheet()->getStyle($huruf . '1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension($huruf)->setWidth($arrWidth[$j]);
            }

            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan per pegawai');
            Utils::setFileNameExcel(trans('all.pegawai'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
    }

    public function aktivitas()
    {
        if(Utils::cekHakakses('laporankehadiran','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return redirect('/');
            }

            $tahun = Utils::tahunDropdown();
            $atributs = Utils::getAtribut();
            $valuetglawalakhir = Utils::valueTanggalAwalAkhir();

            $bulanterpilih = date('m');
            $tahunterpilih = date('Y');
            if(Session::has('lapkehadiran_bulan') && Session::has('lapkehadiran_tahun')){
                $bulanterpilih = Session::get('lapkehadiran_bulan');
                $tahunterpilih = Session::get('lapkehadiran_tahun');
            }
            $totalhari = cal_days_in_month(CAL_GREGORIAN,$bulanterpilih,$tahunterpilih);

            $pdo = DB::connection('perusahaan_db')->getPdo();
            $dataaktivitaskategori = Utils::getData($pdo,'aktivitas_kategori','id,nama','digunakan="y"',"nama");
            $aktivitaskategori = '';
            if(Session::has('lapaktivitas_idaktivitaskategori')){
                $aktivitaskategori = Session::get('lapaktivitas_idaktivitaskategori');
            }
            Utils::insertLogUser('akses menu laporan aktivitas');
            return view('laporan/aktivitas/index', ['data' => '', 'tahun' => $tahun, 'totalhari' => $totalhari, 'bulanterpilih' => $bulanterpilih, 'tahunterpilih' => $tahunterpilih, 'valuetglawalakhir' => $valuetglawalakhir, 'dataaktivitaskategori' => $dataaktivitaskategori, 'aktivitaskategori' => $aktivitaskategori, 'atributs' => $atributs, 'atributvariable' => '', 'atributpenting' => '', 'keterangan' => '', 'menu' => 'lapaktivitas']);
        } else {
            return redirect('/');
        }
    }

    public function submitAktivitas(Request $request)
    {
        if($request->filtermode == 'jangkauantanggal' && !Utils::cekDateTime($request->tanggalawal) && !Utils::cekDateTime($request->tanggalakhir)){
            return redirect('laporan/aktivitas');
        }

        if (Session::get('perusahaan_expired') == 'ya') {
            return '';
        }

        Session::set('lapaktivitas_idaktivitaskategori', $request->aktivitaskategori);
        Session::set('lapaktivitas_tanggalawal', $request->tanggalawal);
        Session::set('lapaktivitas_tanggalakhir', $request->tanggalakhir);
        Session::set('lapaktivitas_atribut', $request->atributnilai);
        Session::set('lapaktivitas_jenis', $request->jenis);
        Session::set('lapaktivitas_filtermode', $request->filtermode);

        $jenis = Session::get('lapaktivitas_jenis');
        $keteranganjenis = '';
        if ($jenis != '') {
            $keteranganjenis = ' ' . trans('all.jenis') . ' : ';
            for ($i = 0; $i < count($jenis); $i++) {
                $keteranganjenis .= trans('all.' . $jenis[$i]) . ', ';
            }
            $keteranganjenis = substr($keteranganjenis, 0, -2);
        }

        $atributs = Session::get('lapaktivitas_atribut');
        $atributnilai = Utils::atributNilai($atributs);
        $atributnilaiketerangan = '';
        if ($atributnilai != '') {
            $atributnilaidipilih = Utils::getAtributSelected($atributnilai);
            $atributnilaiketerangan = Utils::atributNilaiKeterangan($atributnilaidipilih);
        }

        $pdo = DB::connection('perusahaan_db')->getPdo();
        $sql = 'SELECT nama as kategori FROM aktivitas_kategori WHERE digunakan = \'y\' AND id=:idaktivitaskategori';
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idaktivitaskategori', $request->aktivitaskategori);
        $stmt->execute();
        $kategori = '';
        if($stmt->rowCount() > 0){
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $kategori = $row['kategori'];
        }

        if($request->filtermode == 'berdasarkantanggal') {
            $tahunterpilih = $request->tahun;
            $bulanterpilih = $request->bulan;
            $bulan = Utils::getBulan($request->bulan);
            $tanggal = implode(", ", $request->tanggal);
            $totalhari = cal_days_in_month(CAL_GREGORIAN, $bulanterpilih, $tahunterpilih);

            //cek jika totalhari dan tanggal yg terpilih sama(satu bulan penuh)
            if ($totalhari == count($request->tanggal)) {
                $tanggal = '';
            }

            //set session
            Session::set('lapaktivitas_tanggal', $request->tanggal);
            Session::set('lapaktivitas_bulan', $request->bulan);
            Session::set('lapaktivitas_tahun', $request->tahun);

            $keterangan = trans('all.kategori').': '.$kategori.', '.$tanggal . ' ' . $bulan . ' ' . $tahunterpilih . ' ' . $atributnilaiketerangan . $keteranganjenis;
        }else{
            $keterangan = trans('all.kategori').': '.$kategori.', '.trans('all.tanggal') . ' : ' . Session::get('lapaktivitas_tanggalawal') . ' - ' . Session::get('lapaktivitas_tanggalakhir') . $atributnilaiketerangan . $keteranganjenis;
        }

        $allatribut = Utils::getAllAtribut('blade');
        $atributpenting_controller = explode('|', $allatribut['atributpenting_controller']);
        $atributpenting_blade = explode('|', $allatribut['atributpenting_blade']);
        $atributvariablepenting_controller = explode('|', $allatribut['atributvariablepenting_controller']);
        $atributvariablepenting_blade = explode('|', $allatribut['atributvariablepenting_blade']);

        //total data
        $where = '';
        if (Session::has('lapaktivitas_tanggalawal')) {
            $where .= ' AND tanggal BETWEEN STR_TO_DATE("' . Session::get("lapaktivitas_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("lapaktivitas_tanggalakhir") . '","%d/%m/%Y")';
        }
        if (Session::has('lapaktivitas_atribut')) {
            $atributs = Session::get('lapaktivitas_atribut');
            $atributnilai = Utils::atributNilai($atributs);
            $where .= ' AND idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
        }

        $pdo = DB::connection('perusahaan_db')->getPdo();
        $sql = 'SELECT id FROM aktivitas_pegawai WHERE 1=1 ' . $where;
        $stmt = $pdo->prepare($sql);
        $stmt->execute();
        $totaldata = $stmt->rowCount();
        $data = $this->aktivitasData();
        return view('laporan/aktivitas/index', ['data' => $data, 'atributs' => $atributs, 'keterangan' => $keterangan, 'totaldata' => $totaldata, 'atributpenting_controller' => $atributpenting_controller, 'atributpenting_blade' => $atributpenting_blade, 'atributvariablepenting_controller' => $atributvariablepenting_controller, 'atributvariablepenting_blade' => $atributvariablepenting_blade, 'menu' => 'aktivitas']);
    }

    public function aktivitasData(){
        $pdo = DB::connection('perusahaan_db')->getPdo();
        $idaktivitaskategori = Session::get('lapaktivitas_idaktivitaskategori');
        $data = array();
        $data['header'] = array();
        $data['isi'] = array();

        // data header
        $sql = 'SELECT id,pertanyaan FROM aktivitas WHERE digunakan = "y" AND idaktivitaskategori = :idaktivitaskategori AND id IN(SELECT idaktivitas FROM aktivitas_pegawai_detail) ORDER BY urutan ASC, pertanyaan ASC';
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idaktivitaskategori', $idaktivitaskategori);
        $stmt->execute();
        if($stmt->rowCount() > 0){
            $data['header'] = $stmt->fetchAll(PDO::FETCH_OBJ);
        }

        // data isi
        $where = ''; // diisi filter atribut
        if(Session::get('lapaktivitas_filtermode') == 'jangkauantanggal'){
            if (Session::has('lapaktivitas_tanggalawal')) {
                $where .= ' AND tanggal BETWEEN STR_TO_DATE("' . Session::get("lapaktivitas_tanggalawal") . '","%d/%m/%Y") AND STR_TO_DATE("' . Session::get("lapaktivitas_tanggalakhir") . '","%d/%m/%Y")';
            }
        }else if(Session::get('lapaktivitas_filtermode') == 'berdasarkantanggal'){
            $tahun = Session::get('lapaktivitas_tahun');
            $bulan = Session::get('lapaktivitas_bulan');
            $tanggal = Session::get('lapaktivitas_tanggal');
            $wherePeriode = '';
            if ($tanggal != ''){
                for($i=0;$i<count($tanggal);$i++) {
                    $wherePeriode .= '"'. $tahun.'-'.$bulan.'-'.$tanggal[$i].'",';
                }
                if (strlen($wherePeriode)>0) {
                    $where .= ' AND tanggal IN ('.substr($wherePeriode, 0, strlen($wherePeriode)-1).')';
                }
            } else {
                $where .= ' AND year(tanggal)='.$tahun.' AND month(tanggal)='.$bulan;
            }
        }
        if (Session::has('lapaktivitas_atribut')) {
            $atributs = Session::get('lapaktivitas_atribut');
            $atributnilai = Utils::atributNilai($atributs);
            $where .= ' AND idpegawai IN (SELECT pa.idpegawai FROM pegawaiatribut pa WHERE pa.idatributnilai IN (' . $atributnilai . ') )';
        }
        $sql = 'SELECT id,DATE_FORMAT(tanggal,"%d/%m/%Y") as tanggal,idpegawai FROM aktivitas_pegawai WHERE idaktivitaskategori = :idaktivitaskategori '.$where;
        $stmt = $pdo->prepare($sql);
        $stmt->bindValue(':idaktivitaskategori', $idaktivitaskategori);
        $stmt->execute();
        $dataisi = array();
        if($stmt->rowCount() > 0){
            $i=0;
            while($row = $stmt->fetch(PDO::FETCH_ASSOC)){
                $dataisi[$i]['idpegawai'] = $row['idpegawai'];
                $dataisi[$i]['tanggal'] = $row['tanggal'];
                $dataisi[$i]['pegawai'] = Utils::getNamaPegawai($row['idpegawai']);
                // looping data sesuai header
                foreach($data['header'] as $key){
                    $dataisi[$i][$key->id] = "";
                }

                $sqldetail = 'SELECT idaktivitas,jawaban FROM aktivitas_pegawai_detail WHERE idaktivitaspegawai = :idaktivitaspegawai';
                $stmtdetail = $pdo->prepare($sqldetail);
                $stmtdetail->bindValue(':idaktivitaspegawai', $row['id']);
                $stmtdetail->execute();
                if($stmtdetail->rowCount() > 0){
                    while($rowdetail = $stmtdetail->fetch(PDO::FETCH_ASSOC)){
                        $dataisi[$i][$rowdetail['idaktivitas']] = $rowdetail['jawaban'];
                    }
                }
                $i++;
            }
        }
        $data['isi'] = $dataisi;
        return $data;
    }

    public function aktivitasExcel(){
        if(Utils::cekHakakses('laporankehadiran','l')){
            if (Session::get('perusahaan_expired') == 'ya') {
                return '';
            }

            $data = $this->aktivitasData();
            $objPHPExcel = new PHPExcel();

            //set css kolom
            $styleArray = array(
                'borders' => array(
                    'outline' => array(
                        'style' => PHPExcel_Style_Border::BORDER_THIN,
                        'color' => array('argb' => '000000'),
                    ),
                ),
            );

            Utils::setPropertiesExcel($objPHPExcel,trans('all.aktivitas'));

            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A1', trans('all.tanggal'))
                                                ->setCellValue('B1', trans('all.pegawai'));
            $objPHPExcel->getActiveSheet()->getStyle('A1')->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle('A1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getStyle('B1')->applyFromArray($styleArray);
            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(15);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(35);
            // data header
            $ih = 3; // i header (3 karena mulai dari C)
            foreach($data['header'] as $key){
                $hh = Utils::angkaToHuruf($ih); // hh = huruf header
                $objPHPExcel->getActiveSheet()->setCellValue($hh.'1', $key->pertanyaan);
                $objPHPExcel->getActiveSheet()->getStyle($hh.'1')->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle($hh.'1')->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getColumnDimension($hh)->setWidth(35);
                $ih++;
            }

            // data isi
            $b = 2; // baris
            for($i=0;$i<count($data['isi']);$i++){
                $objPHPExcel->getActiveSheet()->setCellValue('A'.$b, $data['isi'][$i]['tanggal']);
                $objPHPExcel->getActiveSheet()->setCellValue('B'.$b, $data['isi'][$i]['pegawai']);
                $objPHPExcel->getActiveSheet()->getStyle('A'.$b)->applyFromArray($styleArray);
                $objPHPExcel->getActiveSheet()->getStyle('B'.$b)->applyFromArray($styleArray);
                $ii = 3; // i isi (3 karena mulai dari C)
                foreach($data['header'] as $key){
                    $hi = Utils::angkaToHuruf($ii); // hi = huruf isi
                    $objPHPExcel->getActiveSheet()->setCellValue($hi.$b, $data['isi'][$i][$key->id]);
                    $objPHPExcel->getActiveSheet()->getStyle($hi.$b)->applyFromArray($styleArray);
                    $ii++;
                }
                $b++;
            }

            // password
            Utils::passwordExcel($objPHPExcel);
            Utils::insertLogUser('Ekspor laporan aktivitas');
            Utils::setFileNameExcel(trans('all.aktivitas'));
            $writer = new PHPExcel_Writer_Excel2007($objPHPExcel);
            $writer->save('php://output');
        }
        return '';
    }
}
